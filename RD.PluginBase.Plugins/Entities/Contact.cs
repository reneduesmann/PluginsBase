#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	/// <summary>
	/// Person, mit der eine Unternehmenseinheit eine Geschäftsbeziehung unterhält, wie z.B. ein Kunde, ein Lieferant und ein Kollege.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contact")]
	public partial class Contact : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the contact entity
		/// </summary>
		public partial class Fields
		{
			public const string Account_Primary_Contact = "Account_Primary_Contact";
			public const string AccountId = "accountid";
			public const string AccountIdName = "accountidname";
			public const string AccountIdYomiName = "accountidyominame";
			public const string AccountRoleCode = "accountrolecode";
			public const string AccountRoleCodename = "accountrolecodename";
			public const string Address1_AddressId = "address1_addressid";
			public const string Address1_AddressTypeCode = "address1_addresstypecode";
			public const string Address1_AddressTypeCodename = "address1_addresstypecodename";
			public const string Address1_City = "address1_city";
			public const string Address1_Composite = "address1_composite";
			public const string Address1_Country = "address1_country";
			public const string Address1_County = "address1_county";
			public const string Address1_Fax = "address1_fax";
			public const string Address1_FreightTermsCode = "address1_freighttermscode";
			public const string Address1_FreightTermsCodename = "address1_freighttermscodename";
			public const string Address1_Latitude = "address1_latitude";
			public const string Address1_Line1 = "address1_line1";
			public const string Address1_Line2 = "address1_line2";
			public const string Address1_Line3 = "address1_line3";
			public const string Address1_Longitude = "address1_longitude";
			public const string Address1_Name = "address1_name";
			public const string Address1_PostalCode = "address1_postalcode";
			public const string Address1_PostofficeBox = "address1_postofficebox";
			public const string Address1_PrimaryContactName = "address1_primarycontactname";
			public const string Address1_ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1_ShippingMethodCodename = "address1_shippingmethodcodename";
			public const string Address1_StateOrProvince = "address1_stateorprovince";
			public const string Address1_Telephone1 = "address1_telephone1";
			public const string Address1_Telephone2 = "address1_telephone2";
			public const string Address1_Telephone3 = "address1_telephone3";
			public const string Address1_UpsZone = "address1_upszone";
			public const string Address1_UtcOffset = "address1_utcoffset";
			public const string Address2_AddressId = "address2_addressid";
			public const string Address2_AddressTypeCode = "address2_addresstypecode";
			public const string Address2_AddressTypeCodename = "address2_addresstypecodename";
			public const string Address2_City = "address2_city";
			public const string Address2_Composite = "address2_composite";
			public const string Address2_Country = "address2_country";
			public const string Address2_County = "address2_county";
			public const string Address2_Fax = "address2_fax";
			public const string Address2_FreightTermsCode = "address2_freighttermscode";
			public const string Address2_FreightTermsCodename = "address2_freighttermscodename";
			public const string Address2_Latitude = "address2_latitude";
			public const string Address2_Line1 = "address2_line1";
			public const string Address2_Line2 = "address2_line2";
			public const string Address2_Line3 = "address2_line3";
			public const string Address2_Longitude = "address2_longitude";
			public const string Address2_Name = "address2_name";
			public const string Address2_PostalCode = "address2_postalcode";
			public const string Address2_PostofficeBox = "address2_postofficebox";
			public const string Address2_PrimaryContactName = "address2_primarycontactname";
			public const string Address2_ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2_ShippingMethodCodename = "address2_shippingmethodcodename";
			public const string Address2_StateOrProvince = "address2_stateorprovince";
			public const string Address2_Telephone1 = "address2_telephone1";
			public const string Address2_Telephone2 = "address2_telephone2";
			public const string Address2_Telephone3 = "address2_telephone3";
			public const string Address2_UpsZone = "address2_upszone";
			public const string Address2_UtcOffset = "address2_utcoffset";
			public const string Address3_AddressId = "address3_addressid";
			public const string Address3_AddressTypeCode = "address3_addresstypecode";
			public const string Address3_AddressTypeCodename = "address3_addresstypecodename";
			public const string Address3_City = "address3_city";
			public const string Address3_Composite = "address3_composite";
			public const string Address3_Country = "address3_country";
			public const string Address3_County = "address3_county";
			public const string Address3_Fax = "address3_fax";
			public const string Address3_FreightTermsCode = "address3_freighttermscode";
			public const string Address3_FreightTermsCodename = "address3_freighttermscodename";
			public const string Address3_Latitude = "address3_latitude";
			public const string Address3_Line1 = "address3_line1";
			public const string Address3_Line2 = "address3_line2";
			public const string Address3_Line3 = "address3_line3";
			public const string Address3_Longitude = "address3_longitude";
			public const string Address3_Name = "address3_name";
			public const string Address3_PostalCode = "address3_postalcode";
			public const string Address3_PostofficeBox = "address3_postofficebox";
			public const string Address3_PrimaryContactName = "address3_primarycontactname";
			public const string Address3_ShippingMethodCode = "address3_shippingmethodcode";
			public const string Address3_ShippingMethodCodename = "address3_shippingmethodcodename";
			public const string Address3_StateOrProvince = "address3_stateorprovince";
			public const string Address3_Telephone1 = "address3_telephone1";
			public const string Address3_Telephone2 = "address3_telephone2";
			public const string Address3_Telephone3 = "address3_telephone3";
			public const string Address3_UpsZone = "address3_upszone";
			public const string Address3_UtcOffset = "address3_utcoffset";
			public const string AdX_ConfirmRemovePassword = "adx_confirmremovepassword";
			public const string AdX_ConfirmRemovePasswordName = "adx_confirmremovepasswordname";
			public const string AdX_CreatedByIpAddress = "adx_createdbyipaddress";
			public const string AdX_CreatedByUsername = "adx_createdbyusername";
			public const string AdX_Identity_AccessFailedCount = "adx_identity_accessfailedcount";
			public const string AdX_Identity_EmailAddress1Confirmed = "adx_identity_emailaddress1confirmed";
			public const string AdX_Identity_EmailAddress1ConfirmedName = "adx_identity_emailaddress1confirmedname";
			public const string AdX_Identity_LastSuccessfulLogin = "adx_identity_lastsuccessfullogin";
			public const string AdX_Identity_LocalLoginDisabled = "adx_identity_locallogindisabled";
			public const string AdX_Identity_LocalLoginDisabledName = "adx_identity_locallogindisabledname";
			public const string AdX_Identity_LockoutEnabled = "adx_identity_lockoutenabled";
			public const string AdX_Identity_LockoutEnabledName = "adx_identity_lockoutenabledname";
			public const string AdX_Identity_LockoutEndDate = "adx_identity_lockoutenddate";
			public const string AdX_Identity_LogOnEnabled = "adx_identity_logonenabled";
			public const string AdX_Identity_LogOnEnabledName = "adx_identity_logonenabledname";
			public const string AdX_Identity_MobilePhoneConfirmed = "adx_identity_mobilephoneconfirmed";
			public const string AdX_Identity_MobilePhoneConfirmedName = "adx_identity_mobilephoneconfirmedname";
			public const string AdX_Identity_NewPassword = "adx_identity_newpassword";
			public const string AdX_Identity_PasswordHash = "adx_identity_passwordhash";
			public const string AdX_Identity_SecurityStamp = "adx_identity_securitystamp";
			public const string AdX_Identity_TwoFactorEnabled = "adx_identity_twofactorenabled";
			public const string AdX_Identity_TwoFactorEnabledName = "adx_identity_twofactorenabledname";
			public const string AdX_Identity_Username = "adx_identity_username";
			public const string AdX_ModifiedByIpAddress = "adx_modifiedbyipaddress";
			public const string AdX_ModifiedByUsername = "adx_modifiedbyusername";
			public const string AdX_OrganizationName = "adx_organizationname";
			public const string AdX_PreferredLanguageId = "adx_preferredlanguageid";
			public const string AdX_PreferredLanguageIdName = "adx_preferredlanguageidname";
			public const string AdX_PreferredLcId = "adx_preferredlcid";
			public const string AdX_ProfileAlert = "adx_profilealert";
			public const string AdX_ProfileAlertDate = "adx_profilealertdate";
			public const string AdX_ProfileAlertInstructions = "adx_profilealertinstructions";
			public const string AdX_ProfileAlertName = "adx_profilealertname";
			public const string AdX_ProfileIsAnonymous = "adx_profileisanonymous";
			public const string AdX_ProfileIsAnonymousName = "adx_profileisanonymousname";
			public const string AdX_ProfileLastActivity = "adx_profilelastactivity";
			public const string AdX_ProfileModifiedOn = "adx_profilemodifiedon";
			public const string AdX_PublicProfileCopy = "adx_publicprofilecopy";
			public const string AdX_TimeZone = "adx_timezone";
			public const string Aging30 = "aging30";
			public const string Aging30_Base = "aging30_base";
			public const string Aging60 = "aging60";
			public const string Aging60_Base = "aging60_base";
			public const string Aging90 = "aging90";
			public const string Aging90_Base = "aging90_base";
			public const string Anniversary = "anniversary";
			public const string AnnualIncome = "annualincome";
			public const string AnnualIncome_Base = "annualincome_base";
			public const string AssistantName = "assistantname";
			public const string AssistantPhone = "assistantphone";
			public const string Birthdate = "birthdate";
			public const string Business2 = "business2";
			public const string BusinessCard = "businesscard";
			public const string BusinessCardAttributes = "businesscardattributes";
			public const string Callback = "callback";
			public const string ChildrensNames = "childrensnames";
			public const string Company = "company";
			public const string Con_Account_Contact_AccountId = "con_account_contact_accountid";
			public const string Con_Account_Contact_StakeholderId = "con_account_contact_stakeholderid";
			public const string Con_AccountId = "con_accountid";
			public const string Con_AccountIdName = "con_accountidname";
			public const string Con_AccountIdYomiName = "con_accountidyominame";
			public const string Con_AccountsGHId = "con_accountsghid";
			public const string Con_AccountsGHIdName = "con_accountsghidname";
			public const string Con_AccountsMvZId = "con_accountsmvzid";
			public const string Con_AccountsMvZIdName = "con_accountsmvzidname";
			public const string Con_Age = "con_age";
			public const string Con_AgreeWithDataProtection = "con_agreewithdataprotection";
			public const string Con_AgreeWithDataProtectionName = "con_agreewithdataprotectionname";
			public const string Con_AreasOfInterestPersonaCode = "con_areasofinterestpersonacode";
			public const string Con_AreasOfInterestPersonaCodename = "con_areasofinterestpersonacodename";
			public const string Con_CompanyName = "con_companyname";
			public const string Con_ConfirmedDoI = "con_confirmeddoi";
			public const string Con_ConfirmedDoIName = "con_confirmeddoiname";
			public const string Con_ConsentNewsletter = "con_consentnewsletter";
			public const string Con_ConsentNewsletterName = "con_consentnewslettername";
			public const string Con_ConsultorWithOncologicalBillingNumber = "con_consultorwithoncologicalbillingnumber";
			public const string Con_Contact_Account_ContactId = "Con_Contact_Account_ContactId";
			public const string Con_Contact_Account_ManagingDoctorId = "Con_Contact_Account_ManagingDoctorId";
			public const string Con_ContactFunctionCode = "con_contactfunctioncode";
			public const string Con_ContactFunctionCodename = "con_contactfunctioncodename";
			public const string Con_ContactMvZId = "con_contactmvzid";
			public const string Con_ContactMvZIdName = "con_contactmvzidname";
			public const string Con_ConTAcToMnICampusId = "con_contactomnicampusid";
			public const string Con_ConTAcToMnICampusIdName = "con_contactomnicampusidname";
			public const string Con_ContactPosition = "con_contactposition";
			public const string Con_ContactsGHId = "con_contactsghid";
			public const string Con_ContactsGHIdName = "con_contactsghidname";
			public const string Con_CurrentIssuesProblems = "con_currentissuesproblems";
			public const string Con_CustomerTypeCode = "con_customertypecode";
			public const string Con_CustomerTypeCodename = "con_customertypecodename";
			public const string Con_CustomerTypeContactCode = "con_customertypecontactcode";
			public const string Con_CustomerTypeContactCodename = "con_customertypecontactcodename";
			public const string Con_DataSetSourceMvZ = "con_datasetsourcemvz";
			public const string Con_DataSetsOurCeoMnICampus = "con_datasetsourceomnicampus";
			public const string Con_DataSetSourcesGH = "con_datasetsourcesgh";
			public const string Con_DoNoTallowBulkEmailQI = "con_donotallowbulkemailqi";
			public const string Con_DoNoTallowBulkEmailQIName = "con_donotallowbulkemailqiname";
			public const string Con_DriverPersonaCode = "con_driverpersonacode";
			public const string Con_DriverPersonaCodename = "con_driverpersonacodename";
			public const string Con_GeBURTsTag = "con_geburtstag";
			public const string Con_GotPortalMessage = "con_gotportalmessage";
			public const string Con_GotPortalMessageName = "con_gotportalmessagename";
			public const string Con_HierarchyCode = "con_hierarchycode";
			public const string Con_HierarchyCodename = "con_hierarchycodename";
			public const string Con_InformationRecIEverCode = "con_informationrecievercode";
			public const string Con_InformationRecIEverCodename = "con_informationrecievercodename";
			public const string Con_InternalGastroenterologyNumber = "con_internalgastroenterologynumber";
			public const string Con_InternalOncologyNumber = "con_internaloncologynumber";
			public const string Con_LastActivityOn = "con_lastactivityon";
			public const string Con_LieferProgramm = "con_lieferprogramm";
			public const string Con_LieferProgrammName = "con_lieferprogrammname";
			public const string Con_MvZRoadblockCode = "con_mvzroadblockcode";
			public const string Con_MvZRoadblockCodename = "con_mvzroadblockcodename";
			public const string Con_OMnITestContact = "con_omnitestcontact";
			public const string Con_OMnITestContactName = "con_omnitestcontactname";
			public const string Con_OwnerMvZId = "con_ownermvzid";
			public const string Con_OwnerMvZIdName = "con_ownermvzidname";
			public const string Con_OwnerMvZIdYomiName = "con_ownermvzidyominame";
			public const string Con_OWNeRoMnICampusId = "con_owneromnicampusid";
			public const string Con_OWNeRoMnICampusIdName = "con_owneromnicampusidname";
			public const string Con_OWNeRoMnICampusIdYomiName = "con_owneromnicampusidyominame";
			public const string Con_OwnerQIId = "con_ownerqiid";
			public const string Con_OwnerQIIdName = "con_ownerqiidname";
			public const string Con_OwnerQIIdYomiName = "con_ownerqiidyominame";
			public const string Con_OwnersGHId = "con_ownersghid";
			public const string Con_OwnersGHIdName = "con_ownersghidname";
			public const string Con_OwnersGHIdYomiName = "con_ownersghidyominame";
			public const string Con_OwnerTeamMvZId = "con_ownerteammvzid";
			public const string Con_OwnerTeamMvZIdName = "con_ownerteammvzidname";
			public const string Con_OwnerTeamMvZIdYomiName = "con_ownerteammvzidyominame";
			public const string Con_OwnerTeaMoMnICampusId = "con_ownerteamomnicampusid";
			public const string Con_OwnerTeaMoMnICampusIdName = "con_ownerteamomnicampusidname";
			public const string Con_OwnerTeaMoMnICampusIdYomiName = "con_ownerteamomnicampusidyominame";
			public const string Con_OwnerTeamQIId = "con_ownerteamqiid";
			public const string Con_OwnerTeamQIIdName = "con_ownerteamqiidname";
			public const string Con_OwnerTeamQIIdYomiName = "con_ownerteamqiidyominame";
			public const string Con_OwnerTeaMsgHId = "con_ownerteamsghid";
			public const string Con_OwnerTeaMsgHiDnaMe = "con_ownerteamsghidname";
			public const string Con_OwnerTeaMsgHIdYomiName = "con_ownerteamsghidyominame";
			public const string Con_Position = "con_position";
			public const string Con_PositionCode = "con_positioncode";
			public const string Con_PositionCodename = "con_positioncodename";
			public const string Con_PositIoNdROrMt = "con_positiondrormt";
			public const string Con_PositIoNdRoRmTnAMe = "con_positiondrormtname";
			public const string Con_PositionMvZCode = "con_positionmvzcode";
			public const string Con_PositionMvZCodename = "con_positionmvzcodename";
			public const string Con_PositionName = "con_positionname";
			public const string Con_PraxisAssociationId = "con_praxisassociationid";
			public const string Con_PraxisAssociationIdName = "con_praxisassociationidname";
			public const string Con_ReasonForProcessingMvZ = "con_reasonforprocessingmvz";
			public const string Con_ReasonForProcessInGoMnICampus = "con_reasonforprocessingomnicampus";
			public const string Con_ReasonForProcessingSGH = "con_reasonforprocessingsgh";
			public const string Con_SalesAreaCode = "con_salesareacode";
			public const string Con_SalesAreaCodename = "con_salesareacodename";
			public const string Con_Salutation = "con_salutation";
			public const string Con_SalutationName = "con_salutationname";
			public const string Con_SendDoI = "con_senddoi";
			public const string Con_SendDoIName = "con_senddoiname";
			public const string Con_SentEmailFlow = "con_sentemailflow";
			public const string Con_SentEmailFlowName = "con_sentemailflowname";
			public const string Con_Shares = "con_shares";
			public const string Con_SpecialNeeds = "con_specialneeds";
			public const string Con_SpecialNeedsName = "con_specialneedsname";
			public const string Con_SpecialNeedsNumber = "con_specialneedsnumber";
			public const string Con_StakeholderCode = "con_stakeholdercode";
			public const string Con_StakeholderCodename = "con_stakeholdercodename";
			public const string Con_StakeholderId = "con_stakeholderid";
			public const string Con_StakeholderIdName = "con_stakeholderidname";
			public const string Con_StakeholderIdYomiName = "con_stakeholderidyominame";
			public const string Con_ToolkitCode = "con_toolkitcode";
			public const string Con_ToolkitCodename = "con_toolkitcodename";
			public const string Con_TriggerDoIdOn = "con_triggerdoidon";
			public const string Con_TriggerDoIdOnName = "con_triggerdoidonname";
			public const string Con_TriggerDoIProcessMvZ = "con_triggerdoiprocessmvz";
			public const string Con_TriggerDoIProcessMvZName = "con_triggerdoiprocessmvzname";
			public const string Con_TriggerDoIProcESSqI = "con_triggerdoiprocessqi";
			public const string Con_TriggerDoIProcESSqIName = "con_triggerdoiprocessqiname";
			public const string Con_VerKaUFsChanceNKOnTAkTeId = "con_verkaufschancenkontakteid";
			public const string Con_VerKaUFsChanceNKOnTAkTeIdName = "con_verkaufschancenkontakteidname";
			public const string Con_WIrKStOffVeRgLeIcHsLiSte = "con_wirkstoffvergleichsliste";
			public const string Con_WIrKStOffVeRgLeIcHsLiSteName = "con_wirkstoffvergleichslistename";
			public const string Con_WithoutOncologicalBillingApprovalNumber = "con_withoutoncologicalbillingapprovalnumber";
			public const string Contact_Customer_Accounts = "contact_customer_accounts";
			public const string ReferencingContact_Customer_Contacts = "contact_customer_contacts";
			public const string ReferencingContact_Master_Contact = "contact_master_contact";
			public const string ReferencingContact_Parent_Contact = "contact_parent_contact";
			public const string ContactId = "contactid";
			public const string Id = "contactid";
			public const string ContactQuotes_Association = "contactquotes_association";
			public const string CreatedBy = "createdby";
			public const string CreatedByExternalParty = "createdbyexternalparty";
			public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
			public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string CreditLimit_Base = "creditlimit_base";
			public const string CreditOnHold = "creditonhold";
			public const string CreditOnHoldName = "creditonholdname";
			public const string CustomerSizeCode = "customersizecode";
			public const string CustomerSizeCodename = "customersizecodename";
			public const string CustomerTypeCode = "customertypecode";
			public const string CustomerTypeCodename = "customertypecodename";
			public const string DefaultPriceLevelId = "defaultpricelevelid";
			public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
			public const string Department = "department";
			public const string Description = "description";
			public const string DoNotBulkEmail = "donotbulkemail";
			public const string DoNotBulkEmailName = "donotbulkemailname";
			public const string DoNotBulkPostalMail = "donotbulkpostalmail";
			public const string DoNotBulkPostalMailName = "donotbulkpostalmailname";
			public const string DoNotEmail = "donotemail";
			public const string DoNotEmailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMm = "donotsendmm";
			public const string EducationCode = "educationcode";
			public const string EducationCodename = "educationcodename";
			public const string EmailAddress1 = "emailaddress1";
			public const string EmailAddress2 = "emailaddress2";
			public const string EmailAddress3 = "emailaddress3";
			public const string EmployeeId = "employeeid";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_Url = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangerAte = "exchangerate";
			public const string ExternalUserIdentifier = "externaluseridentifier";
			public const string FamilyStatusCode = "familystatuscode";
			public const string FamilyStatusCodename = "familystatuscodename";
			public const string Fax = "fax";
			public const string FirstName = "firstname";
			public const string FollowEmail = "followemail";
			public const string FollowEmailName = "followemailname";
			public const string FtpSiteUrl = "ftpsiteurl";
			public const string FullName = "fullname";
			public const string GenderCode = "gendercode";
			public const string GenderCodename = "gendercodename";
			public const string GovernmentId = "governmentid";
			public const string HasChildrenCode = "haschildrencode";
			public const string HasChildrenCodename = "haschildrencodename";
			public const string Home2 = "home2";
			public const string IcB_VerAntWOrTLIcHFur = "icb_verantwortlichfur";
			public const string IcB_VerAntWOrTLIcHFurName = "icb_verantwortlichfurname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsBackOfficeCustomer = "isbackofficecustomer";
			public const string IsBackOfficeCustomerName = "isbackofficecustomername";
			public const string IsPrivateName = "isprivatename";
			public const string JobTitle = "jobtitle";
			public const string LastName = "lastname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string LeadSourceCode = "leadsourcecode";
			public const string LeadSourceCodename = "leadsourcecodename";
			public const string ManagerName = "managername";
			public const string ManagerPhone = "managerphone";
			public const string MarketingOnly = "marketingonly";
			public const string MarketingOnlyName = "marketingonlyname";
			public const string MasterContactIdName = "mastercontactidname";
			public const string MasterContactIdYomiName = "mastercontactidyominame";
			public const string MasterId = "masterid";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string MiddleName = "middlename";
			public const string MobilePhone = "mobilephone";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByExternalParty = "modifiedbyexternalparty";
			public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
			public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MSa_Contact_ManagingPartner = "msa_contact_managingpartner";
			public const string MSa_ManagingPartnerId = "msa_managingpartnerid";
			public const string MsA_ManagingPartnerIdName = "msa_managingpartneridname";
			public const string MsA_ManagingPartnerIdYomiName = "msa_managingpartneridyominame";
			public const string Msdyn_ContactKPiId = "msdyn_contactkpiid";
			public const string Msdyn_ContactKPiIdName = "msdyn_contactkpiidname";
			public const string Msdyn_DecisionInfluenceTag = "msdyn_decisioninfluencetag";
			public const string Msdyn_DecisionInfluenceTagName = "msdyn_decisioninfluencetagname";
			public const string Msdyn_DisableWebTracking = "msdyn_disablewebtracking";
			public const string Msdyn_DisableWebTrackingName = "msdyn_disablewebtrackingname";
			public const string Msdyn_GdPrOptOut = "msdyn_gdproptout";
			public const string Msdyn_GdPrOptOutName = "msdyn_gdproptoutname";
			public const string Msdyn_IsAssistantInorgChart = "msdyn_isassistantinorgchart";
			public const string Msdyn_IsAssistantInorgChartName = "msdyn_isassistantinorgchartname";
			public const string Msdyn_IsMinor = "msdyn_isminor";
			public const string Msdyn_IsMinorName = "msdyn_isminorname";
			public const string Msdyn_IsMinorWithParentalConsent = "msdyn_isminorwithparentalconsent";
			public const string Msdyn_IsMinorWithParentalConsentName = "msdyn_isminorwithparentalconsentname";
			public const string Msdyn_OrgChangeStatus = "msdyn_orgchangestatus";
			public const string Msdyn_OrgChangeStatusName = "msdyn_orgchangestatusname";
			public const string Msdyn_PortalTermsAgreementDate = "msdyn_portaltermsagreementdate";
			public const string Msdyn_PrimaryTimeZone = "msdyn_primarytimezone";
			public const string Msdyn_SegmentId = "msdyn_segmentid";
			public const string Msdyn_SegmentIdName = "msdyn_segmentidname";
			public const string MsdynCrm_ContactId = "msdyncrm_contactid";
			public const string MsdynCrm_ContactIdName = "msdyncrm_contactidname";
			public const string MsdynCrm_CustomerJourneyId = "msdyncrm_customerjourneyid";
			public const string MsdynCrm_CustomerJourneyIdName = "msdyncrm_customerjourneyidname";
			public const string MsdynCrm_EmailId = "msdyncrm_emailid";
			public const string MsdynCrm_EmailIdName = "msdyncrm_emailidname";
			public const string MsdynCrm_Insights_Placeholder = "msdyncrm_insights_placeholder";
			public const string MsdynCrm_MarketingFormId = "msdyncrm_marketingformid";
			public const string MsdynCrm_MarketingFormIdName = "msdyncrm_marketingformidname";
			public const string MsdynCrm_MarketingFormSubmissionDatePrecise = "msdyncrm_marketingformsubmissiondateprecise";
			public const string MsdynCrm_MarketingPageId = "msdyncrm_marketingpageid";
			public const string MsdynCrm_MarketingPageIdName = "msdyncrm_marketingpageidname";
			public const string MsdynCrm_RememberMe = "msdyncrm_rememberme";
			public const string MsdynCrm_RememberMeName = "msdyncrm_remembermename";
			public const string MsdynCrm_SegmentMemberId = "msdyncrm_segmentmemberid";
			public const string MsdynCrm_SegmentMemberIdName = "msdyncrm_segmentmemberidname";
			public const string MsDynMkt_CustomerJourneyId = "msdynmkt_customerjourneyid";
			public const string MsDynMkt_CustomerJourneyIdName = "msdynmkt_customerjourneyidname";
			public const string MsDynMkt_EmailId = "msdynmkt_emailid";
			public const string MsDynMkt_EmailIdName = "msdynmkt_emailidname";
			public const string MsDynMkt_MarketingFormId = "msdynmkt_marketingformid";
			public const string MsDynMkt_MarketingFormIdName = "msdynmkt_marketingformidname";
			public const string MSeVTmGt_AAdObjectId = "msevtmgt_aadobjectid";
			public const string MSeVTmGt_ContactId = "msevtmgt_contactid";
			public const string MSeVTmGt_ContactIdName = "msevtmgt_contactidname";
			public const string MSeVTmGt_OriginatingEventId = "msevtmgt_originatingeventid";
			public const string MSeVTmGt_OriginatingEventIdName = "msevtmgt_originatingeventidname";
			public const string MsFt_DataState = "msft_datastate";
			public const string MsFt_DataStateName = "msft_datastatename";
			public const string MsGdPr_ConsentChangeSourceFormId = "msgdpr_consentchangesourceformid";
			public const string MsGdPr_ConsentChangeSourceForMidName = "msgdpr_consentchangesourceformidname";
			public const string ReferencingMsGdPr_Contact_MsGdPr_GdPrParent = "msgdpr_contact_msgdpr_gdprparent";
			public const string MsGdPr_DoNotTrack = "msgdpr_donottrack";
			public const string MsGdPr_DoNotTrackName = "msgdpr_donottrackname";
			public const string MsGdPr_GdPrConsent = "msgdpr_gdprconsent";
			public const string MsGdPr_GdPrConsentName = "msgdpr_gdprconsentname";
			public const string MsGdPr_GdPrIsChild = "msgdpr_gdprischild";
			public const string MsGdPr_GdPrIsChildName = "msgdpr_gdprischildname";
			public const string MsGdPr_GdPrParentId = "msgdpr_gdprparentid";
			public const string MsGdPr_GdPrParentIdName = "msgdpr_gdprparentidname";
			public const string MsGdPr_GdPrParentIdYomiName = "msgdpr_gdprparentidyominame";
			public const string MsPp_UserPreferredLcId = "mspp_userpreferredlcid";
			public const string MsPp_UserPreferredLcIdName = "mspp_userpreferredlcidname";
			public const string Nickname = "nickname";
			public const string NumberOfChildren = "numberofchildren";
			public const string OC_MvZAge = "oc_mvzage";
			public const string OC_MvZAgeBandCode = "oc_mvzagebandcode";
			public const string OC_MvZAgeBandCodename = "oc_mvzagebandcodename";
			public const string OC_MvZSharesInPercent = "oc_mvzsharesinpercent";
			public const string OC_MvZYearOfBirth = "oc_mvzyearofbirth";
			public const string OC_OMnICampusAgreedWithDirectApproach = "oc_omnicampusagreedwithdirectapproach";
			public const string OC_OMnICampusAgreedWithDirectApproachName = "oc_omnicampusagreedwithdirectapproachname";
			public const string OC_OMnICampusCrmNumber = "oc_omnicampuscrmnumber";
			public const string OC_OMnICampusSendDoI = "oc_omnicampussenddoi";
			public const string OC_OMnICampusSendDoIName = "oc_omnicampussenddoiname";
			public const string OC_OMnICampusUsername = "oc_omnicampususername";
			public const string OC_OMnICampusWebCampusUserId = "oc_omnicampuswebcampususerid";
			public const string OC_OMnICampusWouldLikeToTakeParTinSurveys = "oc_omnicampuswouldliketotakepartinsurveys";
			public const string OC_OMnICampusWouldLikeToTakeParTinSurveysName = "oc_omnicampuswouldliketotakepartinsurveysname";
			public const string OC_PortAlanSpRecHPartnerGrUpPe = "oc_portalansprechpartnergruppe";
			public const string OC_PortAlanSpRecHPartnerGrUpPeName = "oc_portalansprechpartnergruppename";
			public const string OC_PortalVerAntWOrTLIcHkEITen = "oc_portalverantwortlichkeiten";
			public const string OC_UBeRTRAGunGLMs = "oc_ubertragunglms";
			public const string OC_UBeRTRAGunGLMsName = "oc_ubertragunglmsname";
			public const string OnHoldTime = "onholdtime";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Pager = "pager";
			public const string Parent_ContactId = "parent_contactid";
			public const string Parent_ContactIdName = "parent_contactidname";
			public const string Parent_ContactIdYomiName = "parent_contactidyominame";
			public const string ParentContactId = "parentcontactid";
			public const string ParentContactIdName = "parentcontactidname";
			public const string ParentContactIdYomiName = "parentcontactidyominame";
			public const string ParentCustomerId = "parentcustomerid";
			public const string ParentCustomerIdName = "parentcustomeridname";
			public const string ParentCustomerIdYomiName = "parentcustomeridyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodename = "paymenttermscodename";
			public const string PreferredAppointmentDayCode = "preferredappointmentdaycode";
			public const string PreferredAppointmentDayCodename = "preferredappointmentdaycodename";
			public const string PreferredAppointmentTimeCode = "preferredappointmenttimecode";
			public const string PreferredAppointmentTimeCodename = "preferredappointmenttimecodename";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodename = "preferredcontactmethodcodename";
			public const string PreferredEquipmentId = "preferredequipmentid";
			public const string PreferredEquipmentIdName = "preferredequipmentidname";
			public const string PreferredServiceId = "preferredserviceid";
			public const string PreferredServiceIdName = "preferredserviceidname";
			public const string PreferredSystemUserId = "preferredsystemuserid";
			public const string PreferredSystemUserIdName = "preferredsystemuseridname";
			public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
			public const string ProcessId = "processid";
			public const string Quote_Customer_Contacts = "Quote_Customer_Contacts";
			public const string ReferencedContact_Customer_Contacts = "ReferencedContact_Customer_Contacts";
			public const string ReferencedContact_Master_Contact = "ReferencedContact_Master_Contact";
			public const string ReferencedContact_Parent_Contact = "ReferencedContact_Parent_Contact";
			public const string ReferencedMsGdPr_Contact_MsGdPr_GdPrParent = "ReferencedMsGdPr_Contact_MsGdPr_GdPrParent";
			public const string Salutation = "salutation";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodename = "shippingmethodcodename";
			public const string SlaId = "slaid";
			public const string SlaInvokedId = "slainvokedid";
			public const string SlaInvokedIdName = "slainvokedidname";
			public const string SlaName = "slaname";
			public const string SpousesName = "spousesname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string SubscriptionId = "subscriptionid";
			public const string Suffix = "suffix";
			public const string TeamsFollowed = "teamsfollowed";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TerritoryCode = "territorycode";
			public const string TerritoryCodename = "territorycodename";
			public const string TimeSpentByMeOnEmailAndMeetings = "timespentbymeonemailandmeetings";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebsiteUrl = "websiteurl";
			public const string YomiFirstName = "yomifirstname";
			public const string YomiFullName = "yomifullname";
			public const string YomiLastName = "yomilastname";
			public const string YomiMiddleName = "yomimiddlename";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "contactid";
		
		public const string PrimaryNameAttribute = "fullname";
		
		public const string EntitySchemaName = "Contact";
		
		public const string EntityLogicalName = "contact";
		
		public const string EntityLogicalCollectionName = "contacts";
		
		public const string EntitySetName = "contacts";
		
		/// <summary>
		/// Eindeutiger Bezeichner der Firma, der der Kontakt zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidname")]
		public string AccountIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountidyominame")]
		public string AccountIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountid"))
				{
					return this.FormattedValues["accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Rolle des Kontakts innerhalb des Unternehmens oder Vertriebsprozesses aus (beispielsweise Entscheidungsträger, Mitarbeiter oder Schlüsselperson).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecode")]
		public virtual Contact_AccountRoleCode? AccountRoleCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_AccountRoleCode?)(EntityOptionSetEnum.GetEnum(this, "accountrolecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountrolecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecodename")]
		public string AccountRoleCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountrolecode"))
				{
					return this.FormattedValues["accountrolecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für 'Adresse 1'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
		public System.Nullable<System.Guid> Address1_AddressId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addressid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Art der primären Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
		public virtual Contact_Address1_AddressTypeCode? Address1_AddressTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address1_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecodename")]
		public string Address1_AddressTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_addresstypecode"))
				{
					return this.FormattedValues["address1_addresstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Ort für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
		public string Address1_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_city", value);
			}
		}
		
		/// <summary>
		/// Zeigt die vollständige primäre Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
		public string Address1_Composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Geben Sie das Land oder die Region für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
		public string Address1_Country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_country", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Verwaltungsbezirk für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
		public string Address1_County
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_county", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
		public string Address1_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_fax", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Lieferbedingungen für die primäre Adresse aus, um die ordnungsgemäße Verarbeitung von Versandaufträgen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
		public virtual Contact_Address1_FreightTermsCode? Address1_FreightTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address1_FreightTermsCode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscodename")]
		public string Address1_FreightTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_freighttermscode"))
				{
					return this.FormattedValues["address1_freighttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Breitengrad der primären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
		public System.Nullable<double> Address1_Latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_latitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die erste Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
		public string Address1_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die zweite Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
		public string Address1_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die dritte Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
		public string Address1_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Längengrad der primären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
		public System.Nullable<double> Address1_Longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_longitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie einen aussagekräftigen Namen für die primäre Adresse ein (beispielsweise 'Firmensitz').
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
		public string Address1_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_name", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postleitzahl (PLZ) für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
		public string Address1_PostalCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postalcode", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postfachnummer der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
		public string Address1_PostofficeBox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Hauptkontakts für die primäre Adresse der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string Address1_PrimaryContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public virtual Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address1_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcodename")]
		public string Address1_ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_shippingmethodcode"))
				{
					return this.FormattedValues["address1_shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Bundesland/den Kanton für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string Address1_StateOrProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
		public string Address1_Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
		public string Address1_Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
		public string Address1_Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die UPS-Zone der primären Adresse ein, um bei UPS-Versand eine korrekte Berechnung der Versandkosten sowie eine zeitnahe Abwicklung der Lieferungen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
		public string Address1_UpsZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_upszone", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zeitzone (oder den UTC-Offset) für diese Adresse aus, damit sie bei der Kontaktaufnahme mit einer Person unter dieser Adresse zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
		public System.Nullable<int> Address1_UtcOffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für 'Adresse 2'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
		public System.Nullable<System.Guid> Address2_AddressId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addressid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Art der sekundären Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
		public virtual Contact_Address2_AddressTypeCode? Address2_AddressTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address2_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecodename")]
		public string Address2_AddressTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_addresstypecode"))
				{
					return this.FormattedValues["address2_addresstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Ort für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
		public string Address2_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_city", value);
			}
		}
		
		/// <summary>
		/// Zeigt die vollständige sekundäre Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
		public string Address2_Composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Geben Sie das Land oder die Region für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
		public string Address2_Country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_country", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Verwaltungsbezirk für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
		public string Address2_County
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_county", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
		public string Address2_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_fax", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Lieferbedingungen für die sekundäre Adresse aus, um die ordnungsgemäße Verarbeitung von Versandaufträgen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
		public virtual Contact_Address2_FreightTermsCode? Address2_FreightTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address2_FreightTermsCode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscodename")]
		public string Address2_FreightTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_freighttermscode"))
				{
					return this.FormattedValues["address2_freighttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Breitengrad der sekundären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
		public System.Nullable<double> Address2_Latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_latitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die erste Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
		public string Address2_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die zweite Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
		public string Address2_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die dritte Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
		public string Address2_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Längengrad der sekundären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
		public System.Nullable<double> Address2_Longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_longitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie einen aussagekräftigen Namen für die sekundäre Adresse ein (beispielsweise 'Firmensitz').
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
		public string Address2_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_name", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postleitzahl (PLZ) für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
		public string Address2_PostalCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postalcode", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postfachnummer der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
		public string Address2_PostofficeBox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Hauptkontakts für die sekundäre Adresse der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string Address2_PrimaryContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public virtual Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address2_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcodename")]
		public string Address2_ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_shippingmethodcode"))
				{
					return this.FormattedValues["address2_shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Bundesland/den Kanton für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string Address2_StateOrProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
		public string Address2_Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
		public string Address2_Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
		public string Address2_Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die UPS-Zone der sekundären Adresse ein, um bei UPS-Versand eine korrekte Berechnung der Versandkosten sowie eine zeitnahe Abwicklung der Lieferungen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
		public string Address2_UpsZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_upszone", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zeitzone (oder den UTC-Offset) für diese Adresse aus, damit sie bei der Kontaktaufnahme mit einer Person unter dieser Adresse zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
		public System.Nullable<int> Address2_UtcOffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für 'Adresse 3'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addressid")]
		public System.Nullable<System.Guid> Address3_AddressId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address3_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_addressid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Art der dritten Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecode")]
		public virtual Contact_Address3_AddressTypeCode? Address3_AddressTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address3_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address3_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecodename")]
		public string Address3_AddressTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address3_addresstypecode"))
				{
					return this.FormattedValues["address3_addresstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Ort für die dritte Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_city")]
		public string Address3_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_city", value);
			}
		}
		
		/// <summary>
		/// Zeigt die vollständige dritte Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_composite")]
		public string Address3_Composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_composite");
			}
		}
		
		/// <summary>
		/// das Land oder die Region für die dritte Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_country")]
		public string Address3_Country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_country", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Verwaltungsbezirk für die dritte Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_county")]
		public string Address3_County
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_county", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die dritte Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_fax")]
		public string Address3_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_fax", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Lieferbedingungen für die dritte Adresse aus, um die ordnungsgemäße Verarbeitung von Versandaufträgen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscode")]
		public virtual Contact_Address3_FreightTermsCode? Address3_FreightTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address3_FreightTermsCode?)(EntityOptionSetEnum.GetEnum(this, "address3_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscodename")]
		public string Address3_FreightTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address3_freighttermscode"))
				{
					return this.FormattedValues["address3_freighttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Breitengrad der dritten Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_latitude")]
		public System.Nullable<double> Address3_Latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address3_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_latitude", value);
			}
		}
		
		/// <summary>
		/// die erste Zeile der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line1")]
		public string Address3_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line1", value);
			}
		}
		
		/// <summary>
		/// die zweite Zeile der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line2")]
		public string Address3_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line2", value);
			}
		}
		
		/// <summary>
		/// die dritte Zeile der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line3")]
		public string Address3_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_line3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Längengrad der dritten Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_longitude")]
		public System.Nullable<double> Address3_Longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address3_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_longitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie einen aussagekräftigen Namen für die dritte Adresse ein (beispielsweise Firmensitz).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_name")]
		public string Address3_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_name", value);
			}
		}
		
		/// <summary>
		/// die Postleitzahl der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postalcode")]
		public string Address3_PostalCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_postalcode", value);
			}
		}
		
		/// <summary>
		/// die Postfachnummer der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postofficebox")]
		public string Address3_PostofficeBox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Hauptkontakts für die dritte Adresse der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_primarycontactname")]
		public string Address3_PrimaryContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcode")]
		public virtual Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Address3_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address3_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcodename")]
		public string Address3_ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address3_shippingmethodcode"))
				{
					return this.FormattedValues["address3_shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Bundesland/Kanton der dritten Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_stateorprovince")]
		public string Address3_StateOrProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für die dritte Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone1")]
		public string Address3_Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für die dritte Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone2")]
		public string Address3_Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone3")]
		public string Address3_Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_telephone3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die UPS-Zone der dritten Adresse ein, um bei UPS-Versand eine korrekte Berechnung der Versandkosten sowie eine zeitnahe Abwicklung der Lieferungen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_upszone")]
		public string Address3_UpsZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address3_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_upszone", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zeitzone (oder den UTC-Offset) für diese Adresse aus, damit sie bei der Kontaktaufnahme mit einer Person unter dieser Adresse zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_utcoffset")]
		public System.Nullable<int> Address3_UtcOffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address3_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address3_utcoffset", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepassword")]
		public System.Nullable<bool> AdX_ConfirmRemovePassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_confirmremovepassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_confirmremovepassword", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepasswordname")]
		public string AdX_ConfirmRemovePasswordName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_confirmremovepassword"))
				{
					return this.FormattedValues["adx_confirmremovepassword"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string AdX_CreatedByIpAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string AdX_CreatedByUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyusername", value);
			}
		}
		
		/// <summary>
		/// Zeigt die aktuelle Zahl der fehlerhaften Anmeldeversuche für den Kontakt an.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
		public System.Nullable<int> AdX_Identity_AccessFailedCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_identity_accessfailedcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_accessfailedcount", value);
			}
		}
		
		/// <summary>
		/// Legt fest, ob die E-Mail vom Kontakt bestätigt wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
		public System.Nullable<bool> AdX_Identity_EmailAddress1Confirmed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_emailaddress1confirmed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_emailaddress1confirmed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmedname")]
		public string AdX_Identity_EmailAddress1ConfirmedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_emailaddress1confirmed"))
				{
					return this.FormattedValues["adx_identity_emailaddress1confirmed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt Datum und Uhrzeit der letzten erfolgreichen Anmeldung im Portal durch den Benutzer an.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
		public System.Nullable<System.DateTime> AdX_Identity_LastSuccessfulLogin
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lastsuccessfullogin");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lastsuccessfullogin", value);
			}
		}
		
		/// <summary>
		/// Gibt an, dass sich der Kontakt nicht mehr mit dem lokalen Konto im Portal anmelden kann.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
		public System.Nullable<bool> AdX_Identity_LocalLoginDisabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_locallogindisabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_locallogindisabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabledname")]
		public string AdX_Identity_LocalLoginDisabledName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_locallogindisabled"))
				{
					return this.FormattedValues["adx_identity_locallogindisabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Legt fest, ob dieser Kontakt die fehlerhaften Zugriffsversuche nachverfolgen kann und nach zu vielen Fehlversuchen gesperrt wird. Sie können diese Einstellung deaktivieren, wenn Sie verhindern möchten, dass der Kontakt gesperrt wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
		public System.Nullable<bool> AdX_Identity_LockoutEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_lockoutenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lockoutenabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabledname")]
		public string AdX_Identity_LockoutEnabledName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_lockoutenabled"))
				{
					return this.FormattedValues["adx_identity_lockoutenabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt den Zeitpunkt für die Aufhebung der Sperrung des Kontakts an.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
		public System.Nullable<System.DateTime> AdX_Identity_LockoutEndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_identity_lockoutenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_lockoutenddate", value);
			}
		}
		
		/// <summary>
		/// Legt fest, ob die Web-Authentifizierung für den Kontakt aktiviert ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabled")]
		public System.Nullable<bool> AdX_Identity_LogOnEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_logonenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_logonenabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabledname")]
		public string AdX_Identity_LogOnEnabledName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_logonenabled"))
				{
					return this.FormattedValues["adx_identity_logonenabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Legt fest, ob die Telefonnummer vom Kontakt bestätigt wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
		public System.Nullable<bool> AdX_Identity_MobilePhoneConfirmed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_mobilephoneconfirmed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmedname")]
		public string AdX_Identity_MobilePhoneConfirmedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_mobilephoneconfirmed"))
				{
					return this.FormattedValues["adx_identity_mobilephoneconfirmed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_newpassword")]
		public string AdX_Identity_NewPassword
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_newpassword");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_newpassword", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_passwordhash")]
		public string AdX_Identity_PasswordHash
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_passwordhash");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_passwordhash", value);
			}
		}
		
		/// <summary>
		/// Ein Token zur Verwaltung der Webauthentifizierungssitzung
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_securitystamp")]
		public string AdX_Identity_SecurityStamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_securitystamp");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_securitystamp", value);
			}
		}
		
		/// <summary>
		/// Legt fest, ob die zweistufige Authentifizierung für den Kontakt aktiviert ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
		public System.Nullable<bool> AdX_Identity_TwoFactorEnabled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_identity_twofactorenabled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_twofactorenabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabledname")]
		public string AdX_Identity_TwoFactorEnabledName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_identity_twofactorenabled"))
				{
					return this.FormattedValues["adx_identity_twofactorenabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt die Benutzeridentität für die lokale Webauthentifizierung an
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_username")]
		public string AdX_Identity_Username
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_identity_username");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_identity_username", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string AdX_ModifiedByIpAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string AdX_ModifiedByUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyusername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_organizationname")]
		public string AdX_OrganizationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_organizationname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_organizationname", value);
			}
		}
		
		/// <summary>
		/// Die bevorzugte Portalsprache des Benutzers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlanguageid")]
		public Microsoft.Xrm.Sdk.EntityReference AdX_PreferredLanguageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("adx_preferredlanguageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_preferredlanguageid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlanguageidname")]
		public string AdX_PreferredLanguageIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_preferredlanguageid"))
				{
					return this.FormattedValues["adx_preferredlanguageid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Das bevorzugte LCID-Portal des Benutzers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlcid")]
		public System.Nullable<int> AdX_PreferredLcId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_preferredlcid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_preferredlcid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealert")]
		public System.Nullable<bool> AdX_ProfileAlert
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_profilealert");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealert", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertdate")]
		public System.Nullable<System.DateTime> AdX_ProfileAlertDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilealertdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealertdate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertinstructions")]
		public string AdX_ProfileAlertInstructions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_profilealertinstructions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilealertinstructions", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertname")]
		public string AdX_ProfileAlertName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_profilealert"))
				{
					return this.FormattedValues["adx_profilealert"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymous")]
		public System.Nullable<bool> AdX_ProfileIsAnonymous
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("adx_profileisanonymous");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profileisanonymous", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymousname")]
		public string AdX_ProfileIsAnonymousName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("adx_profileisanonymous"))
				{
					return this.FormattedValues["adx_profileisanonymous"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilelastactivity")]
		public System.Nullable<System.DateTime> AdX_ProfileLastActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilelastactivity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilelastactivity", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilemodifiedon")]
		public System.Nullable<System.DateTime> AdX_ProfileModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("adx_profilemodifiedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_profilemodifiedon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_publicprofilecopy")]
		public string AdX_PublicProfileCopy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_publicprofilecopy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_publicprofilecopy", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_timezone")]
		public System.Nullable<int> AdX_TimeZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("adx_timezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_timezone", value);
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
		public Microsoft.Xrm.Sdk.Money Aging30
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
			}
		}
		
		/// <summary>
		/// Zeigt das in die standardmäßige Basiswährung des Systems konvertierte Feld 'Fälligkeit: 30'. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
		public Microsoft.Xrm.Sdk.Money Aging30_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
		public Microsoft.Xrm.Sdk.Money Aging60
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
			}
		}
		
		/// <summary>
		/// Zeigt das in die standardmäßige Basiswährung des Systems konvertierte Feld 'Fälligkeit: 60'. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
		public Microsoft.Xrm.Sdk.Money Aging60_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
		public Microsoft.Xrm.Sdk.Money Aging90
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
			}
		}
		
		/// <summary>
		/// Zeigt das in die standardmäßige Basiswährung des Systems konvertierte Feld 'Fälligkeit: 90'. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
		public Microsoft.Xrm.Sdk.Money Aging90_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Geben Sie das Datum des Hochzeitstags oder Dienstjubiläums des Kontakts ein, um es in Kundengeschenkprogrammen oder anderer Kommunikation verwenden zu können.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anniversary")]
		public System.Nullable<System.DateTime> Anniversary
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("anniversary");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("anniversary", value);
			}
		}
		
		/// <summary>
		/// Geben Sie das Jahreseinkommen des Kontakts ein. Diese Angabe wird bei der Profilerstellung und Finanzanalyse herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome")]
		public Microsoft.Xrm.Sdk.Money AnnualIncome
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("annualincome", value);
			}
		}
		
		/// <summary>
		/// Zeigt das in die standardmäßige Basiswährung des Systems konvertierte Feld 'Jahreseinkommen'. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome_base")]
		public Microsoft.Xrm.Sdk.Money AnnualIncome_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome_base");
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Assistenten des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantname")]
		public string AssistantName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("assistantname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("assistantname", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Telefonnummer des Assistenten des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantphone")]
		public string AssistantPhone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("assistantphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("assistantphone", value);
			}
		}
		
		/// <summary>
		/// Geben Sie das Geburtsdatum des Kontakts ein, um es in Kundengeschenkprogrammen oder anderer Kommunikation verwenden zu können.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("birthdate")]
		public System.Nullable<System.DateTime> Birthdate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("birthdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("birthdate", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite geschäftliche Telefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("business2")]
		public string Business2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("business2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("business2", value);
			}
		}
		
		/// <summary>
		/// Speichert Bild der Visitenkarte
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscard")]
		public string BusinessCard
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("businesscard");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesscard", value);
			}
		}
		
		/// <summary>
		/// Speichert Geschäftskarten-Steuerungseigenschaften.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscardattributes")]
		public string BusinessCardAttributes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("businesscardattributes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesscardattributes", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine Rückruf-Telefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("callback")]
		public string Callback
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("callback");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("callback", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Namen der Kinder des Kontakts ein, damit diese bei der Kommunikation und im Rahmen von Kundenprogrammen zur Verfügung stehen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childrensnames")]
		public string ChildrensNames
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("childrensnames");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("childrensnames", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Telefonnummer des Unternehmens des Kontakts an.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("company")]
		public string Company
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("company");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("company", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_accountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountidname")]
		public string Con_AccountIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountid"))
				{
					return this.FormattedValues["con_accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountidyominame")]
		public string Con_AccountIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountid"))
				{
					return this.FormattedValues["con_accountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_AccountsGHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_accountsghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountsghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsghidname")]
		public string Con_AccountsGHIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountsghid"))
				{
					return this.FormattedValues["con_accountsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// neu erstellt Verbindung zu Firma MZV
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsmvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_AccountsMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_accountsmvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountsmvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsmvzidname")]
		public string Con_AccountsMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountsmvzid"))
				{
					return this.FormattedValues["con_accountsmvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_age")]
		public System.Nullable<int> Con_Age
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("con_age");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_age", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_agreewithdataprotection")]
		public System.Nullable<bool> Con_AgreeWithDataProtection
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_agreewithdataprotection");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_agreewithdataprotection", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_agreewithdataprotectionname")]
		public string Con_AgreeWithDataProtectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_agreewithdataprotection"))
				{
					return this.FormattedValues["con_agreewithdataprotection"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_areasofinterestpersonacode")]
		public virtual System.Collections.Generic.IEnumerable<Con_AreasOfInterestPersonaCode> Con_AreasOfInterestPersonaCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_AreasOfInterestPersonaCode>(this, "con_areasofinterestpersonacode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_areasofinterestpersonacode", EntityOptionSetEnum.GetMultiEnum(this, "con_areasofinterestpersonacode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_areasofinterestpersonacodename")]
		public string Con_AreasOfInterestPersonaCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_areasofinterestpersonacode"))
				{
					return this.FormattedValues["con_areasofinterestpersonacode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_companyname")]
		public string Con_CompanyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_companyname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_companyname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_confirmeddoi")]
		public System.Nullable<bool> Con_ConfirmedDoI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_confirmeddoi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_confirmeddoi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_confirmeddoiname")]
		public string Con_ConfirmedDoIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_confirmeddoi"))
				{
					return this.FormattedValues["con_confirmeddoi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_consentnewsletter")]
		public System.Nullable<bool> Con_ConsentNewsletter
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_consentnewsletter");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_consentnewsletter", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_consentnewslettername")]
		public string Con_ConsentNewsletterName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_consentnewsletter"))
				{
					return this.FormattedValues["con_consentnewsletter"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_consultorwithoncologicalbillingnumber")]
		public System.Nullable<decimal> Con_ConsultorWithOncologicalBillingNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_consultorwithoncologicalbillingnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_consultorwithoncologicalbillingnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactfunctioncode")]
		public virtual System.Collections.Generic.IEnumerable<Con_ContactFunctionCode> Con_ContactFunctionCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_ContactFunctionCode>(this, "con_contactfunctioncode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactfunctioncode", EntityOptionSetEnum.GetMultiEnum(this, "con_contactfunctioncode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactfunctioncodename")]
		public string Con_ContactFunctionCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactfunctioncode"))
				{
					return this.FormattedValues["con_contactfunctioncode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactmvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ContactMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_contactmvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactmvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactmvzidname")]
		public string Con_ContactMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactmvzid"))
				{
					return this.FormattedValues["con_contactmvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactomnicampusid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ConTAcToMnICampusId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_contactomnicampusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactomnicampusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactomnicampusidname")]
		public string Con_ConTAcToMnICampusIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactomnicampusid"))
				{
					return this.FormattedValues["con_contactomnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactposition")]
		public string Con_ContactPosition
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_contactposition");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactposition", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactsghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ContactsGHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_contactsghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactsghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactsghidname")]
		public string Con_ContactsGHIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactsghid"))
				{
					return this.FormattedValues["con_contactsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_currentissuesproblems")]
		public string Con_CurrentIssuesProblems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_currentissuesproblems");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_currentissuesproblems", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecode")]
		public virtual Con_GlobalCustomerTypeCode? Con_CustomerTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_GlobalCustomerTypeCode?)(EntityOptionSetEnum.GetEnum(this, "con_customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecodename")]
		public string Con_CustomerTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customertypecode"))
				{
					return this.FormattedValues["con_customertypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecontactcode")]
		public virtual Con_CustomerTypeContactCode? Con_CustomerTypeContactCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_CustomerTypeContactCode?)(EntityOptionSetEnum.GetEnum(this, "con_customertypecontactcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customertypecontactcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecontactcodename")]
		public string Con_CustomerTypeContactCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customertypecontactcode"))
				{
					return this.FormattedValues["con_customertypecontactcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcemvz")]
		public string Con_DataSetSourceMvZ
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_datasetsourcemvz");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourcemvz", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourceomnicampus")]
		public string Con_DataSetsOurCeoMnICampus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_datasetsourceomnicampus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourceomnicampus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcesgh")]
		public string Con_DataSetSourcesGH
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_datasetsourcesgh");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourcesgh", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_donotallowbulkemailqi")]
		public System.Nullable<bool> Con_DoNoTallowBulkEmailQI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_donotallowbulkemailqi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_donotallowbulkemailqi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_donotallowbulkemailqiname")]
		public string Con_DoNoTallowBulkEmailQIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_donotallowbulkemailqi"))
				{
					return this.FormattedValues["con_donotallowbulkemailqi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_driverpersonacode")]
		public virtual System.Collections.Generic.IEnumerable<Con_DriverPersonaCode> Con_DriverPersonaCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_DriverPersonaCode>(this, "con_driverpersonacode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_driverpersonacode", EntityOptionSetEnum.GetMultiEnum(this, "con_driverpersonacode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_driverpersonacodename")]
		public string Con_DriverPersonaCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_driverpersonacode"))
				{
					return this.FormattedValues["con_driverpersonacode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_geburtstag")]
		public System.Nullable<System.DateTime> Con_GeBURTsTag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_geburtstag");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_geburtstag", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_gotportalmessage")]
		public System.Nullable<bool> Con_GotPortalMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_gotportalmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_gotportalmessage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_gotportalmessagename")]
		public string Con_GotPortalMessageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_gotportalmessage"))
				{
					return this.FormattedValues["con_gotportalmessage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_hierarchycode")]
		public virtual Con_HierarchyCode? Con_HierarchyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_HierarchyCode?)(EntityOptionSetEnum.GetEnum(this, "con_hierarchycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_hierarchycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_hierarchycodename")]
		public string Con_HierarchyCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_hierarchycode"))
				{
					return this.FormattedValues["con_hierarchycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_informationrecievercode")]
		public virtual System.Collections.Generic.IEnumerable<Con_InformationSeMpFNGeR> Con_InformationRecIEverCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_InformationSeMpFNGeR>(this, "con_informationrecievercode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_informationrecievercode", EntityOptionSetEnum.GetMultiEnum(this, "con_informationrecievercode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_informationrecievercodename")]
		public string Con_InformationRecIEverCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_informationrecievercode"))
				{
					return this.FormattedValues["con_informationrecievercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_internalgastroenterologynumber")]
		public System.Nullable<decimal> Con_InternalGastroenterologyNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_internalgastroenterologynumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_internalgastroenterologynumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_internaloncologynumber")]
		public System.Nullable<decimal> Con_InternalOncologyNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_internaloncologynumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_internaloncologynumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_lastactivityon")]
		public System.Nullable<System.DateTime> Con_LastActivityOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_lastactivityon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_lastactivityon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_lieferprogramm")]
		public virtual Con_LieferProgramm? Con_LieferProgramm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_LieferProgramm?)(EntityOptionSetEnum.GetEnum(this, "con_lieferprogramm")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_lieferprogramm", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_lieferprogrammname")]
		public string Con_LieferProgrammName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_lieferprogramm"))
				{
					return this.FormattedValues["con_lieferprogramm"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_mvzroadblockcode")]
		public virtual System.Collections.Generic.IEnumerable<Con_Roadblock> Con_MvZRoadblockCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_Roadblock>(this, "con_mvzroadblockcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_mvzroadblockcode", EntityOptionSetEnum.GetMultiEnum(this, "con_mvzroadblockcode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_mvzroadblockcodename")]
		public string Con_MvZRoadblockCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_mvzroadblockcode"))
				{
					return this.FormattedValues["con_mvzroadblockcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omnitestcontact")]
		public System.Nullable<bool> Con_OMnITestContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_omnitestcontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_omnitestcontact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omnitestcontactname")]
		public string Con_OMnITestContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_omnitestcontact"))
				{
					return this.FormattedValues["con_omnitestcontact"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownermvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownermvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzidname")]
		public string Con_OwnerMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownermvzid"))
				{
					return this.FormattedValues["con_ownermvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzidyominame")]
		public string Con_OwnerMvZIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownermvzid"))
				{
					return this.FormattedValues["con_ownermvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OWNeRoMnICampusId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_owneromnicampusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_owneromnicampusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusidname")]
		public string Con_OWNeRoMnICampusIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_owneromnicampusid"))
				{
					return this.FormattedValues["con_owneromnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusidyominame")]
		public string Con_OWNeRoMnICampusIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_owneromnicampusid"))
				{
					return this.FormattedValues["con_owneromnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerQIId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerqiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerqiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiidname")]
		public string Con_OwnerQIIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerqiid"))
				{
					return this.FormattedValues["con_ownerqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiidyominame")]
		public string Con_OwnerQIIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerqiid"))
				{
					return this.FormattedValues["con_ownerqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnersGHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownersghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownersghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghidname")]
		public string Con_OwnersGHIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownersghid"))
				{
					return this.FormattedValues["con_ownersghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghidyominame")]
		public string Con_OwnersGHIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownersghid"))
				{
					return this.FormattedValues["con_ownersghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeamMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteammvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteammvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzidname")]
		public string Con_OwnerTeamMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteammvzid"))
				{
					return this.FormattedValues["con_ownerteammvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzidyominame")]
		public string Con_OwnerTeamMvZIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteammvzid"))
				{
					return this.FormattedValues["con_ownerteammvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeaMoMnICampusId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamomnicampusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamomnicampusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusidname")]
		public string Con_OwnerTeaMoMnICampusIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamomnicampusid"))
				{
					return this.FormattedValues["con_ownerteamomnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusidyominame")]
		public string Con_OwnerTeaMoMnICampusIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamomnicampusid"))
				{
					return this.FormattedValues["con_ownerteamomnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeamQIId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamqiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamqiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiidname")]
		public string Con_OwnerTeamQIIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamqiid"))
				{
					return this.FormattedValues["con_ownerteamqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiidyominame")]
		public string Con_OwnerTeamQIIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamqiid"))
				{
					return this.FormattedValues["con_ownerteamqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeaMsgHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamsghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamsghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghidname")]
		public string Con_OwnerTeaMsgHiDnaMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamsghid"))
				{
					return this.FormattedValues["con_ownerteamsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghidyominame")]
		public string Con_OwnerTeaMsgHIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamsghid"))
				{
					return this.FormattedValues["con_ownerteamsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_position")]
		public virtual Contact_Con_Position? Con_Position
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Con_Position?)(EntityOptionSetEnum.GetEnum(this, "con_position")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_position", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positioncode")]
		public virtual System.Collections.Generic.IEnumerable<Con_PositIoCode> Con_PositionCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_PositIoCode>(this, "con_positioncode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_positioncode", EntityOptionSetEnum.GetMultiEnum(this, "con_positioncode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positioncodename")]
		public string Con_PositionCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_positioncode"))
				{
					return this.FormattedValues["con_positioncode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Definiert die Position (NUR OMNICAMPUS)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positiondrormt")]
		public virtual Contact_Con_PositIoNdROrMt? Con_PositIoNdROrMt
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Con_PositIoNdROrMt?)(EntityOptionSetEnum.GetEnum(this, "con_positiondrormt")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_positiondrormt", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positiondrormtname")]
		public string Con_PositIoNdRoRmTnAMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_positiondrormt"))
				{
					return this.FormattedValues["con_positiondrormt"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positionmvzcode")]
		public virtual Con_PositionMvZCode? Con_PositionMvZCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_PositionMvZCode?)(EntityOptionSetEnum.GetEnum(this, "con_positionmvzcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_positionmvzcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positionmvzcodename")]
		public string Con_PositionMvZCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_positionmvzcode"))
				{
					return this.FormattedValues["con_positionmvzcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_positionname")]
		public string Con_PositionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_position"))
				{
					return this.FormattedValues["con_position"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Verbund, zugeordnet zu Kontakt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_praxisassociationid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_PraxisAssociationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_praxisassociationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_praxisassociationid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_praxisassociationidname")]
		public string Con_PraxisAssociationIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_praxisassociationid"))
				{
					return this.FormattedValues["con_praxisassociationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingmvz")]
		public string Con_ReasonForProcessingMvZ
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_reasonforprocessingmvz");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingmvz", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingomnicampus")]
		public string Con_ReasonForProcessInGoMnICampus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_reasonforprocessingomnicampus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingomnicampus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingsgh")]
		public string Con_ReasonForProcessingSGH
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_reasonforprocessingsgh");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingsgh", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesareacode")]
		public virtual Con_SalesAreaCode? Con_SalesAreaCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SalesAreaCode?)(EntityOptionSetEnum.GetEnum(this, "con_salesareacode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_salesareacode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesareacodename")]
		public string Con_SalesAreaCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_salesareacode"))
				{
					return this.FormattedValues["con_salesareacode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salutation")]
		public virtual Contact_Con_Salutation? Con_Salutation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Con_Salutation?)(EntityOptionSetEnum.GetEnum(this, "con_salutation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_salutation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salutationname")]
		public string Con_SalutationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_salutation"))
				{
					return this.FormattedValues["con_salutation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_senddoi")]
		public System.Nullable<bool> Con_SendDoI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_senddoi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_senddoi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_senddoiname")]
		public string Con_SendDoIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_senddoi"))
				{
					return this.FormattedValues["con_senddoi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_sentemailflow")]
		public System.Nullable<bool> Con_SentEmailFlow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_sentemailflow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_sentemailflow", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_sentemailflowname")]
		public string Con_SentEmailFlowName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_sentemailflow"))
				{
					return this.FormattedValues["con_sentemailflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_shares")]
		public System.Nullable<decimal> Con_Shares
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_shares");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_shares", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_specialneeds")]
		public System.Nullable<bool> Con_SpecialNeeds
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_specialneeds");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_specialneeds", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_specialneedsname")]
		public string Con_SpecialNeedsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_specialneeds"))
				{
					return this.FormattedValues["con_specialneeds"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_specialneedsnumber")]
		public System.Nullable<decimal> Con_SpecialNeedsNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_specialneedsnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_specialneedsnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholdercode")]
		public virtual Con_StakeholderCode? Con_StakeholderCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StakeholderCode?)(EntityOptionSetEnum.GetEnum(this, "con_stakeholdercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_stakeholdercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholdercodename")]
		public string Con_StakeholderCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_stakeholdercode"))
				{
					return this.FormattedValues["con_stakeholdercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholderid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_StakeholderId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_stakeholderid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_stakeholderid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholderidname")]
		public string Con_StakeholderIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_stakeholderid"))
				{
					return this.FormattedValues["con_stakeholderid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholderidyominame")]
		public string Con_StakeholderIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_stakeholderid"))
				{
					return this.FormattedValues["con_stakeholderid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_toolkitcode")]
		public virtual Con_ToolkitCode? Con_ToolkitCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ToolkitCode?)(EntityOptionSetEnum.GetEnum(this, "con_toolkitcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_toolkitcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_toolkitcodename")]
		public string Con_ToolkitCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_toolkitcode"))
				{
					return this.FormattedValues["con_toolkitcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoidon")]
		public System.Nullable<bool> Con_TriggerDoIdOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_triggerdoidon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_triggerdoidon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoidonname")]
		public string Con_TriggerDoIdOnName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_triggerdoidon"))
				{
					return this.FormattedValues["con_triggerdoidon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoiprocessmvz")]
		public System.Nullable<bool> Con_TriggerDoIProcessMvZ
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_triggerdoiprocessmvz");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_triggerdoiprocessmvz", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoiprocessmvzname")]
		public string Con_TriggerDoIProcessMvZName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_triggerdoiprocessmvz"))
				{
					return this.FormattedValues["con_triggerdoiprocessmvz"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoiprocessqi")]
		public System.Nullable<bool> Con_TriggerDoIProcESSqI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_triggerdoiprocessqi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_triggerdoiprocessqi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_triggerdoiprocessqiname")]
		public string Con_TriggerDoIProcESSqIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_triggerdoiprocessqi"))
				{
					return this.FormattedValues["con_triggerdoiprocessqi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Verkaufschance, zugeordnet zu Kontakt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_verkaufschancenkontakteid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_VerKaUFsChanceNKOnTAkTeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_verkaufschancenkontakteid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_verkaufschancenkontakteid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_verkaufschancenkontakteidname")]
		public string Con_VerKaUFsChanceNKOnTAkTeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_verkaufschancenkontakteid"))
				{
					return this.FormattedValues["con_verkaufschancenkontakteid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wirkstoffvergleichsliste für Wiederkehrende Mrkt. Kampagne
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_wirkstoffvergleichsliste")]
		public System.Nullable<bool> Con_WIrKStOffVeRgLeIcHsLiSte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_wirkstoffvergleichsliste");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_wirkstoffvergleichsliste", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_wirkstoffvergleichslistename")]
		public string Con_WIrKStOffVeRgLeIcHsLiSteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_wirkstoffvergleichsliste"))
				{
					return this.FormattedValues["con_wirkstoffvergleichsliste"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_withoutoncologicalbillingapprovalnumber")]
		public System.Nullable<decimal> Con_WithoutOncologicalBillingApprovalNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_withoutoncologicalbillingapprovalnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_withoutoncologicalbillingapprovalnumber", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Kontakts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public System.Nullable<System.Guid> ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("contactid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ContactId = value;
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Zeigt die externe Partei, die den Datensatz erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
		public string CreatedByExternalPartyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
		public string CreatedByExternalPartyYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt Datum und Uhrzeit der Datensatzerstellung gemäß der Zeitzone, die in den Optionen von Microsoft Dynamics 365 ausgewählt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz im Auftrag eines anderen Benutzers erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Kreditlimit des Kontakts ein. Dies ist hilfreich bei der Bearbeitung von Rechnungs- und Buchungsproblemen mit dem Kunden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
		public Microsoft.Xrm.Sdk.Money CreditLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditlimit", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Feld 'Kreditlimit', das für die Berichterstellung in die standardmäßige Basiswährung des Systems konvertiert wurde. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
		public Microsoft.Xrm.Sdk.Money CreditLimit_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob für den Kontakt eine Kreditsperre besteht. Dies ist hilfreich bei der Bearbeitung von Rechnungs- und Buchungsproblemen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
		public System.Nullable<bool> CreditOnHold
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditonhold", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonholdname")]
		public string CreditOnHoldName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("creditonhold"))
				{
					return this.FormattedValues["creditonhold"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Größe des Unternehmens des Kontakts aus. Diese Angabe wird für die Segmentierung und bei der Berichterstellung verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
		public virtual Contact_CustomerSizeCode? CustomerSizeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_CustomerSizeCode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecodename")]
		public string CustomerSizeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("customersizecode"))
				{
					return this.FormattedValues["customersizecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Kategorie aus, die die Beziehung zwischen dem Kontakt und Ihrer Organisation am besten beschreibt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
		public virtual Contact_CustomerTypeCode? CustomerTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_CustomerTypeCode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecodename")]
		public string CustomerTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("customertypecode"))
				{
					return this.FormattedValues["customertypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die standardmäßige Preisliste aus, die diesem Kontakt zugeordnet ist, um sicherzustellen, dass Verkaufschancen, Angebote und Aufträge die korrekten Produktpreise für diesen Kunden enthalten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultPriceLevelId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultpricelevelid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelidname")]
		public string DefaultPriceLevelIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("defaultpricelevelid"))
				{
					return this.FormattedValues["defaultpricelevelid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die Abteilung oder Geschäftseinheit ein, in der der Kontakt innerhalb der übergeordneten Firma oder des übergeordneten Unternehmens tätig ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("department")]
		public string Department
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("department");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("department", value);
			}
		}
		
		/// <summary>
		/// Geben Sie zusätzliche beschreibende Informationen für den Kontakt ein (beispielsweise einen Auszug von der Website des Unternehmens).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Massen-E-Mails im Rahmen von Marketing- oder Schnellkampagnen akzeptiert. Bei 'Nicht zulassen' kann der Kontakt zwar Marketinglisten hinzugefügt werden, ist aber vom E-Mail-Versand ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
		public System.Nullable<bool> DoNotBulkEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemailname")]
		public string DoNotBulkEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotbulkemail"))
				{
					return this.FormattedValues["donotbulkemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Massensendungen im Rahmen von Marketing- oder Schnellkampagnen akzeptiert. Bei 'Nicht zulassen' kann der Kontakt zwar Marketinglisten hinzugefügt werden, ist aber vom Postversand ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public System.Nullable<bool> DoNotBulkPostalMail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkpostalmail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmailname")]
		public string DoNotBulkPostalMailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotbulkpostalmail"))
				{
					return this.FormattedValues["donotbulkpostalmail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Direktmailing von Microsoft Dynamics 365 zulässt. Bei "Nicht zulassen" sendet Microsoft Dynamics 365 keine E-Mail.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public System.Nullable<bool> DoNotEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemailname")]
		public string DoNotEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotemail"))
				{
					return this.FormattedValues["donotemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt den Versand von Faxnachrichten zulässt. Bei 'Nicht zulassen' kann der Kontakt zwar Marketinglisten hinzugefügt werden, ist aber von Faxaktivitäten im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public System.Nullable<bool> DoNotFax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotfax", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfaxname")]
		public string DoNotFaxName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotfax"))
				{
					return this.FormattedValues["donotfax"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Telefonanrufe zulässt. Bei 'Nicht zulassen' kann der Kontakt zwar Marketinglisten hinzugefügt werden, ist aber von Telefonanrufen im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public System.Nullable<bool> DoNotPhone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotphone", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphonename")]
		public string DoNotPhoneName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotphone"))
				{
					return this.FormattedValues["donotphone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt adressierte Werbesendungen zulässt. Bei 'Nicht zulassen' kann der Kontakt zwar Marketinglisten hinzugefügt werden, ist aber von Briefaktivitäten im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public System.Nullable<bool> DoNotPostalMail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotpostalmail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmailname")]
		public string DoNotPostalMailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotpostalmail"))
				{
					return this.FormattedValues["donotpostalmail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmarketingmaterialname")]
		public string DoNotSendMarketingMaterialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotsendmm"))
				{
					return this.FormattedValues["donotsendmm"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Marketingmaterial wie Broschüren oder Kataloge akzeptiert. Kontakte, die sich dagegen entscheiden, können von Marketinginitiativen ausgeschlossen werden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
		public System.Nullable<bool> DoNotSendMm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotsendmm", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie den höchsten Bildungsgrad des Kontakts aus. Diese Angabe wird für die Segmentierung und Analyse verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcode")]
		public virtual Contact_EducationCode? EducationCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_EducationCode?)(EntityOptionSetEnum.GetEnum(this, "educationcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("educationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcodename")]
		public string EducationCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("educationcode"))
				{
					return this.FormattedValues["educationcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die primäre E-Mail-Adresse für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
		public string EmailAddress1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die sekundäre E-Mail-Adresse für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
		public string EmailAddress2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine alternative E-Mail-Adresse für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
		public string EmailAddress3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Mitarbeiter-ID oder -nummer für den Kontakt zur Bezugnahme in Aufträgen, Serviceanfragen oder anderer Kommunikation mit der Organisation des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("employeeid")]
		public string EmployeeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("employeeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("employeeid", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Standardbild für den Datensatz.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_Url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Zeigt den Wechselkurs der Währung des Datensatzes. Mithilfe des Wechselkurses werden alle Betragsfelder des Datensatzes aus der lokalen Währung in die Standardwährung des Systems konvertiert.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Bezeichner für einen externen Benutzer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externaluseridentifier")]
		public string ExternalUserIdentifier
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externaluseridentifier");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("externaluseridentifier", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie den Familienstand des Kontakts aus, damit dieser bei nachbereitenden Telefonanrufen oder anderer Kommunikation zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscode")]
		public virtual Contact_FamilyStatusCode? FamilyStatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_FamilyStatusCode?)(EntityOptionSetEnum.GetEnum(this, "familystatuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("familystatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscodename")]
		public string FamilyStatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("familystatuscode"))
				{
					return this.FormattedValues["familystatuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
		public string Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("fax", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Vornamen des Kontakts ein, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
		public string FirstName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("firstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("firstname", value);
			}
		}
		
		/// <summary>
		/// Informationen darüber, ob das Verfolgen der E-Mail-Aktivität wie öffnen, Anhänge anzeigen und auf Links für E-Mails, die an den Kontakt gesendet wurden, klicken erlaubt ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
		public System.Nullable<bool> FollowEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("followemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailname")]
		public string FollowEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("followemail"))
				{
					return this.FormattedValues["followemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die URL für die FTP-Site des Kontakts ein, damit Benutzer auf Daten zugreifen und Dokumente teilen können.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
		public string FtpSiteUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ftpsiteurl", value);
			}
		}
		
		/// <summary>
		/// Kombiniert und zeigt den Vor- und Nachnamen des Kontakts, sodass in Ansichten und Berichten der vollständige Name angezeigt werden kann.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
		public string FullName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Wählen Sie das Geschlecht des Kontakts aus, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercode")]
		public virtual Contact_GenderCode? GenderCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_GenderCode?)(EntityOptionSetEnum.GetEnum(this, "gendercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("gendercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercodename")]
		public string GenderCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("gendercode"))
				{
					return this.FormattedValues["gendercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die Ausweisnummer oder eine andere Behörden-ID für den Kontakt ein. Diese Angabe wird in Dokumenten oder Berichten verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("governmentid")]
		public string GovernmentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("governmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("governmentid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt Kinder hat, damit diese Information bei nachbereitenden Telefonanrufen oder anderer Kommunikation zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencode")]
		public virtual Contact_HasChildrenCode? HasChildrenCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_HasChildrenCode?)(EntityOptionSetEnum.GetEnum(this, "haschildrencode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("haschildrencode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencodename")]
		public string HasChildrenCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("haschildrencode"))
				{
					return this.FormattedValues["haschildrencode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite private Telefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("home2")]
		public string Home2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("home2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("home2", value);
			}
		}
		
		/// <summary>
		/// Zur Markierung der verantwortlichen Mitarbeiter von OC für die verschiedenen QI-Bereiche
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_verantwortlichfur")]
		public virtual IcB_VerAntWOrTLIcHkEITenQIBeReich? IcB_VerAntWOrTLIcHFur
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((IcB_VerAntWOrTLIcHkEITenQIBeReich?)(EntityOptionSetEnum.GetEnum(this, "icb_verantwortlichfur")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("icb_verantwortlichfur", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_verantwortlichfurname")]
		public string IcB_VerAntWOrTLIcHFurName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("icb_verantwortlichfur"))
				{
					return this.FormattedValues["icb_verantwortlichfur"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Datenimports oder der Datenmigration, von dem/der dieser Datensatz erstellt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt in einem separaten Buchungssystem oder einem anderen System vorhanden ist (beispielsweise in Microsoft Dynamics GP oder einer anderen ERP-Datenbank). Diese Angabe wird in Integrationsprozessen verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomer")]
		public System.Nullable<bool> IsBackOfficeCustomer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbackofficecustomer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("isbackofficecustomer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomername")]
		public string IsBackOfficeCustomerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("isbackofficecustomer"))
				{
					return this.FormattedValues["isbackofficecustomer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string IsPrivateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die Position des Kontakts ein, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("jobtitle")]
		public string JobTitle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("jobtitle");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("jobtitle", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Nachnamen des Kontakts ein, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
		public string LastName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("lastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastname", value);
			}
		}
		
		/// <summary>
		/// Enthält den Datums- und Zeitstempel der letzten Zurückstellungszeit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Datum, an dem der Kontakt zuletzt Teil einer Marketing- oder Schnellkampagne war.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
		public System.Nullable<System.DateTime> LastUsedInCampaign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastusedincampaign", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die primäre Marketingquelle aus, über die der Kontakt zu Ihrer Organisation gelangt ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecode")]
		public virtual Contact_LeadSourceCode? LeadSourceCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_LeadSourceCode?)(EntityOptionSetEnum.GetEnum(this, "leadsourcecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("leadsourcecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecodename")]
		public string LeadSourceCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("leadsourcecode"))
				{
					return this.FormattedValues["leadsourcecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Vorgesetzten des Kontakts ein. Dieser wird bei der Eskalierung von Problemen oder bei der nachbereitenden Kommunikation mit dem Kontakt verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managername")]
		public string ManagerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("managername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("managername", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Telefonnummer des Vorgesetzten des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managerphone")]
		public string ManagerPhone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("managerphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("managerphone", value);
			}
		}
		
		/// <summary>
		/// Gibt an, ob es nur zum Marketing dient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
		public System.Nullable<bool> MarketingOnly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketingonly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonlyname")]
		public string MarketingOnlyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("marketingonly"))
				{
					return this.FormattedValues["marketingonly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mastercontactidname")]
		public string MasterContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("masterid"))
				{
					return this.FormattedValues["masterid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mastercontactidyominame")]
		public string MasterContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("masterid"))
				{
					return this.FormattedValues["masterid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Hauptkontakts zum Zusammenführen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference MasterId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Zeigt, ob die Firma mit einem Hauptkontakt zusammengeführt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public System.Nullable<bool> Merged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("merged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mergedname")]
		public string MergedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("merged"))
				{
					return this.FormattedValues["merged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den zweiten Vornamen oder das Initial des Kontakts ein, um sicherzustellen, dass die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("middlename")]
		public string MiddleName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("middlename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("middlename", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Mobiltelefonnummer für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilephone")]
		public string MobilePhone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("mobilephone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("mobilephone", value);
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz zuletzt aktualisiert hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Zeigt die externe Partei, die den Datensatz geändert hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
		public string ModifiedByExternalPartyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
		public string ModifiedByExternalPartyYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Datum und Uhrzeit der letzten Datensatzaktualisierung gemäß der Zeitzone, die in den Optionen von Microsoft Dynamics 365 ausgewählt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz im Auftrag eines anderen Benutzers zuletzt aktualisiert hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für das Konto, das dem Kontakt zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public Microsoft.Xrm.Sdk.EntityReference MSa_ManagingPartnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msa_managingpartnerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridname")]
		public string MsA_ManagingPartnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msa_managingpartnerid"))
				{
					return this.FormattedValues["msa_managingpartnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridyominame")]
		public string MsA_ManagingPartnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msa_managingpartnerid"))
				{
					return this.FormattedValues["msa_managingpartnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zugeordnet zu den Kontakt-KPI-Datensätzen
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiid")]
		public Microsoft.Xrm.Sdk.EntityReference Msdyn_ContactKPiId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_contactkpiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_contactkpiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiidname")]
		public string Msdyn_ContactKPiIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_contactkpiid"))
				{
					return this.FormattedValues["msdyn_contactkpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Kaufeinfluss mithilfe von Beschriftungen angeben
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetag")]
		public virtual Contact_Msdyn_DecisionInfluenceTag? Msdyn_DecisionInfluenceTag
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Msdyn_DecisionInfluenceTag?)(EntityOptionSetEnum.GetEnum(this, "msdyn_decisioninfluencetag")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_decisioninfluencetag", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetagname")]
		public string Msdyn_DecisionInfluenceTagName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_decisioninfluencetag"))
				{
					return this.FormattedValues["msdyn_decisioninfluencetag"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt an, dass der Kontakt sich für Webnachverfolgung entschieden hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
		public System.Nullable<bool> Msdyn_DisableWebTracking
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_disablewebtracking");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_disablewebtracking", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtrackingname")]
		public string Msdyn_DisableWebTrackingName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_disablewebtracking"))
				{
					return this.FormattedValues["msdyn_disablewebtracking"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Beschreibt, ob Kontakt ausgeschlossen ist oder nicht
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> Msdyn_GdPrOptOut
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_gdproptout", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
		public string Msdyn_GdPrOptOutName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_gdproptout"))
				{
					return this.FormattedValues["msdyn_gdproptout"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Beschreibt, ob der Kontakt ein Assistent im Organigramm ist
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchart")]
		public System.Nullable<bool> Msdyn_IsAssistantInorgChart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isassistantinorgchart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isassistantinorgchart", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchartname")]
		public string Msdyn_IsAssistantInorgChartName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_isassistantinorgchart"))
				{
					return this.FormattedValues["msdyn_isassistantinorgchart"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt an, dass der Kontakt in der entsprechenden Rechtsprechung als minderjährig gilt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminor")]
		public System.Nullable<bool> Msdyn_IsMinor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isminor", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorname")]
		public string Msdyn_IsMinorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_isminor"))
				{
					return this.FormattedValues["msdyn_isminor"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt an, dass der Kontakt in der entsprechenden Rechtsprechung als minderjährig gilt und die Zustimmung der Eltern vorliegt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
		public System.Nullable<bool> Msdyn_IsMinorWithParentalConsent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_isminorwithparentalconsent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_isminorwithparentalconsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsentname")]
		public string Msdyn_IsMinorWithParentalConsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_isminorwithparentalconsent"))
				{
					return this.FormattedValues["msdyn_isminorwithparentalconsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ob der Kontakt zur zugeordneten Firma gehört oder nicht
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
		public virtual Contact_Msdyn_OrgChangeStatus? Msdyn_OrgChangeStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_Msdyn_OrgChangeStatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_orgchangestatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_orgchangestatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatusname")]
		public string Msdyn_OrgChangeStatusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_orgchangestatus"))
				{
					return this.FormattedValues["msdyn_orgchangestatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt Datum und Uhrzeit an, zu der die Person den Portal-Bestimmungen zugestimmt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
		public System.Nullable<System.DateTime> Msdyn_PortalTermsAgreementDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msdyn_portaltermsagreementdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_portaltermsagreementdate", value);
			}
		}
		
		/// <summary>
		/// Gibt die primäre Zeitzone an, in der der Kontakt arbeitet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
		public System.Nullable<int> Msdyn_PrimaryTimeZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_primarytimezone", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für das Segment, das contact zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference Msdyn_SegmentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_segmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
		public string Msdyn_SegmentIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_segmentid"))
				{
					return this.FormattedValues["msdyn_segmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für eine E-Mail mit schneller Zusendung, der dem Kontakt zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_contactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_contactidname")]
		public string MsdynCrm_ContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_contactid"))
				{
					return this.FormattedValues["msdyncrm_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_customerjourneyid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_CustomerJourneyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_customerjourneyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_customerjourneyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_customerjourneyidname")]
		public string MsdynCrm_CustomerJourneyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_customerjourneyid"))
				{
					return this.FormattedValues["msdyncrm_customerjourneyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_emailid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_EmailId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_emailid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_emailid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_emailidname")]
		public string MsdynCrm_EmailIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_emailid"))
				{
					return this.FormattedValues["msdyncrm_emailid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_insights_placeholder")]
		public string MsdynCrm_Insights_Placeholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyncrm_insights_placeholder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_insights_placeholder", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_marketingformid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_MarketingFormId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_marketingformid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_marketingformid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_marketingformidname")]
		public string MsdynCrm_MarketingFormIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_marketingformid"))
				{
					return this.FormattedValues["msdyncrm_marketingformid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_marketingformsubmissiondateprecise")]
		public string MsdynCrm_MarketingFormSubmissionDatePrecise
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyncrm_marketingformsubmissiondateprecise");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_marketingformsubmissiondateprecise", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_marketingpageid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_MarketingPageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_marketingpageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_marketingpageid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_marketingpageidname")]
		public string MsdynCrm_MarketingPageIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_marketingpageid"))
				{
					return this.FormattedValues["msdyncrm_marketingpageid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_rememberme")]
		public System.Nullable<bool> MsdynCrm_RememberMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyncrm_rememberme");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_rememberme", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_remembermename")]
		public string MsdynCrm_RememberMeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_rememberme"))
				{
					return this.FormattedValues["msdyncrm_rememberme"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für das Segment, das dem Kontakt zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_segmentmemberid")]
		public Microsoft.Xrm.Sdk.EntityReference MsdynCrm_SegmentMemberId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyncrm_segmentmemberid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_segmentmemberid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_segmentmemberidname")]
		public string MsdynCrm_SegmentMemberIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyncrm_segmentmemberid"))
				{
					return this.FormattedValues["msdyncrm_segmentmemberid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_customerjourneyid")]
		public Microsoft.Xrm.Sdk.EntityReference MsDynMkt_CustomerJourneyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdynmkt_customerjourneyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdynmkt_customerjourneyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_customerjourneyidname")]
		public string MsDynMkt_CustomerJourneyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdynmkt_customerjourneyid"))
				{
					return this.FormattedValues["msdynmkt_customerjourneyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_emailid")]
		public Microsoft.Xrm.Sdk.EntityReference MsDynMkt_EmailId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdynmkt_emailid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdynmkt_emailid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_emailidname")]
		public string MsDynMkt_EmailIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdynmkt_emailid"))
				{
					return this.FormattedValues["msdynmkt_emailid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_marketingformid")]
		public Microsoft.Xrm.Sdk.EntityReference MsDynMkt_MarketingFormId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdynmkt_marketingformid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdynmkt_marketingformid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdynmkt_marketingformidname")]
		public string MsDynMkt_MarketingFormIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdynmkt_marketingformid"))
				{
					return this.FormattedValues["msdynmkt_marketingformid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_aadobjectid")]
		public string MSeVTmGt_AAdObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msevtmgt_aadobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msevtmgt_aadobjectid", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für den Check-In, der dem Kontakt zugeordnet ist
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference MSeVTmGt_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msevtmgt_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msevtmgt_contactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_contactidname")]
		public string MSeVTmGt_ContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msevtmgt_contactid"))
				{
					return this.FormattedValues["msevtmgt_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Für Kontakte, die durch Registrierung für ein Ereignis in Microsoft Dynamics 365 erstellt wurden, identifiziert dies das relevante Ereignis. Wird verwendet, um den Kontakt mit Daten des ursprünglichen Ereignisses zu verknüpfen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_originatingeventid")]
		public Microsoft.Xrm.Sdk.EntityReference MSeVTmGt_OriginatingEventId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msevtmgt_originatingeventid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msevtmgt_originatingeventid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_originatingeventidname")]
		public string MSeVTmGt_OriginatingEventIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msevtmgt_originatingeventid"))
				{
					return this.FormattedValues["msevtmgt_originatingeventid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual MsFt_DataState? MsFt_DataState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((MsFt_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
		public string MsFt_DataStateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msft_datastate"))
				{
					return this.FormattedValues["msft_datastate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_consentchangesourceformid")]
		public Microsoft.Xrm.Sdk.EntityReference MsGdPr_ConsentChangeSourceFormId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msgdpr_consentchangesourceformid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msgdpr_consentchangesourceformid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_consentchangesourceformidname")]
		public string MsGdPr_ConsentChangeSourceForMidName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_consentchangesourceformid"))
				{
					return this.FormattedValues["msgdpr_consentchangesourceformid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kontakt das Nachverfolgen von Interaktionsdaten zulässt. Wenn „Nicht zulassen“ ausgewählt ist, werden von Microsoft Dynamics 365 keine Interaktionsdaten für den Kontakt gespeichert.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_donottrack")]
		public System.Nullable<bool> MsGdPr_DoNotTrack
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msgdpr_donottrack");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msgdpr_donottrack", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_donottrackname")]
		public string MsGdPr_DoNotTrackName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_donottrack"))
				{
					return this.FormattedValues["msgdpr_donottrack"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprconsent")]
		public virtual MsGdPr_GdPr_Consent_Option_Set? MsGdPr_GdPrConsent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((MsGdPr_GdPr_Consent_Option_Set?)(EntityOptionSetEnum.GetEnum(this, "msgdpr_gdprconsent")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msgdpr_gdprconsent", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprconsentname")]
		public string MsGdPr_GdPrConsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_gdprconsent"))
				{
					return this.FormattedValues["msgdpr_gdprconsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprischild")]
		public System.Nullable<bool> MsGdPr_GdPrIsChild
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msgdpr_gdprischild");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msgdpr_gdprischild", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprischildname")]
		public string MsGdPr_GdPrIsChildName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_gdprischild"))
				{
					return this.FormattedValues["msgdpr_gdprischild"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Kontakts, der der dem Kontakt zugeordnet ist
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprparentid")]
		public Microsoft.Xrm.Sdk.EntityReference MsGdPr_GdPrParentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msgdpr_gdprparentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msgdpr_gdprparentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprparentidname")]
		public string MsGdPr_GdPrParentIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_gdprparentid"))
				{
					return this.FormattedValues["msgdpr_gdprparentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprparentidyominame")]
		public string MsGdPr_GdPrParentIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msgdpr_gdprparentid"))
				{
					return this.FormattedValues["msgdpr_gdprparentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Die bevorzugte Portalsprache des Benutzers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcid")]
		public virtual PowerPageLanguages? MsPp_UserPreferredLcId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((PowerPageLanguages?)(EntityOptionSetEnum.GetEnum(this, "mspp_userpreferredlcid")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("mspp_userpreferredlcid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcidname")]
		public string MsPp_UserPreferredLcIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("mspp_userpreferredlcid"))
				{
					return this.FormattedValues["mspp_userpreferredlcid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Spitznamen des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nickname")]
		public string Nickname
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("nickname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("nickname", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Anzahl der Kinder des Kontakts ein, damit diese bei nachbereitenden Telefonanrufen oder anderer Kommunikation zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildren")]
		public System.Nullable<int> NumberOfChildren
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofchildren");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numberofchildren", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_mvzage")]
		public System.Nullable<int> OC_MvZAge
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_mvzage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_mvzage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_mvzagebandcode")]
		public virtual Con_AgeBandCode? OC_MvZAgeBandCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_AgeBandCode?)(EntityOptionSetEnum.GetEnum(this, "oc_mvzagebandcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_mvzagebandcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_mvzagebandcodename")]
		public string OC_MvZAgeBandCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_mvzagebandcode"))
				{
					return this.FormattedValues["oc_mvzagebandcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_mvzsharesinpercent")]
		public System.Nullable<int> OC_MvZSharesInPercent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_mvzsharesinpercent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_mvzsharesinpercent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_mvzyearofbirth")]
		public System.Nullable<int> OC_MvZYearOfBirth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_mvzyearofbirth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_mvzyearofbirth", value);
			}
		}
		
		/// <summary>
		/// LMS
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampusagreedwithdirectapproach")]
		public System.Nullable<bool> OC_OMnICampusAgreedWithDirectApproach
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oc_omnicampusagreedwithdirectapproach");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampusagreedwithdirectapproach", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampusagreedwithdirectapproachname")]
		public string OC_OMnICampusAgreedWithDirectApproachName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_omnicampusagreedwithdirectapproach"))
				{
					return this.FormattedValues["oc_omnicampusagreedwithdirectapproach"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// CRM-Nummer LMS SST
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampuscrmnumber")]
		public string OC_OMnICampusCrmNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_omnicampuscrmnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampuscrmnumber", value);
			}
		}
		
		/// <summary>
		/// LMS
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampussenddoi")]
		public System.Nullable<bool> OC_OMnICampusSendDoI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oc_omnicampussenddoi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampussenddoi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampussenddoiname")]
		public string OC_OMnICampusSendDoIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_omnicampussenddoi"))
				{
					return this.FormattedValues["oc_omnicampussenddoi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Benutzername LMS
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampususername")]
		public string OC_OMnICampusUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_omnicampususername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampususername", value);
			}
		}
		
		/// <summary>
		/// LMS
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampuswebcampususerid")]
		public string OC_OMnICampusWebCampusUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_omnicampuswebcampususerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampuswebcampususerid", value);
			}
		}
		
		/// <summary>
		/// LMS
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampuswouldliketotakepartinsurveys")]
		public System.Nullable<bool> OC_OMnICampusWouldLikeToTakeParTinSurveys
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oc_omnicampuswouldliketotakepartinsurveys");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnicampuswouldliketotakepartinsurveys", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnicampuswouldliketotakepartinsurveysname")]
		public string OC_OMnICampusWouldLikeToTakeParTinSurveysName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_omnicampuswouldliketotakepartinsurveys"))
				{
					return this.FormattedValues["oc_omnicampuswouldliketotakepartinsurveys"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Definiert, welcher Gruppe der Kontakt in der Omnicare Ansprechpartner Liste auf dem Omniportal angezeigt wird
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_portalansprechpartnergruppe")]
		public virtual Contact_OC_PortAlanSpRecHPartnerGrUpPe? OC_PortAlanSpRecHPartnerGrUpPe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_OC_PortAlanSpRecHPartnerGrUpPe?)(EntityOptionSetEnum.GetEnum(this, "oc_portalansprechpartnergruppe")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_portalansprechpartnergruppe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_portalansprechpartnergruppename")]
		public string OC_PortAlanSpRecHPartnerGrUpPeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_portalansprechpartnergruppe"))
				{
					return this.FormattedValues["oc_portalansprechpartnergruppe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Feld für die Verantwortlichkeiten, die auf dem Omniportal in der Omnicare Ansprechpartner Liste angezeigt wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_portalverantwortlichkeiten")]
		public string OC_PortalVerAntWOrTLIcHkEITen
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_portalverantwortlichkeiten");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_portalverantwortlichkeiten", value);
			}
		}
		
		/// <summary>
		/// Ist dieses Feld aktiviert, wird der Kontakt über die Schnittstelle ins LMS übertragen
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_ubertragunglms")]
		public System.Nullable<bool> OC_UBeRTRAGunGLMs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oc_ubertragunglms");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_ubertragunglms", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_ubertragunglmsname")]
		public string OC_UBeRTRAGunGLMsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_ubertragunglms"))
				{
					return this.FormattedValues["oc_ubertragunglms"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Die Dauer der Zurückstellung des Datensatzes in Minuten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Zeigt den Lead an, auf dessen Grundlage der Kontakt erstellt wurde (sofern der Kontakt durch die Konvertierung eines Leads in Microsoft Dynamics 365 erstellt wurde). Wird verwendet, um den Kontakt für die Berichterstellung und Analyse mit Daten des ursprünglichen Leads zu verknüpfen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("originatingleadid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
		public string OriginatingLeadIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
		public string OriginatingLeadIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Datum und Uhrzeit der Migration des Datensatzes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Benutzer oder das Team ein, der bzw. das mit der Verwaltung des Datensatzes betraut ist. Dieses Feld wird aktualisiert, wenn der Datensatz einem anderen Benutzer zugewiesen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner der Unternehmenseinheit, die im Besitz des Kontakts ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Teams, das im Besitz des Kontakts ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Benutzers, der im Besitz des Kontakts ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Geben Sie die Pagernummer für den Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pager")]
		public string Pager
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("pager");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("pager", value);
			}
		}
		
		/// <summary>
		/// For internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference Parent_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parent_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parent_contactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactidname")]
		public string Parent_ContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parent_contactid"))
				{
					return this.FormattedValues["parent_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactidyominame")]
		public string Parent_ContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parent_contactid"))
				{
					return this.FormattedValues["parent_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des übergeordneten Kontakts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidname")]
		public string ParentContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactidyominame")]
		public string ParentContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentcontactid"))
				{
					return this.FormattedValues["parentcontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die übergeordnete Firma oder den übergeordneten Kontakt für den Kontakt aus, um eine direkte Verknüpfung mit zusätzlichen Details wie Finanzinformationen, Aktivitäten und Verkaufschancen bereitzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentCustomerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcustomerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentcustomerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomeridname")]
		public string ParentCustomerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentcustomerid"))
				{
					return this.FormattedValues["parentcustomerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomeridyominame")]
		public string ParentCustomerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentcustomerid"))
				{
					return this.FormattedValues["parentcustomerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt, ob der Kontakt an Workflowregeln beteiligt ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> ParticipatesInWorkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("participatesinworkflow", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
		public string ParticipatesInWorkflowName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("participatesinworkflow"))
				{
					return this.FormattedValues["participatesinworkflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zahlungsbedingungen aus, um anzugeben, wann der Kunde den Gesamtbetrag bezahlen muss.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
		public virtual Contact_PaymentTermsCode? PaymentTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_PaymentTermsCode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscodename")]
		public string PaymentTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("paymenttermscode"))
				{
					return this.FormattedValues["paymenttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den bevorzugten Wochentag für Servicetermine aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public virtual Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_PreferredAppointmentDayCode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycodename")]
		public string PreferredAppointmentDayCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredappointmentdaycode"))
				{
					return this.FormattedValues["preferredappointmentdaycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Tageszeit für Servicetermine aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public virtual Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_PreferredAppointmentTimeCode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecodename")]
		public string PreferredAppointmentTimeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredappointmenttimecode"))
				{
					return this.FormattedValues["preferredappointmenttimecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Kontaktmethode aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public virtual Contact_PreferredContactMethodCode? PreferredContactMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_PreferredContactMethodCode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcodename")]
		public string PreferredContactMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredcontactmethodcode"))
				{
					return this.FormattedValues["preferredcontactmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Serviceeinrichtung oder das bevorzugte Arbeitsgerät des Kontakts aus, um eine korrekte Serviceplanung für den Kunden sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredEquipmentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredequipmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentidname")]
		public string PreferredEquipmentIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredequipmentid"))
				{
					return this.FormattedValues["preferredequipmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den bevorzugten Service des Kontakts aus, um eine korrekte Serviceplanung für den Kunden sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredServiceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredserviceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceidname")]
		public string PreferredServiceIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredserviceid"))
				{
					return this.FormattedValues["preferredserviceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den regulären oder bevorzugten Kundenservicemitarbeiter zur Bezugnahme bei der Planung von Serviceaktivitäten für den Kontakt aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredSystemUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredsystemuserid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridname")]
		public string PreferredSystemUserIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredsystemuserid"))
				{
					return this.FormattedValues["preferredsystemuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
		public string PreferredSystemUserIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredsystemuserid"))
				{
					return this.FormattedValues["preferredsystemuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt die ID des Prozesses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Anrede für den Kontakt ein, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salutation")]
		public string Salutation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("salutation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("salutation", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
		public virtual Contact_ShippingMethodCode? ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcodename")]
		public string ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("shippingmethodcode"))
				{
					return this.FormattedValues["shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Vereinbarung zum Servicelevel (Service Level Agreement, SLA) aus, die Sie auf den Kontaktdatensatz anwenden möchten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SlaId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Die letzte auf diese Anfrage angewendete SLA. Dieses Feld dient nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SlaInvokedId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SlaInvokedIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SlaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des (Ehe-)Partners des Kontakts ein, damit dieser bei Telefonanrufen, Veranstaltungen oder bei anderer Kommunikation mit dem Kontakt zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("spousesname")]
		public string SpousesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("spousesname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("spousesname", value);
			}
		}
		
		/// <summary>
		/// Zeigt die ID der Phase.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Zeigt, ob der Kontakt aktiv oder inaktiv ist. Inaktive Kontakte sind schreibgeschützt und können erst nach ihrer Reaktivierung bearbeitet werden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual Contact_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den Status des Kontakts aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Contact_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("subscriptionid", value);
			}
		}
		
		/// <summary>
		/// Geben Sie das Suffix für den Namen des Kontakts (beispielsweise 'Jr.' oder 'Sr.') ein, um sicherzustellen, dass in Verkaufsanrufen, E-Mails und Marketingkampagnen die korrekte Anrede verwendet wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suffix")]
		public string Suffix
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("suffix");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("suffix", value);
			}
		}
		
		/// <summary>
		/// Die Anzahl der Benutzer oder Unterhaltungen, die dem Datensatz folgen
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> TeamsFollowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamsfollowed", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
		public string Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
		public string Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für diesen Kontakt ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
		public string Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone3", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie zu Segmentierungs- und Analysezwecken eine Region oder ein Gebiet für den Kontakt aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
		public virtual Contact_TerritoryCode? TerritoryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Contact_TerritoryCode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycodename")]
		public string TerritoryCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("territorycode"))
				{
					return this.FormattedValues["territorycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Von mir aufgewendete Gesamtzeit für E-Mails (lesen und schreiben) und Meetings in Bezug auf den Kontaktdatensatz
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMeOnEmailAndMeetings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die lokale Währung für den Datensatz aus, um sicherzustellen, dass Budgets in der korrekten Währung ausgewiesen werden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Zeitzonencode, der bei Erstellung des Datensatzes verwendet wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Versionsnummer des Kontakts.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Geben Sie die URL für die berufliche oder private Website oder den Blog des Kontakts ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
		public string WebsiteUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("websiteurl", value);
			}
		}
		
		/// <summary>
		/// Geben Sie bei Angabe in japanischer Sprache die phonetische Schreibweise des Vornamens des Kontakts ein, um sicherzustellen, dass der Name bei Telefongesprächen mit dem Kontakt korrekt ausgesprochen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifirstname")]
		public string YomiFirstName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomifirstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomifirstname", value);
			}
		}
		
		/// <summary>
		/// Zeigt den kombinierten Vor- und Nachnamen (Yomi) des Kontakts, sodass in Ansichten und Berichten der volle phonetische Name angezeigt werden kann.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifullname")]
		public string YomiFullName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomifullname");
			}
		}
		
		/// <summary>
		/// Geben Sie bei Angabe in japanischer Sprache die phonetische Schreibweise des Nachnamens des Kontakts ein, um sicherzustellen, dass der Name bei Telefongesprächen mit dem Kontakt korrekt ausgesprochen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomilastname")]
		public string YomiLastName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomilastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomilastname", value);
			}
		}
		
		/// <summary>
		/// Geben Sie bei Angabe in japanischer Sprache die phonetische Schreibweise des zweiten Vornamens des Kontakts ein, um sicherzustellen, dass der Name bei Telefongesprächen mit dem Kontakt korrekt ausgesprochen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomimiddlename")]
		public string YomiMiddleName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yomimiddlename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yomimiddlename", value);
			}
		}
		
		/// <summary>
		/// 1:N account_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> Account_Primary_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("account_primary_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("account_primary_contact", null, value);
			}
		}
		
		/// <summary>
		/// 1:N con_contact_account_contactid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_contact_account_contactid")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> Con_Contact_Account_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_contact_account_contactid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_contact_account_contactid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N con_contact_account_managingdoctorid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_contact_account_managingdoctorid")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> Con_Contact_Account_ManagingDoctorId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_contact_account_managingdoctorid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_contact_account_managingdoctorid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> ReferencedContact_Customer_Contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> ReferencedContact_Master_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> ReferencedContact_Parent_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N msgdpr_contact_msgdpr_gdprparent
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> ReferencedMsGdPr_Contact_MsGdPr_GdPrParent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N quote_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("quote_customer_contacts")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Quote> Quote_Customer_Contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Quote>("quote_customer_contacts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Quote>("quote_customer_contacts", null, value);
			}
		}
		
		/// <summary>
		/// N:N contactquotes_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contactquotes_association")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Quote> ContactQuotes_Association
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Quote>("contactquotes_association", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Quote>("contactquotes_association", null, value);
			}
		}
		
		/// <summary>
		/// N:1 con_account_contact_accountid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_contact_accountid")]
		public DataverseModel.Account Con_Account_Contact_AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("con_account_contact_accountid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("con_account_contact_accountid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 con_account_contact_stakeholderid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholderid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_contact_stakeholderid")]
		public DataverseModel.Account Con_Account_Contact_StakeholderId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("con_account_contact_stakeholderid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("con_account_contact_stakeholderid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
		public DataverseModel.Account Contact_Customer_Accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("contact_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("contact_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Contact ReferencingContact_Customer_Contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Contact ReferencingContact_Master_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 contact_parent_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent_contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Contact ReferencingContact_Parent_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("contact_parent_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 msa_contact_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
		public DataverseModel.Account MSa_Contact_ManagingPartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("msa_contact_managingpartner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("msa_contact_managingpartner", null, value);
			}
		}
		
		/// <summary>
		/// N:1 msgdpr_contact_msgdpr_gdprparent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msgdpr_gdprparentid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Contact ReferencingMsGdPr_Contact_MsGdPr_GdPrParent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("msgdpr_contact_msgdpr_gdprparent", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Contact(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["contactid"] = base.Id;
                        break;
                    case "contactid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591

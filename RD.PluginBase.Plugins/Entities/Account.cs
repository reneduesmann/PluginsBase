#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataverseModel
{
	
	
	/// <summary>
	/// Ein Geschäft, das einen Kunden oder einen potenziellen Kunden darstellt. Das Unternehmen, mit dem Geschäftstransaktionen abgerechnet werden.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("account")]
	public partial class Account : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the account entity
		/// </summary>
		public partial class Fields
		{
			public const string ReferencingAccount_Master_Account = "account_master_account";
			public const string ReferencingAccount_Parent_Account = "account_parent_account";
			public const string Account_Primary_Contact = "account_primary_contact";
			public const string AccountCategoryCode = "accountcategorycode";
			public const string AccountCategoryCodename = "accountcategorycodename";
			public const string AccountClassificationCode = "accountclassificationcode";
			public const string AccountClassificationCodename = "accountclassificationcodename";
			public const string AccountId = "accountid";
			public const string Id = "accountid";
			public const string AccountNumber = "accountnumber";
			public const string AccountRatingCode = "accountratingcode";
			public const string AccountRatingCodename = "accountratingcodename";
			public const string Address1_AddressId = "address1_addressid";
			public const string Address1_AddressTypeCode = "address1_addresstypecode";
			public const string Address1_AddressTypeCodename = "address1_addresstypecodename";
			public const string Address1_City = "address1_city";
			public const string Address1_Composite = "address1_composite";
			public const string Address1_Country = "address1_country";
			public const string Address1_County = "address1_county";
			public const string Address1_Fax = "address1_fax";
			public const string Address1_FreightTermsCode = "address1_freighttermscode";
			public const string Address1_FreightTermsCodename = "address1_freighttermscodename";
			public const string Address1_Latitude = "address1_latitude";
			public const string Address1_Line1 = "address1_line1";
			public const string Address1_Line2 = "address1_line2";
			public const string Address1_Line3 = "address1_line3";
			public const string Address1_Longitude = "address1_longitude";
			public const string Address1_Name = "address1_name";
			public const string Address1_PostalCode = "address1_postalcode";
			public const string Address1_PostofficeBox = "address1_postofficebox";
			public const string Address1_PrimaryContactName = "address1_primarycontactname";
			public const string Address1_ShippingMethodCode = "address1_shippingmethodcode";
			public const string Address1_ShippingMethodCodename = "address1_shippingmethodcodename";
			public const string Address1_StateOrProvince = "address1_stateorprovince";
			public const string Address1_Telephone1 = "address1_telephone1";
			public const string Address1_Telephone2 = "address1_telephone2";
			public const string Address1_Telephone3 = "address1_telephone3";
			public const string Address1_UpsZone = "address1_upszone";
			public const string Address1_UtcOffset = "address1_utcoffset";
			public const string Address2_AddressId = "address2_addressid";
			public const string Address2_AddressTypeCode = "address2_addresstypecode";
			public const string Address2_AddressTypeCodename = "address2_addresstypecodename";
			public const string Address2_City = "address2_city";
			public const string Address2_Composite = "address2_composite";
			public const string Address2_Country = "address2_country";
			public const string Address2_County = "address2_county";
			public const string Address2_Fax = "address2_fax";
			public const string Address2_FreightTermsCode = "address2_freighttermscode";
			public const string Address2_FreightTermsCodename = "address2_freighttermscodename";
			public const string Address2_Latitude = "address2_latitude";
			public const string Address2_Line1 = "address2_line1";
			public const string Address2_Line2 = "address2_line2";
			public const string Address2_Line3 = "address2_line3";
			public const string Address2_Longitude = "address2_longitude";
			public const string Address2_Name = "address2_name";
			public const string Address2_PostalCode = "address2_postalcode";
			public const string Address2_PostofficeBox = "address2_postofficebox";
			public const string Address2_PrimaryContactName = "address2_primarycontactname";
			public const string Address2_ShippingMethodCode = "address2_shippingmethodcode";
			public const string Address2_ShippingMethodCodename = "address2_shippingmethodcodename";
			public const string Address2_StateOrProvince = "address2_stateorprovince";
			public const string Address2_Telephone1 = "address2_telephone1";
			public const string Address2_Telephone2 = "address2_telephone2";
			public const string Address2_Telephone3 = "address2_telephone3";
			public const string Address2_UpsZone = "address2_upszone";
			public const string Address2_UtcOffset = "address2_utcoffset";
			public const string AdX_CreatedByIpAddress = "adx_createdbyipaddress";
			public const string AdX_CreatedByUsername = "adx_createdbyusername";
			public const string AdX_ModifiedByIpAddress = "adx_modifiedbyipaddress";
			public const string AdX_ModifiedByUsername = "adx_modifiedbyusername";
			public const string Aging30 = "aging30";
			public const string Aging30_Base = "aging30_base";
			public const string Aging60 = "aging60";
			public const string Aging60_Base = "aging60_base";
			public const string Aging90 = "aging90";
			public const string Aging90_Base = "aging90_base";
			public const string BusinessTypeCode = "businesstypecode";
			public const string BusinessTypeCodename = "businesstypecodename";
			public const string Con_Account_Account = "con_account_account";
			public const string Con_Account_Account_AIaPos = "con_account_account_aiapos";
			public const string ReferencingCon_Account_Account_Former_Company = "con_account_account_former_company";
			public const string Con_Account_Account_Stakeholder = "con_account_account_Stakeholder";
			public const string Con_Account_Contact_AccountId = "Con_Account_Contact_AccountId";
			public const string Con_Account_Contact_StakeholderId = "Con_Account_Contact_StakeholderId";
			public const string Con_AccountMvZId = "con_accountmvzid";
			public const string Con_AccountMvZIdName = "con_accountmvzidname";
			public const string Con_AccountNameImprint = "con_accountnameimprint";
			public const string Con_AccountNamesGH = "con_accountnamesgh";
			public const string Con_AccountsGHId = "con_accountsghid";
			public const string Con_AccountsGHIdName = "con_accountsghidname";
			public const string Con_ActualPharmacySize = "con_actualpharmacysize";
			public const string Con_ActualPharmacySize_Base = "con_actualpharmacysize_base";
			public const string Con_BeTeILiGTePoTheKen = "con_beteiligtepotheken";
			public const string Con_BeTeILiGTePoTheKenName = "con_beteiligtepothekenname";
			public const string Con_BonusTypeCode = "con_bonustypecode";
			public const string Con_BonusTypeCodename = "con_bonustypecodename";
			public const string Con_BonusValidFrom = "con_bonusvalidfrom";
			public const string Con_BonusValidTo = "con_bonusvalidto";
			public const string Con_ClusterGrEPoTeNzIAl = "con_clustergrepotenzial";
			public const string Con_ClusterGrEPoTeNzIAlName = "con_clustergrepotenzialname";
			public const string Con_ClusterPot = "con_clusterpot";
			public const string Con_ClusterWalletPotentialCode = "con_clusterwalletpotentialcode";
			public const string Con_ClusterWalletPotentialCodename = "con_clusterwalletpotentialcodename";
			public const string Con_ClusterWalletPotentialStrategyCode = "con_clusterwalletpotentialstrategycode";
			public const string Con_ClusterWalletPotentialStrategyCodename = "con_clusterwalletpotentialstrategycodename";
			public const string Con_ClusterWalletRevenueCode = "con_clusterwalletrevenuecode";
			public const string Con_ClusterWalletRevenueCodename = "con_clusterwalletrevenuecodename";
			public const string Con_ClusterWalletRevenueStrategyCode = "con_clusterwalletrevenuestrategycode";
			public const string Con_ClusterWalletRevenueStrategyCodename = "con_clusterwalletrevenuestrategycodename";
			public const string Con_CoalitionId = "con_coalitionid";
			public const string Con_CoalitionIdName = "con_coalitionidname";
			public const string Con_CollectiveInvoiceTypeId = "con_collectiveinvoicetypeid";
			public const string Con_CollectiveInvoiceTypeIdName = "con_collectiveinvoicetypeidname";
			public const string Con_Connections = "con_connections";
			public const string Con_Contact_Account_ContactId = "con_contact_account_contactid";
			public const string Con_Contact_Account_ManagingDoctorId = "con_contact_account_managingdoctorid";
			public const string Con_ContactId = "con_contactid";
			public const string Con_ContactIdName = "con_contactidname";
			public const string Con_ContactIdYomiName = "con_contactidyominame";
			public const string Con_ContactTiMessGH = "con_contacttimessgh";
			public const string Con_CustomerBlockCode = "con_customerblockcode";
			public const string Con_CustomerBlockCodename = "con_customerblockcodename";
			public const string Con_CustomerDiscountGroupId = "con_customerdiscountgroupid";
			public const string Con_CustomerDiscountGroupIdName = "con_customerdiscountgroupidname";
			public const string Con_CustomerGroupCodeId = "con_customergroupcodeid";
			public const string Con_CustomerGroupCodeIdName = "con_customergroupcodeidname";
			public const string Con_CustomerNo = "con_customerno";
			public const string Con_CustomerPriceGroupId = "con_customerpricegroupid";
			public const string Con_CustomerPriceGroupIdName = "con_customerpricegroupidname";
			public const string Con_CustomerTypeCode = "con_customertypecode";
			public const string Con_CustomerTypeCodename = "con_customertypecodename";
			public const string Con_DataSetSourceMvZCode = "con_datasetsourcemvzcode";
			public const string Con_DataSetSourceMvZCodename = "con_datasetsourcemvzcodename";
			public const string Con_DataSetsOurCeoMnICampusCode = "con_datasetsourceomnicampuscode";
			public const string Con_DataSetsOurCeoMnICampusCodename = "con_datasetsourceomnicampuscodename";
			public const string Con_DataSetSourcesGHCode = "con_datasetsourcesghcode";
			public const string Con_DataSetSourcesGHCodename = "con_datasetsourcesghcodename";
			public const string Con_Days = "con_days";
			public const string Con_DaysName = "con_daysname";
			public const string Con_EndTimeFri1 = "con_endtimefri1";
			public const string Con_EndTiMemo1 = "con_endtimemo1";
			public const string Con_EndTimeThurs1 = "con_endtimethurs1";
			public const string Con_EndTimeTue2 = "con_endtimetue2";
			public const string Con_EndTiMewed1 = "con_endtimewed1";
			public const string Con_ExploitationOfPotential = "con_exploitationofpotential";
			public const string Con_FIrMenName2 = "con_firmenname2";
			public const string Con_FormerAccountId = "con_formeraccountid";
			public const string Con_FormerAccountIdName = "con_formeraccountidname";
			public const string Con_FormerAccountIdYomiName = "con_formeraccountidyominame";
			public const string Con_Friday = "con_friday";
			public const string Con_FridayName = "con_fridayname";
			public const string Con_GeOrGraphicClusterCode = "con_georgraphicclustercode";
			public const string Con_GeOrGraphicClusterCodename = "con_georgraphicclustercodename";
			public const string Con_GrowthPotentialCode = "con_growthpotentialcode";
			public const string Con_GrowthPotentialCodename = "con_growthpotentialcodename";
			public const string Con_Hemophilia = "con_hemophilia";
			public const string Con_HemophiliaName = "con_hemophilianame";
			public const string Con_InsideSalesStatusCode = "con_insidesalesstatuscode";
			public const string Con_InsideSalesStatusCodename = "con_insidesalesstatuscodename";
			public const string Con_IsAbcPProgram = "con_isabcpprogram";
			public const string Con_IsAbcPProgramName = "con_isabcpprogramname";
			public const string Con_IsBonus = "con_isbonus";
			public const string Con_IsBonusName = "con_isbonusname";
			public const string Con_IsKP2Rule = "con_iskp2rule";
			public const string Con_IsKP2RuleName = "con_iskp2rulename";
			public const string Con_IsLineDiscount = "con_islinediscount";
			public const string Con_IsLineDiscountName = "con_islinediscountname";
			public const string Con_IsSpecialPrice = "con_isspecialprice";
			public const string Con_IsSpecialPriceName = "con_isspecialpricename";
			public const string Con_LastActivityOn = "con_lastactivityon";
			public const string Con_LastDelivery = "con_lastdelivery";
			public const string Con_LeadCategoryCode = "con_leadcategorycode";
			public const string Con_LeadCategoryCodename = "con_leadcategorycodename";
			public const string Con_LeadOpPpHaSeCode = "con_leadoppphasecode";
			public const string Con_LeadOpPpHaSeCodename = "con_leadoppphasecodename";
			public const string Con_LevelCode = "con_levelcode";
			public const string Con_LevelCodename = "con_levelcodename";
			public const string Con_LogoUrl = "con_logourl";
			public const string Con_ManagingDoctorId = "con_managingdoctorid";
			public const string Con_ManagingDoctorIdName = "con_managingdoctoridname";
			public const string Con_ManagingDoctorIdYomiName = "con_managingdoctoridyominame";
			public const string Con_MarketPotential = "con_marketpotential";
			public const string Con_MarketPotentialName = "con_marketpotentialname";
			public const string Con_MassNaHMen = "con_massnahmen";
			public const string Con_MassNaHMenName = "con_massnahmenname";
			public const string Con_Monday = "con_monday";
			public const string Con_MondayName = "con_mondayname";
			public const string Con_Name2 = "con_name2";
			public const string Con_NameQI = "con_nameqi";
			public const string Con_NumberOfDoctors = "con_numberofdoctors";
			public const string Con_NumberOfProductions = "con_numberofproductions";
			public const string Con_OMnICaRefitCode = "con_omnicarefitcode";
			public const string Con_OMnICaRefitCodename = "con_omnicarefitcodename";
			public const string Con_OMnIPlaner = "con_omniplaner";
			public const string Con_OMnIPlanerName = "con_omniplanername";
			public const string Con_Oncologic = "con_oncologic";
			public const string Con_OncologicName = "con_oncologicname";
			public const string Con_OnKoKey = "con_onkokey";
			public const string Con_OpenPotential = "con_openpotential";
			public const string Con_OpenPotential_Base = "con_openpotential_base";
			public const string Con_OpenPotentialPercentage = "con_openpotentialpercentage";
			public const string Con_OwnerMvZId = "con_ownermvzid";
			public const string Con_OwnerMvZIdName = "con_ownermvzidname";
			public const string Con_OwnerMvZIdYomiName = "con_ownermvzidyominame";
			public const string Con_OWNeRoMnICampusId = "con_owneromnicampusid";
			public const string Con_OWNeRoMnICampusIdName = "con_owneromnicampusidname";
			public const string Con_OWNeRoMnICampusIdYomiName = "con_owneromnicampusidyominame";
			public const string Con_OwnerQIId = "con_ownerqiid";
			public const string Con_OwnerQIIdName = "con_ownerqiidname";
			public const string Con_OwnerQIIdYomiName = "con_ownerqiidyominame";
			public const string Con_OwnersGHId = "con_ownersghid";
			public const string Con_OwnersGHIdName = "con_ownersghidname";
			public const string Con_OwnersGHIdYomiName = "con_ownersghidyominame";
			public const string Con_OwnerTeamMvZId = "con_ownerteammvzid";
			public const string Con_OwnerTeamMvZIdName = "con_ownerteammvzidname";
			public const string Con_OwnerTeamMvZIdYomiName = "con_ownerteammvzidyominame";
			public const string Con_OwnerTeaMoMnICampusId = "con_ownerteamomnicampusid";
			public const string Con_OwnerTeaMoMnICampusIdName = "con_ownerteamomnicampusidname";
			public const string Con_OwnerTeaMoMnICampusIdYomiName = "con_ownerteamomnicampusidyominame";
			public const string Con_OwnerTeamQIId = "con_ownerteamqiid";
			public const string Con_OwnerTeamQIIdName = "con_ownerteamqiidname";
			public const string Con_OwnerTeamQIIdYomiName = "con_ownerteamqiidyominame";
			public const string Con_OwnerTeaMsgHId = "con_ownerteamsghid";
			public const string Con_OwnerTeaMsgHiDnaMe = "con_ownerteamsghidname";
			public const string Con_OwnerTeaMsgHIdYomiName = "con_ownerteamsghidyominame";
			public const string Con_PassIv_KUnDe = "con_passiv_kunde";
			public const string Con_PaymentTermsId = "con_paymenttermsid";
			public const string Con_PaymentTermsIdName = "con_paymenttermsidname";
			public const string Con_PaymentTypeId = "con_paymenttypeid";
			public const string Con_PaymentTypeIdName = "con_paymenttypeidname";
			public const string Con_PharmacyLevel = "con_pharmacylevel";
			public const string Con_PharmacyLevelName = "con_pharmacylevelname";
			public const string Con_PharmacyLogo = "con_pharmacylogo";
			public const string Con_PharmacyLogo_Timestamp = "con_pharmacylogo_timestamp";
			public const string Con_PharmacyLogo_Url = "con_pharmacylogo_url";
			public const string Con_PharmacyLogoId = "con_pharmacylogoid";
			public const string Con_PostalCodeAreaId = "con_postalcodeareaid";
			public const string Con_PostalCodeAreaIdName = "con_postalcodeareaidname";
			public const string Con_PotentialNumberOfUnitsProduced = "con_potentialnumberofunitsproduced";
			public const string Con_PraxisAssociationId = "con_praxisassociationid";
			public const string Con_PraxisAssociationIdName = "con_praxisassociationidname";
			public const string Con_ProducedNumber = "con_producednumber";
			public const string Con_PurchasingCommunity = "con_purchasingcommunity";
			public const string Con_PurchasingCommunityName = "con_purchasingcommunityname";
			public const string Con_QualityInitiativeCode = "con_qualityinitiativecode";
			public const string Con_QualityInitiativeCodename = "con_qualityinitiativecodename";
			public const string Con_QuarterCode = "con_quartercode";
			public const string Con_QuarterCodename = "con_quartercodename";
			public const string Con_ReasonForProcessingMvZCode = "con_reasonforprocessingmvzcode";
			public const string Con_ReasonForProcessingMvZCodename = "con_reasonforprocessingmvzcodename";
			public const string Con_ReasonForProcessInGoMnICampusCode = "con_reasonforprocessingomnicampuscode";
			public const string Con_ReasonForProcessInGoMnICampusCodename = "con_reasonforprocessingomnicampuscodename";
			public const string Con_ReasonForProcessInGsGHCode = "con_reasonforprocessingsghcode";
			public const string Con_ReasonForProcessInGsGHCodename = "con_reasonforprocessingsghcodename";
			public const string Con_RequestedCreditLimit = "con_requestedcreditlimit";
			public const string Con_RequestedCreditLimit_Base = "con_requestedcreditlimit_base";
			public const string Con_ResponsibleId = "con_responsibleid";
			public const string Con_ResponsibleIdName = "con_responsibleidname";
			public const string Con_RevenueLTm = "con_revenueltm";
			public const string Con_RevenueLTm_Base = "con_revenueltm_base";
			public const string Con_RollOfInvolvedPharmacy = "con_rollofinvolvedpharmacy";
			public const string Con_RollOfInvolvedPharmacyName = "con_rollofinvolvedpharmacyname";
			public const string Con_SalesAreaCode = "con_salesareacode";
			public const string Con_SalesAreaCodename = "con_salesareacodename";
			public const string Con_SaleSocQICode = "con_salesocqicode";
			public const string Con_SaleSocQICodename = "con_salesocqicodename";
			public const string Con_SGHNotAllowedProduct = "con_sghnotallowedproduct";
			public const string Con_ShareOfWalletPoTeNzIaLocCode = "con_shareofwalletpotenzialoccode";
			public const string Con_ShareOfWalletPoTeNzIaLocCodename = "con_shareofwalletpotenzialoccodename";
			public const string Con_SignedCreditLimit = "con_signedcreditlimit";
			public const string Con_SignedCreditLimit_Base = "con_signedcreditlimit_base";
			public const string Con_SizeWalletPharmacyQICode = "con_sizewalletpharmacyqicode";
			public const string Con_SizeWalletPharmacyQICodename = "con_sizewalletpharmacyqicodename";
			public const string Con_StakeholderCode = "con_stakeholdercode";
			public const string Con_StakeholderCodename = "con_stakeholdercodename";
			public const string Con_StarTimeFri1 = "con_startimefri1";
			public const string Con_StartTiMemo1 = "con_starttimemo1";
			public const string Con_StartTimeThuR1 = "con_starttimethur1";
			public const string Con_StartTimeTue1 = "con_starttimetue1";
			public const string Con_StartTiMewed1 = "con_starttimewed1";
			public const string Con_StatusLeADoPpCode = "con_statusleadoppcode";
			public const string Con_StatusLeADoPpCodename = "con_statusleadoppcodename";
			public const string Con_StRateGiScHerPartner = "con_strategischerpartner";
			public const string Con_StRateGiScHerPartnerName = "con_strategischerpartnername";
			public const string Con_SupplyingQIPharmacy = "con_supplyingqipharmacy";
			public const string Con_SupplyingQIPharmacyCode = "con_supplyingqipharmacycode";
			public const string Con_SupplyingQIPharmacyCodename = "con_supplyingqipharmacycodename";
			public const string Con_TargetCustomer = "con_targetcustomer";
			public const string Con_TargetCustomerName = "con_targetcustomername";
			public const string Con_Thursday = "con_thursday";
			public const string Con_ThursdayName = "con_thursdayname";
			public const string Con_TiTel = "con_titel";
			public const string Con_TotalPotential = "con_totalpotential";
			public const string Con_TotalPotential_Base = "con_totalpotential_base";
			public const string Con_Tuesday = "con_tuesday";
			public const string Con_TuesdayName = "con_tuesdayname";
			public const string Con_TurnVOverOCLtMaeK = "con_turnvoverocltmaek";
			public const string Con_Wednesday = "con_wednesday";
			public const string Con_WednesdayName = "con_wednesdayname";
			public const string Contact_Customer_Accounts = "Contact_Customer_Accounts";
			public const string CreatedBy = "createdby";
			public const string CreatedByExternalParty = "createdbyexternalparty";
			public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
			public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CreditLimit = "creditlimit";
			public const string CreditLimit_Base = "creditlimit_base";
			public const string CreditOnHold = "creditonhold";
			public const string CreditOnHoldName = "creditonholdname";
			public const string CustomerSizeCode = "customersizecode";
			public const string CustomerSizeCodename = "customersizecodename";
			public const string CustomerTypeCode = "customertypecode";
			public const string CustomerTypeCodename = "customertypecodename";
			public const string DefaultPriceLevelId = "defaultpricelevelid";
			public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
			public const string Description = "description";
			public const string DoNotBulkEmail = "donotbulkemail";
			public const string DoNotBulkEmailName = "donotbulkemailname";
			public const string DoNotBulkPostalMail = "donotbulkpostalmail";
			public const string DoNotBulkPostalMailName = "donotbulkpostalmailname";
			public const string DoNotEmail = "donotemail";
			public const string DoNotEmailName = "donotemailname";
			public const string DoNotFax = "donotfax";
			public const string DoNotFaxName = "donotfaxname";
			public const string DoNotPhone = "donotphone";
			public const string DoNotPhoneName = "donotphonename";
			public const string DoNotPostalMail = "donotpostalmail";
			public const string DoNotPostalMailName = "donotpostalmailname";
			public const string DoNotSendMarketingMaterialName = "donotsendmarketingmaterialname";
			public const string DoNotSendMm = "donotsendmm";
			public const string EmailAddress1 = "emailaddress1";
			public const string EmailAddress2 = "emailaddress2";
			public const string EmailAddress3 = "emailaddress3";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_Url = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangerAte = "exchangerate";
			public const string Fax = "fax";
			public const string FollowEmail = "followemail";
			public const string FollowEmailName = "followemailname";
			public const string FtpSiteUrl = "ftpsiteurl";
			public const string IcB_Account_QI = "icb_account_qi";
			public const string IcB_Account_QIMv = "icb_account_qimv";
			public const string IcB_Account_QIMvName = "icb_account_qimvname";
			public const string IcB_Account_QIName = "icb_account_qiname";
			public const string IcB_Account_QMs = "icb_account_qms";
			public const string IcB_Account_QMsName = "icb_account_qmsname";
			public const string IcB_Account_QS = "icb_account_qs";
			public const string IcB_Account_QSName = "icb_account_qsname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IndustryCode = "industrycode";
			public const string IndustryCodename = "industrycodename";
			public const string IsPrivateName = "isprivatename";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LastUsedInCampaign = "lastusedincampaign";
			public const string MarketCap = "marketcap";
			public const string MarketCap_Base = "marketcap_base";
			public const string MarketingOnly = "marketingonly";
			public const string MarketingOnlyName = "marketingonlyname";
			public const string MasterAccountIdName = "masteraccountidname";
			public const string MasterAccountIdYomiName = "masteraccountidyominame";
			public const string MasterId = "masterid";
			public const string Merged = "merged";
			public const string MergedName = "mergedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByExternalParty = "modifiedbyexternalparty";
			public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
			public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string ReferencingMsA_Account_ManagingPartner = "msa_account_managingpartner";
			public const string MSa_Contact_ManagingPartner = "MSa_Contact_ManagingPartner";
			public const string MSa_ManagingPartnerId = "msa_managingpartnerid";
			public const string MsA_ManagingPartnerIdName = "msa_managingpartneridname";
			public const string MsA_ManagingPartnerIdYomiName = "msa_managingpartneridyominame";
			public const string Msdyn_AccountKPiId = "msdyn_accountkpiid";
			public const string Msdyn_AccountKPiIdName = "msdyn_accountkpiidname";
			public const string Msdyn_GdPrOptOut = "msdyn_gdproptout";
			public const string Msdyn_GdPrOptOutName = "msdyn_gdproptoutname";
			public const string Msdyn_PrimaryTimeZone = "msdyn_primarytimezone";
			public const string Msdyn_SalesAccelerationInsightId = "msdyn_salesaccelerationinsightid";
			public const string Msdyn_SalesAccelerationInsightIdName = "msdyn_salesaccelerationinsightidname";
			public const string Msdyn_SegmentId = "msdyn_segmentid";
			public const string Msdyn_SegmentIdName = "msdyn_segmentidname";
			public const string MsdynCrm_Insights_Placeholder = "msdyncrm_insights_placeholder";
			public const string MSeVTmGt_HotelGroup = "msevtmgt_hotelgroup";
			public const string MSeVTmGt_HotelGroupName = "msevtmgt_hotelgroupname";
			public const string MSeVTmGt_RentalCarProvider = "msevtmgt_rentalcarprovider";
			public const string MSeVTmGt_RentalCarProviderName = "msevtmgt_rentalcarprovidername";
			public const string MsFt_DataState = "msft_datastate";
			public const string MsFt_DataStateName = "msft_datastatename";
			public const string Name = "name";
			public const string NumberOfEmployees = "numberofemployees";
			public const string OC_Address3_City = "oc_address3_city";
			public const string OC_Address3_Line1 = "oc_address3_line1";
			public const string OC_Address3_Line2 = "oc_address3_line2";
			public const string OC_Address3_Line3 = "oc_address3_line3";
			public const string OC_Address3_PostLaCode = "oc_address3_postlacode";
			public const string OC_EmailCount = "oc_emailcount";
			public const string OC_FaxCount = "oc_faxcount";
			public const string OC_MSv3Count = "oc_msv3count";
			public const string OC_OMnITestBeMeRKUnGen = "oc_omnitestbemerkungen";
			public const string OC_OMnITestKOnTAkTZEITfENSteR = "oc_omnitestkontaktzeitfenster";
			public const string OC_OMnITeSTmOgLIcHeWIrKStOffE = "oc_omnitestmoglichewirkstoffe";
			public const string OC_OMnITeSTmOgLIcHeWIrKStOffEName = "oc_omnitestmoglichewirkstoffename";
			public const string OC_OrderChannelsCode = "oc_orderchannelscode";
			public const string OC_OrderChannelsCodename = "oc_orderchannelscodename";
			public const string OC_OwnedById = "oc_ownedbyid";
			public const string OC_OwnedByIdName = "oc_ownedbyidname";
			public const string OC_OwnedByIdYomiName = "oc_ownedbyidyominame";
			public const string OC_PlatformBound = "oc_platformbound";
			public const string OC_PlatformBoundName = "oc_platformboundname";
			public const string OC_PlatformCode = "oc_platformcode";
			public const string OC_PlatformCodename = "oc_platformcodename";
			public const string OC_PurchasingCommunityCode = "oc_purchasingcommunitycode";
			public const string OC_PurchasingCommunityCodename = "oc_purchasingcommunitycodename";
			public const string OC_SteRiBaseCount = "oc_steribasecount";
			public const string OC_TelephoneCount = "oc_telephonecount";
			public const string OC_UsedSoftwareCode = "oc_usedsoftwarecode";
			public const string OC_UsedSoftwareCodename = "oc_usedsoftwarecodename";
			public const string OnHoldTime = "onholdtime";
			public const string OpenDeals = "opendeals";
			public const string OpenDeals_Date = "opendeals_date";
			public const string OpenDeals_State = "opendeals_state";
			public const string OpenRevenue = "openrevenue";
			public const string OpenRevenue_Base = "openrevenue_base";
			public const string OpenRevenue_Date = "openrevenue_date";
			public const string OpenRevenue_State = "openrevenue_state";
			public const string OriginatingLeadId = "originatingleadid";
			public const string OriginatingLeadIdName = "originatingleadidname";
			public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwnershipCode = "ownershipcode";
			public const string OwnershipCodename = "ownershipcodename";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentAccountId = "parentaccountid";
			public const string ParentAccountIdName = "parentaccountidname";
			public const string ParentAccountIdYomiName = "parentaccountidyominame";
			public const string ParticipatesInWorkflow = "participatesinworkflow";
			public const string ParticipatesInWorkflowName = "participatesinworkflowname";
			public const string PaymentTermsCode = "paymenttermscode";
			public const string PaymentTermsCodename = "paymenttermscodename";
			public const string PreferredAppointmentDayCode = "preferredappointmentdaycode";
			public const string PreferredAppointmentDayCodename = "preferredappointmentdaycodename";
			public const string PreferredAppointmentTimeCode = "preferredappointmenttimecode";
			public const string PreferredAppointmentTimeCodename = "preferredappointmenttimecodename";
			public const string PreferredContactMethodCode = "preferredcontactmethodcode";
			public const string PreferredContactMethodCodename = "preferredcontactmethodcodename";
			public const string PreferredEquipmentId = "preferredequipmentid";
			public const string PreferredEquipmentIdName = "preferredequipmentidname";
			public const string PreferredServiceId = "preferredserviceid";
			public const string PreferredServiceIdName = "preferredserviceidname";
			public const string PreferredSystemUserId = "preferredsystemuserid";
			public const string PreferredSystemUserIdName = "preferredsystemuseridname";
			public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
			public const string PrimaryContactId = "primarycontactid";
			public const string PrimaryContactIdName = "primarycontactidname";
			public const string PrimaryContactIdYomiName = "primarycontactidyominame";
			public const string PrimarySatoriId = "primarysatoriid";
			public const string PrimaryTwitterId = "primarytwitterid";
			public const string ProcessId = "processid";
			public const string Quote_Customer_Accounts = "Quote_Customer_Accounts";
			public const string ReferencedAccount_Master_Account = "ReferencedAccount_Master_Account";
			public const string ReferencedAccount_Parent_Account = "ReferencedAccount_Parent_Account";
			public const string ReferencedCon_Account_Account_Former_Company = "ReferencedCon_Account_Account_Former_Company";
			public const string ReferencedMSa_Account_ManagingPartner = "ReferencedMSa_Account_ManagingPartner";
			public const string Revenue = "revenue";
			public const string Revenue_Base = "revenue_base";
			public const string SharesOutstanding = "sharesoutstanding";
			public const string ShippingMethodCode = "shippingmethodcode";
			public const string ShippingMethodCodename = "shippingmethodcodename";
			public const string Sic = "sic";
			public const string SlaId = "slaid";
			public const string SlaInvokedId = "slainvokedid";
			public const string SlaInvokedIdName = "slainvokedidname";
			public const string SlaName = "slaname";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodename = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodename = "statuscodename";
			public const string StockExchange = "stockexchange";
			public const string TeamsFollowed = "teamsfollowed";
			public const string Telephone1 = "telephone1";
			public const string Telephone2 = "telephone2";
			public const string Telephone3 = "telephone3";
			public const string TerritoryCode = "territorycode";
			public const string TerritoryCodename = "territorycodename";
			public const string TerritoryId = "territoryid";
			public const string TerritoryIdName = "territoryidname";
			public const string TickerSymbol = "tickersymbol";
			public const string TimeSpentByMeOnEmailAndMeetings = "timespentbymeonemailandmeetings";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UtcConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WebsiteUrl = "websiteurl";
			public const string YomiName = "yominame";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "accountid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "Account";
		
		public const string EntityLogicalName = "account";
		
		public const string EntityLogicalCollectionName = "accounts";
		
		public const string EntitySetName = "accounts";
		
		/// <summary>
		/// Wählen Sie eine Kategorie aus, um anzugeben, ob es sich um ein standardmäßiges oder um ein bevorzugtes Kundenkonto handelt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountcategorycode")]
		public virtual Account_AccountCategoryCode? AccountCategoryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_AccountCategoryCode?)(EntityOptionSetEnum.GetEnum(this, "accountcategorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountcategorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountcategorycodename")]
		public string AccountCategoryCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountcategorycode"))
				{
					return this.FormattedValues["accountcategorycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie einen Klassifizierungscode aus, um den potenziellen Wert des Kundenkontos auf der Grundlage der geplanten Rendite, der Zusammenarbeitsebene, der Verkaufszykluslänge oder anderer Kriterien anzugeben.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountclassificationcode")]
		public virtual Account_AccountClassificationCode? AccountClassificationCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_AccountClassificationCode?)(EntityOptionSetEnum.GetEnum(this, "accountclassificationcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountclassificationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountclassificationcodename")]
		public string AccountClassificationCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountclassificationcode"))
				{
					return this.FormattedValues["accountclassificationcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner der Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public System.Nullable<System.Guid> AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("accountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.AccountId = value;
			}
		}
		
		/// <summary>
		/// Geben Sie eine ID-Nummer oder einen ID-Code für die Firma ein, um es in Systemansichten schnell suchen und erkennen zu können.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountnumber")]
		public string AccountNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("accountnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountnumber", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Bewertung aus, um den Wert des Kundenkontos anzugeben.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountratingcode")]
		public virtual Account_AccountRatingCode? AccountRatingCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_AccountRatingCode?)(EntityOptionSetEnum.GetEnum(this, "accountratingcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("accountratingcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountratingcodename")]
		public string AccountRatingCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("accountratingcode"))
				{
					return this.FormattedValues["accountratingcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für 'Adresse 1'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
		public System.Nullable<System.Guid> Address1_AddressId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address1_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addressid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Art der primären Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
		public virtual Account_Address1_AddressTypeCode? Address1_AddressTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address1_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecodename")]
		public string Address1_AddressTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_addresstypecode"))
				{
					return this.FormattedValues["address1_addresstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Ort für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
		public string Address1_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_city", value);
			}
		}
		
		/// <summary>
		/// Zeigt die vollständige primäre Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
		public string Address1_Composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Geben Sie das Land oder die Region für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
		public string Address1_Country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_country", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Verwaltungsbezirk für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
		public string Address1_County
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_county", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
		public string Address1_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_fax", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Lieferbedingungen für die primäre Adresse aus, um die ordnungsgemäße Verarbeitung von Versandaufträgen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
		public virtual Account_Address1_FreightTermsCode? Address1_FreightTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address1_FreightTermsCode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscodename")]
		public string Address1_FreightTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_freighttermscode"))
				{
					return this.FormattedValues["address1_freighttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Breitengrad der primären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
		public System.Nullable<double> Address1_Latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_latitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die erste Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
		public string Address1_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die zweite Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
		public string Address1_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die dritte Zeile der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
		public string Address1_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_line3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Längengrad der primären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
		public System.Nullable<double> Address1_Longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address1_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_longitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie einen aussagekräftigen Namen für die primäre Adresse ein (beispielsweise 'Firmensitz').
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
		public string Address1_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_name", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postleitzahl (PLZ) für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
		public string Address1_PostalCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postalcode", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postfachnummer der primären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
		public string Address1_PostofficeBox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Hauptkontakts für die primäre Adresse der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string Address1_PrimaryContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public virtual Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address1_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcodename")]
		public string Address1_ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address1_shippingmethodcode"))
				{
					return this.FormattedValues["address1_shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Bundesland/den Kanton für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string Address1_StateOrProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
		public string Address1_Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
		public string Address1_Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für die primäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
		public string Address1_Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_telephone3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die UPS-Zone der primären Adresse ein, um bei UPS-Versand eine korrekte Berechnung der Versandkosten sowie eine zeitnahe Abwicklung der Lieferungen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
		public string Address1_UpsZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address1_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_upszone", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zeitzone (oder den UTC-Offset) für diese Adresse aus, damit sie bei der Kontaktaufnahme mit einer Person unter dieser Adresse zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
		public System.Nullable<int> Address1_UtcOffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address1_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address1_utcoffset", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für 'Adresse 2'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
		public System.Nullable<System.Guid> Address2_AddressId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("address2_addressid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addressid", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Art der sekundären Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
		public virtual Account_Address2_AddressTypeCode? Address2_AddressTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address2_AddressTypeCode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecodename")]
		public string Address2_AddressTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_addresstypecode"))
				{
					return this.FormattedValues["address2_addresstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Ort für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
		public string Address2_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_city", value);
			}
		}
		
		/// <summary>
		/// Zeigt die vollständige sekundäre Adresse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
		public string Address2_Composite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Geben Sie das Land oder die Region für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
		public string Address2_Country
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_country");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_country", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Verwaltungsbezirk für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
		public string Address2_County
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_county");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_county", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
		public string Address2_Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_fax", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Lieferbedingungen für die sekundäre Adresse aus, um die ordnungsgemäße Verarbeitung von Versandaufträgen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
		public virtual Account_Address2_FreightTermsCode? Address2_FreightTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address2_FreightTermsCode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscodename")]
		public string Address2_FreightTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_freighttermscode"))
				{
					return this.FormattedValues["address2_freighttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Breitengrad der sekundären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
		public System.Nullable<double> Address2_Latitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_latitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_latitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die erste Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
		public string Address2_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die zweite Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
		public string Address2_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die dritte Zeile der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
		public string Address2_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_line3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Längengrad der sekundären Adresse ein. (Wird unter anderem in Kartografieanwendungen verwendet.)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
		public System.Nullable<double> Address2_Longitude
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<double>>("address2_longitude");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_longitude", value);
			}
		}
		
		/// <summary>
		/// Geben Sie einen aussagekräftigen Namen für die sekundäre Adresse ein (beispielsweise 'Firmensitz').
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
		public string Address2_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_name", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postleitzahl (PLZ) für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
		public string Address2_PostalCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postalcode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postalcode", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Postfachnummer der sekundären Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
		public string Address2_PostofficeBox
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_postofficebox");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_postofficebox", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Hauptkontakts für die sekundäre Adresse der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string Address2_PrimaryContactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_primarycontactname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_primarycontactname", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an diese Adresse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public virtual Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Address2_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcodename")]
		public string Address2_ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("address2_shippingmethodcode"))
				{
					return this.FormattedValues["address2_shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Bundesland/den Kanton für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string Address2_StateOrProvince
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_stateorprovince");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_stateorprovince", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
		public string Address2_Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
		public string Address2_Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für die sekundäre Adresse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
		public string Address2_Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_telephone3", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die UPS-Zone der sekundären Adresse ein, um bei UPS-Versand eine korrekte Berechnung der Versandkosten sowie eine zeitnahe Abwicklung der Lieferungen sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
		public string Address2_UpsZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("address2_upszone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_upszone", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zeitzone (oder den UTC-Offset) für diese Adresse aus, damit sie bei der Kontaktaufnahme mit einer Person unter dieser Adresse zur Verfügung steht.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
		public System.Nullable<int> Address2_UtcOffset
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("address2_utcoffset");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("address2_utcoffset", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string AdX_CreatedByIpAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string AdX_CreatedByUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_createdbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_createdbyusername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string AdX_ModifiedByIpAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyipaddress", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string AdX_ModifiedByUsername
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("adx_modifiedbyusername");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("adx_modifiedbyusername", value);
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
		public Microsoft.Xrm.Sdk.Money Aging30
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
			}
		}
		
		/// <summary>
		/// Die Basiswährungsentsprechung des Felds 'Fälligkeit: 30'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
		public Microsoft.Xrm.Sdk.Money Aging30_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
		public Microsoft.Xrm.Sdk.Money Aging60
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
			}
		}
		
		/// <summary>
		/// Die Basiswährungsentsprechung des Felds 'Fälligkeit: 60'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
		public Microsoft.Xrm.Sdk.Money Aging60_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
		public Microsoft.Xrm.Sdk.Money Aging90
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
			}
		}
		
		/// <summary>
		/// Die Basiswährungsentsprechung des Felds 'Fälligkeit: 90'.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
		public Microsoft.Xrm.Sdk.Money Aging90_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Wählen Sie die rechtliche Bezeichnung oder den Geschäftstyp der Firma aus. Diese Angabe wird für Verträge und bei der Berichterstellung verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesstypecode")]
		public virtual Account_BusinessTypeCode? BusinessTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_BusinessTypeCode?)(EntityOptionSetEnum.GetEnum(this, "businesstypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("businesstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesstypecodename")]
		public string BusinessTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("businesstypecode"))
				{
					return this.FormattedValues["businesstypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountmvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_AccountMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_accountmvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountmvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountmvzidname")]
		public string Con_AccountMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountmvzid"))
				{
					return this.FormattedValues["con_accountmvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountnameimprint")]
		public string Con_AccountNameImprint
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_accountnameimprint");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountnameimprint", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountnamesgh")]
		public string Con_AccountNamesGH
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_accountnamesgh");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountnamesgh", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_AccountsGHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_accountsghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_accountsghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_accountsghidname")]
		public string Con_AccountsGHIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_accountsghid"))
				{
					return this.FormattedValues["con_accountsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_actualpharmacysize")]
		public Microsoft.Xrm.Sdk.Money Con_ActualPharmacySize
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_actualpharmacysize");
			}
		}
		
		/// <summary>
		/// Wert von 'Reale Größe Apotheke' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_actualpharmacysize_base")]
		public Microsoft.Xrm.Sdk.Money Con_ActualPharmacySize_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_actualpharmacysize_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_beteiligtepotheken")]
		public System.Nullable<bool> Con_BeTeILiGTePoTheKen
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_beteiligtepotheken");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_beteiligtepotheken", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_beteiligtepothekenname")]
		public string Con_BeTeILiGTePoTheKenName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_beteiligtepotheken"))
				{
					return this.FormattedValues["con_beteiligtepotheken"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_bonustypecode")]
		public virtual Account_Con_BonusTypeCode? Con_BonusTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Con_BonusTypeCode?)(EntityOptionSetEnum.GetEnum(this, "con_bonustypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_bonustypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_bonustypecodename")]
		public string Con_BonusTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_bonustypecode"))
				{
					return this.FormattedValues["con_bonustypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_bonusvalidfrom")]
		public System.Nullable<System.DateTime> Con_BonusValidFrom
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_bonusvalidfrom");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_bonusvalidfrom", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_bonusvalidto")]
		public System.Nullable<System.DateTime> Con_BonusValidTo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_bonusvalidto");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_bonusvalidto", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clustergrepotenzial")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ClusterGrEPoTeNzIAl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_clustergrepotenzial");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clustergrepotenzial", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clustergrepotenzialname")]
		public string Con_ClusterGrEPoTeNzIAlName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_clustergrepotenzial"))
				{
					return this.FormattedValues["con_clustergrepotenzial"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterpot")]
		public string Con_ClusterPot
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_clusterpot");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clusterpot", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletpotentialcode")]
		public virtual Con_StrategySizePotentialCode? Con_ClusterWalletPotentialCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StrategySizePotentialCode?)(EntityOptionSetEnum.GetEnum(this, "con_clusterwalletpotentialcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clusterwalletpotentialcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletpotentialcodename")]
		public string Con_ClusterWalletPotentialCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_clusterwalletpotentialcode"))
				{
					return this.FormattedValues["con_clusterwalletpotentialcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletpotentialstrategycode")]
		public virtual Con_StrategyCode? Con_ClusterWalletPotentialStrategyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StrategyCode?)(EntityOptionSetEnum.GetEnum(this, "con_clusterwalletpotentialstrategycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clusterwalletpotentialstrategycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletpotentialstrategycodename")]
		public string Con_ClusterWalletPotentialStrategyCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_clusterwalletpotentialstrategycode"))
				{
					return this.FormattedValues["con_clusterwalletpotentialstrategycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletrevenuecode")]
		public virtual Con_StrategySizeRevenueCode? Con_ClusterWalletRevenueCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StrategySizeRevenueCode?)(EntityOptionSetEnum.GetEnum(this, "con_clusterwalletrevenuecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clusterwalletrevenuecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletrevenuecodename")]
		public string Con_ClusterWalletRevenueCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_clusterwalletrevenuecode"))
				{
					return this.FormattedValues["con_clusterwalletrevenuecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletrevenuestrategycode")]
		public virtual Con_StrategyCode? Con_ClusterWalletRevenueStrategyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StrategyCode?)(EntityOptionSetEnum.GetEnum(this, "con_clusterwalletrevenuestrategycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_clusterwalletrevenuestrategycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_clusterwalletrevenuestrategycodename")]
		public string Con_ClusterWalletRevenueStrategyCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_clusterwalletrevenuestrategycode"))
				{
					return this.FormattedValues["con_clusterwalletrevenuestrategycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Dimension, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_coalitionid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_CoalitionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_coalitionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_coalitionid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_coalitionidname")]
		public string Con_CoalitionIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_coalitionid"))
				{
					return this.FormattedValues["con_coalitionid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Dimension, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_collectiveinvoicetypeid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_CollectiveInvoiceTypeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_collectiveinvoicetypeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_collectiveinvoicetypeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_collectiveinvoicetypeidname")]
		public string Con_CollectiveInvoiceTypeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_collectiveinvoicetypeid"))
				{
					return this.FormattedValues["con_collectiveinvoicetypeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_connections")]
		public string Con_Connections
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_connections");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_connections", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Kontakt, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactidname")]
		public string Con_ContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactid"))
				{
					return this.FormattedValues["con_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactidyominame")]
		public string Con_ContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_contactid"))
				{
					return this.FormattedValues["con_contactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contacttimessgh")]
		public string Con_ContactTiMessGH
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_contacttimessgh");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_contacttimessgh", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerblockcode")]
		public virtual Account_Con_CustomerBlockCode? Con_CustomerBlockCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Con_CustomerBlockCode?)(EntityOptionSetEnum.GetEnum(this, "con_customerblockcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customerblockcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerblockcodename")]
		public string Con_CustomerBlockCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customerblockcode"))
				{
					return this.FormattedValues["con_customerblockcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerdiscountgroupid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_CustomerDiscountGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_customerdiscountgroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customerdiscountgroupid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerdiscountgroupidname")]
		public string Con_CustomerDiscountGroupIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customerdiscountgroupid"))
				{
					return this.FormattedValues["con_customerdiscountgroupid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customergroupcodeid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_CustomerGroupCodeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_customergroupcodeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customergroupcodeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customergroupcodeidname")]
		public string Con_CustomerGroupCodeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customergroupcodeid"))
				{
					return this.FormattedValues["con_customergroupcodeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerno")]
		public string Con_CustomerNo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_customerno");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customerno", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Dimension, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerpricegroupid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_CustomerPriceGroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_customerpricegroupid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customerpricegroupid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customerpricegroupidname")]
		public string Con_CustomerPriceGroupIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customerpricegroupid"))
				{
					return this.FormattedValues["con_customerpricegroupid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecode")]
		public virtual Con_GlobalCustomerTypeCode? Con_CustomerTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_GlobalCustomerTypeCode?)(EntityOptionSetEnum.GetEnum(this, "con_customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_customertypecodename")]
		public string Con_CustomerTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_customertypecode"))
				{
					return this.FormattedValues["con_customertypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcemvzcode")]
		public virtual Con_SourceCode? Con_DataSetSourceMvZCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SourceCode?)(EntityOptionSetEnum.GetEnum(this, "con_datasetsourcemvzcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourcemvzcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcemvzcodename")]
		public string Con_DataSetSourceMvZCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_datasetsourcemvzcode"))
				{
					return this.FormattedValues["con_datasetsourcemvzcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourceomnicampuscode")]
		public virtual Con_SourceCode? Con_DataSetsOurCeoMnICampusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SourceCode?)(EntityOptionSetEnum.GetEnum(this, "con_datasetsourceomnicampuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourceomnicampuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourceomnicampuscodename")]
		public string Con_DataSetsOurCeoMnICampusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_datasetsourceomnicampuscode"))
				{
					return this.FormattedValues["con_datasetsourceomnicampuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcesghcode")]
		public virtual Con_SourceCode? Con_DataSetSourcesGHCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SourceCode?)(EntityOptionSetEnum.GetEnum(this, "con_datasetsourcesghcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_datasetsourcesghcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_datasetsourcesghcodename")]
		public string Con_DataSetSourcesGHCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_datasetsourcesghcode"))
				{
					return this.FormattedValues["con_datasetsourcesghcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_days")]
		public virtual System.Collections.Generic.IEnumerable<Con_Days> Con_Days
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_Days>(this, "con_days");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_days", EntityOptionSetEnum.GetMultiEnum(this, "con_days", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_daysname")]
		public string Con_DaysName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_days"))
				{
					return this.FormattedValues["con_days"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_endtimefri1")]
		public string Con_EndTimeFri1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_endtimefri1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_endtimefri1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_endtimemo1")]
		public string Con_EndTiMemo1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_endtimemo1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_endtimemo1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_endtimethurs1")]
		public string Con_EndTimeThurs1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_endtimethurs1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_endtimethurs1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_endtimetue2")]
		public string Con_EndTimeTue2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_endtimetue2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_endtimetue2", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_endtimewed1")]
		public string Con_EndTiMewed1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_endtimewed1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_endtimewed1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_exploitationofpotential")]
		public System.Nullable<decimal> Con_ExploitationOfPotential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_exploitationofpotential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_exploitationofpotential", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_firmenname2")]
		public string Con_FIrMenName2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_firmenname2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_firmenname2", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Firma, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_formeraccountid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_FormerAccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_formeraccountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_formeraccountid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_formeraccountidname")]
		public string Con_FormerAccountIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_formeraccountid"))
				{
					return this.FormattedValues["con_formeraccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_formeraccountidyominame")]
		public string Con_FormerAccountIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_formeraccountid"))
				{
					return this.FormattedValues["con_formeraccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_friday")]
		public virtual Con_FridayCode? Con_Friday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_FridayCode?)(EntityOptionSetEnum.GetEnum(this, "con_friday")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_friday", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_fridayname")]
		public string Con_FridayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_friday"))
				{
					return this.FormattedValues["con_friday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_georgraphicclustercode")]
		public virtual Con_GeOrGraphicClusterCode? Con_GeOrGraphicClusterCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_GeOrGraphicClusterCode?)(EntityOptionSetEnum.GetEnum(this, "con_georgraphicclustercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_georgraphicclustercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_georgraphicclustercodename")]
		public string Con_GeOrGraphicClusterCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_georgraphicclustercode"))
				{
					return this.FormattedValues["con_georgraphicclustercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_growthpotentialcode")]
		public virtual Account_Con_GrowthPotentialCode? Con_GrowthPotentialCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Con_GrowthPotentialCode?)(EntityOptionSetEnum.GetEnum(this, "con_growthpotentialcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_growthpotentialcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_growthpotentialcodename")]
		public string Con_GrowthPotentialCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_growthpotentialcode"))
				{
					return this.FormattedValues["con_growthpotentialcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_hemophilia")]
		public System.Nullable<bool> Con_Hemophilia
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_hemophilia");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_hemophilia", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_hemophilianame")]
		public string Con_HemophiliaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_hemophilia"))
				{
					return this.FormattedValues["con_hemophilia"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_insidesalesstatuscode")]
		public virtual Con_InsideSalesStatusCode? Con_InsideSalesStatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_InsideSalesStatusCode?)(EntityOptionSetEnum.GetEnum(this, "con_insidesalesstatuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_insidesalesstatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_insidesalesstatuscodename")]
		public string Con_InsideSalesStatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_insidesalesstatuscode"))
				{
					return this.FormattedValues["con_insidesalesstatuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isabcpprogram")]
		public System.Nullable<bool> Con_IsAbcPProgram
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_isabcpprogram");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_isabcpprogram", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isabcpprogramname")]
		public string Con_IsAbcPProgramName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_isabcpprogram"))
				{
					return this.FormattedValues["con_isabcpprogram"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isbonus")]
		public System.Nullable<bool> Con_IsBonus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_isbonus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_isbonus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isbonusname")]
		public string Con_IsBonusName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_isbonus"))
				{
					return this.FormattedValues["con_isbonus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_iskp2rule")]
		public System.Nullable<bool> Con_IsKP2Rule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_iskp2rule");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_iskp2rule", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_iskp2rulename")]
		public string Con_IsKP2RuleName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_iskp2rule"))
				{
					return this.FormattedValues["con_iskp2rule"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_islinediscount")]
		public System.Nullable<bool> Con_IsLineDiscount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_islinediscount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_islinediscount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_islinediscountname")]
		public string Con_IsLineDiscountName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_islinediscount"))
				{
					return this.FormattedValues["con_islinediscount"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isspecialprice")]
		public System.Nullable<bool> Con_IsSpecialPrice
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_isspecialprice");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_isspecialprice", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_isspecialpricename")]
		public string Con_IsSpecialPriceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_isspecialprice"))
				{
					return this.FormattedValues["con_isspecialprice"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_lastactivityon")]
		public System.Nullable<System.DateTime> Con_LastActivityOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_lastactivityon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_lastactivityon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_lastdelivery")]
		public System.Nullable<System.DateTime> Con_LastDelivery
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("con_lastdelivery");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_lastdelivery", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_leadcategorycode")]
		public virtual Con_LeadCategoryCode? Con_LeadCategoryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_LeadCategoryCode?)(EntityOptionSetEnum.GetEnum(this, "con_leadcategorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_leadcategorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_leadcategorycodename")]
		public string Con_LeadCategoryCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_leadcategorycode"))
				{
					return this.FormattedValues["con_leadcategorycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_leadoppphasecode")]
		public virtual Con_LeadOpPpHaSeCode? Con_LeadOpPpHaSeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_LeadOpPpHaSeCode?)(EntityOptionSetEnum.GetEnum(this, "con_leadoppphasecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_leadoppphasecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_leadoppphasecodename")]
		public string Con_LeadOpPpHaSeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_leadoppphasecode"))
				{
					return this.FormattedValues["con_leadoppphasecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_levelcode")]
		public virtual Account_Con_LevelCode? Con_LevelCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Con_LevelCode?)(EntityOptionSetEnum.GetEnum(this, "con_levelcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_levelcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_levelcodename")]
		public string Con_LevelCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_levelcode"))
				{
					return this.FormattedValues["con_levelcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_logourl")]
		public string Con_LogoUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_logourl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_logourl", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_managingdoctorid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ManagingDoctorId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_managingdoctorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_managingdoctorid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_managingdoctoridname")]
		public string Con_ManagingDoctorIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_managingdoctorid"))
				{
					return this.FormattedValues["con_managingdoctorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_managingdoctoridyominame")]
		public string Con_ManagingDoctorIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_managingdoctorid"))
				{
					return this.FormattedValues["con_managingdoctorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_marketpotential")]
		public System.Nullable<bool> Con_MarketPotential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_marketpotential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_marketpotential", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_marketpotentialname")]
		public string Con_MarketPotentialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_marketpotential"))
				{
					return this.FormattedValues["con_marketpotential"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_massnahmen")]
		public virtual Con_MassNaHMen? Con_MassNaHMen
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_MassNaHMen?)(EntityOptionSetEnum.GetEnum(this, "con_massnahmen")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_massnahmen", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_massnahmenname")]
		public string Con_MassNaHMenName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_massnahmen"))
				{
					return this.FormattedValues["con_massnahmen"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_monday")]
		public virtual Con_MondayCode? Con_Monday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_MondayCode?)(EntityOptionSetEnum.GetEnum(this, "con_monday")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_monday", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_mondayname")]
		public string Con_MondayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_monday"))
				{
					return this.FormattedValues["con_monday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_name2")]
		public string Con_Name2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_name2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_name2", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_nameqi")]
		public string Con_NameQI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_nameqi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_nameqi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_numberofdoctors")]
		public System.Nullable<int> Con_NumberOfDoctors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("con_numberofdoctors");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_numberofdoctors", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_numberofproductions")]
		public System.Nullable<int> Con_NumberOfProductions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("con_numberofproductions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_numberofproductions", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omnicarefitcode")]
		public virtual Con_OMnICaRefitCode? Con_OMnICaRefitCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_OMnICaRefitCode?)(EntityOptionSetEnum.GetEnum(this, "con_omnicarefitcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_omnicarefitcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omnicarefitcodename")]
		public string Con_OMnICaRefitCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_omnicarefitcode"))
				{
					return this.FormattedValues["con_omnicarefitcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omniplaner")]
		public System.Nullable<bool> Con_OMnIPlaner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_omniplaner");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_omniplaner", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_omniplanername")]
		public string Con_OMnIPlanerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_omniplaner"))
				{
					return this.FormattedValues["con_omniplaner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_oncologic")]
		public System.Nullable<bool> Con_Oncologic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_oncologic");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_oncologic", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_oncologicname")]
		public string Con_OncologicName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_oncologic"))
				{
					return this.FormattedValues["con_oncologic"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_onkokey")]
		public string Con_OnKoKey
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_onkokey");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_onkokey", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_openpotential")]
		public Microsoft.Xrm.Sdk.Money Con_OpenPotential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_openpotential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_openpotential", value);
			}
		}
		
		/// <summary>
		/// Wert von 'Potenzial (€)' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_openpotential_base")]
		public Microsoft.Xrm.Sdk.Money Con_OpenPotential_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_openpotential_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_openpotentialpercentage")]
		public System.Nullable<decimal> Con_OpenPotentialPercentage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_openpotentialpercentage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_openpotentialpercentage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownermvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownermvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzidname")]
		public string Con_OwnerMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownermvzid"))
				{
					return this.FormattedValues["con_ownermvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownermvzidyominame")]
		public string Con_OwnerMvZIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownermvzid"))
				{
					return this.FormattedValues["con_ownermvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OWNeRoMnICampusId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_owneromnicampusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_owneromnicampusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusidname")]
		public string Con_OWNeRoMnICampusIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_owneromnicampusid"))
				{
					return this.FormattedValues["con_owneromnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_owneromnicampusidyominame")]
		public string Con_OWNeRoMnICampusIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_owneromnicampusid"))
				{
					return this.FormattedValues["con_owneromnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerQIId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerqiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerqiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiidname")]
		public string Con_OwnerQIIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerqiid"))
				{
					return this.FormattedValues["con_ownerqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerqiidyominame")]
		public string Con_OwnerQIIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerqiid"))
				{
					return this.FormattedValues["con_ownerqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnersGHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownersghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownersghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghidname")]
		public string Con_OwnersGHIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownersghid"))
				{
					return this.FormattedValues["con_ownersghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownersghidyominame")]
		public string Con_OwnersGHIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownersghid"))
				{
					return this.FormattedValues["con_ownersghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeamMvZId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteammvzid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteammvzid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzidname")]
		public string Con_OwnerTeamMvZIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteammvzid"))
				{
					return this.FormattedValues["con_ownerteammvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteammvzidyominame")]
		public string Con_OwnerTeamMvZIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteammvzid"))
				{
					return this.FormattedValues["con_ownerteammvzid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeaMoMnICampusId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamomnicampusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamomnicampusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusidname")]
		public string Con_OwnerTeaMoMnICampusIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamomnicampusid"))
				{
					return this.FormattedValues["con_ownerteamomnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamomnicampusidyominame")]
		public string Con_OwnerTeaMoMnICampusIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamomnicampusid"))
				{
					return this.FormattedValues["con_ownerteamomnicampusid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeamQIId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamqiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamqiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiidname")]
		public string Con_OwnerTeamQIIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamqiid"))
				{
					return this.FormattedValues["con_ownerteamqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamqiidyominame")]
		public string Con_OwnerTeamQIIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamqiid"))
				{
					return this.FormattedValues["con_ownerteamqiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_OwnerTeaMsgHId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_ownerteamsghid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_ownerteamsghid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghidname")]
		public string Con_OwnerTeaMsgHiDnaMe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamsghid"))
				{
					return this.FormattedValues["con_ownerteamsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_ownerteamsghidyominame")]
		public string Con_OwnerTeaMsgHIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_ownerteamsghid"))
				{
					return this.FormattedValues["con_ownerteamsghid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_passiv_kunde")]
		public string Con_PassIv_KUnDe
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_passiv_kunde");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_passiv_kunde", value);
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Dimension, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_paymenttermsid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_PaymentTermsId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_paymenttermsid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_paymenttermsid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_paymenttermsidname")]
		public string Con_PaymentTermsIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_paymenttermsid"))
				{
					return this.FormattedValues["con_paymenttermsid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für Dimension, zugeordnet zu Firma.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_paymenttypeid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_PaymentTypeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_paymenttypeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_paymenttypeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_paymenttypeidname")]
		public string Con_PaymentTypeIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_paymenttypeid"))
				{
					return this.FormattedValues["con_paymenttypeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylevel")]
		public virtual Account_Con_PharmacyLevel? Con_PharmacyLevel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_Con_PharmacyLevel?)(EntityOptionSetEnum.GetEnum(this, "con_pharmacylevel")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_pharmacylevel", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylevelname")]
		public string Con_PharmacyLevelName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_pharmacylevel"))
				{
					return this.FormattedValues["con_pharmacylevel"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylogo")]
		public byte[] Con_PharmacyLogo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("con_pharmacylogo");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_pharmacylogo", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylogo_timestamp")]
		public System.Nullable<long> Con_PharmacyLogo_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("con_pharmacylogo_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylogo_url")]
		public string Con_PharmacyLogo_Url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_pharmacylogo_url");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_pharmacylogoid")]
		public System.Nullable<System.Guid> Con_PharmacyLogoId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("con_pharmacylogoid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_postalcodeareaid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_PostalCodeAreaId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_postalcodeareaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_postalcodeareaid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_postalcodeareaidname")]
		public string Con_PostalCodeAreaIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_postalcodeareaid"))
				{
					return this.FormattedValues["con_postalcodeareaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_potentialnumberofunitsproduced")]
		public System.Nullable<decimal> Con_PotentialNumberOfUnitsProduced
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_potentialnumberofunitsproduced");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_praxisassociationid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_PraxisAssociationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_praxisassociationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_praxisassociationid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_praxisassociationidname")]
		public string Con_PraxisAssociationIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_praxisassociationid"))
				{
					return this.FormattedValues["con_praxisassociationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_producednumber")]
		public System.Nullable<decimal> Con_ProducedNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_producednumber");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_purchasingcommunity")]
		public virtual Con_PurchasingCommunityOpt? Con_PurchasingCommunity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_PurchasingCommunityOpt?)(EntityOptionSetEnum.GetEnum(this, "con_purchasingcommunity")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_purchasingcommunity", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_purchasingcommunityname")]
		public string Con_PurchasingCommunityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_purchasingcommunity"))
				{
					return this.FormattedValues["con_purchasingcommunity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_qualityinitiativecode")]
		public virtual Con_QualityInitiativeCode? Con_QualityInitiativeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_QualityInitiativeCode?)(EntityOptionSetEnum.GetEnum(this, "con_qualityinitiativecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_qualityinitiativecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_qualityinitiativecodename")]
		public string Con_QualityInitiativeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_qualityinitiativecode"))
				{
					return this.FormattedValues["con_qualityinitiativecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_quartercode")]
		public virtual Con_QuarterCode? Con_QuarterCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_QuarterCode?)(EntityOptionSetEnum.GetEnum(this, "con_quartercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_quartercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_quartercodename")]
		public string Con_QuarterCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_quartercode"))
				{
					return this.FormattedValues["con_quartercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingmvzcode")]
		public virtual Con_ProcessingReasonsCode? Con_ReasonForProcessingMvZCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ProcessingReasonsCode?)(EntityOptionSetEnum.GetEnum(this, "con_reasonforprocessingmvzcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingmvzcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingmvzcodename")]
		public string Con_ReasonForProcessingMvZCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_reasonforprocessingmvzcode"))
				{
					return this.FormattedValues["con_reasonforprocessingmvzcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingomnicampuscode")]
		public virtual Con_ProcessingReasonsCode? Con_ReasonForProcessInGoMnICampusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ProcessingReasonsCode?)(EntityOptionSetEnum.GetEnum(this, "con_reasonforprocessingomnicampuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingomnicampuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingomnicampuscodename")]
		public string Con_ReasonForProcessInGoMnICampusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_reasonforprocessingomnicampuscode"))
				{
					return this.FormattedValues["con_reasonforprocessingomnicampuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingsghcode")]
		public virtual Con_ProcessingReasonsCode? Con_ReasonForProcessInGsGHCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ProcessingReasonsCode?)(EntityOptionSetEnum.GetEnum(this, "con_reasonforprocessingsghcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_reasonforprocessingsghcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_reasonforprocessingsghcodename")]
		public string Con_ReasonForProcessInGsGHCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_reasonforprocessingsghcode"))
				{
					return this.FormattedValues["con_reasonforprocessingsghcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_requestedcreditlimit")]
		public Microsoft.Xrm.Sdk.Money Con_RequestedCreditLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_requestedcreditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_requestedcreditlimit", value);
			}
		}
		
		/// <summary>
		/// Wert von 'Beantragtes Limit' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_requestedcreditlimit_base")]
		public Microsoft.Xrm.Sdk.Money Con_RequestedCreditLimit_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_requestedcreditlimit_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_responsibleid")]
		public Microsoft.Xrm.Sdk.EntityReference Con_ResponsibleId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("con_responsibleid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_responsibleid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_responsibleidname")]
		public string Con_ResponsibleIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_responsibleid"))
				{
					return this.FormattedValues["con_responsibleid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_revenueltm")]
		public Microsoft.Xrm.Sdk.Money Con_RevenueLTm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_revenueltm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_revenueltm", value);
			}
		}
		
		/// <summary>
		/// Wert von 'Umsatz LTM' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_revenueltm_base")]
		public Microsoft.Xrm.Sdk.Money Con_RevenueLTm_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_revenueltm_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_rollofinvolvedpharmacy")]
		public virtual System.Collections.Generic.IEnumerable<Con_Account_Con_RollOfInvolvedPharmacy> Con_RollOfInvolvedPharmacy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_Account_Con_RollOfInvolvedPharmacy>(this, "con_rollofinvolvedpharmacy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_rollofinvolvedpharmacy", EntityOptionSetEnum.GetMultiEnum(this, "con_rollofinvolvedpharmacy", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_rollofinvolvedpharmacyname")]
		public string Con_RollOfInvolvedPharmacyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_rollofinvolvedpharmacy"))
				{
					return this.FormattedValues["con_rollofinvolvedpharmacy"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesareacode")]
		public virtual Con_SalesAreaCode? Con_SalesAreaCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SalesAreaCode?)(EntityOptionSetEnum.GetEnum(this, "con_salesareacode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_salesareacode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesareacodename")]
		public string Con_SalesAreaCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_salesareacode"))
				{
					return this.FormattedValues["con_salesareacode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesocqicode")]
		public virtual Con_SaleSocQICode? Con_SaleSocQICode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SaleSocQICode?)(EntityOptionSetEnum.GetEnum(this, "con_salesocqicode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_salesocqicode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_salesocqicodename")]
		public string Con_SaleSocQICodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_salesocqicode"))
				{
					return this.FormattedValues["con_salesocqicode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// SGH - Kunden die zu bestimmten produkten nicht angesprochen werden dürfen
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_sghnotallowedproduct")]
		public string Con_SGHNotAllowedProduct
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_sghnotallowedproduct");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_sghnotallowedproduct", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_shareofwalletpotenzialoccode")]
		public virtual Con_ShareOfWalletPoTeNzIaLocCode? Con_ShareOfWalletPoTeNzIaLocCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ShareOfWalletPoTeNzIaLocCode?)(EntityOptionSetEnum.GetEnum(this, "con_shareofwalletpotenzialoccode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_shareofwalletpotenzialoccode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_shareofwalletpotenzialoccodename")]
		public string Con_ShareOfWalletPoTeNzIaLocCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_shareofwalletpotenzialoccode"))
				{
					return this.FormattedValues["con_shareofwalletpotenzialoccode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_signedcreditlimit")]
		public Microsoft.Xrm.Sdk.Money Con_SignedCreditLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_signedcreditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_signedcreditlimit", value);
			}
		}
		
		/// <summary>
		/// Wert von 'Gezeichnetes Limit' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_signedcreditlimit_base")]
		public Microsoft.Xrm.Sdk.Money Con_SignedCreditLimit_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_signedcreditlimit_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_sizewalletpharmacyqicode")]
		public virtual Con_SizeWalletPharmacyQICode? Con_SizeWalletPharmacyQICode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_SizeWalletPharmacyQICode?)(EntityOptionSetEnum.GetEnum(this, "con_sizewalletpharmacyqicode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_sizewalletpharmacyqicode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_sizewalletpharmacyqicodename")]
		public string Con_SizeWalletPharmacyQICodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_sizewalletpharmacyqicode"))
				{
					return this.FormattedValues["con_sizewalletpharmacyqicode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholdercode")]
		public virtual Con_StakeholderCode? Con_StakeholderCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StakeholderCode?)(EntityOptionSetEnum.GetEnum(this, "con_stakeholdercode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_stakeholdercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_stakeholdercodename")]
		public string Con_StakeholderCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_stakeholdercode"))
				{
					return this.FormattedValues["con_stakeholdercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_startimefri1")]
		public string Con_StarTimeFri1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_startimefri1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_startimefri1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_starttimemo1")]
		public string Con_StartTiMemo1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_starttimemo1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_starttimemo1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_starttimethur1")]
		public string Con_StartTimeThuR1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_starttimethur1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_starttimethur1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_starttimetue1")]
		public string Con_StartTimeTue1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_starttimetue1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_starttimetue1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_starttimewed1")]
		public string Con_StartTiMewed1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_starttimewed1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_starttimewed1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_statusleadoppcode")]
		public virtual Con_StatusLeADoPpCode? Con_StatusLeADoPpCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_StatusLeADoPpCode?)(EntityOptionSetEnum.GetEnum(this, "con_statusleadoppcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_statusleadoppcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_statusleadoppcodename")]
		public string Con_StatusLeADoPpCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_statusleadoppcode"))
				{
					return this.FormattedValues["con_statusleadoppcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_strategischerpartner")]
		public System.Nullable<bool> Con_StRateGiScHerPartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_strategischerpartner");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_strategischerpartner", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_strategischerpartnername")]
		public string Con_StRateGiScHerPartnerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_strategischerpartner"))
				{
					return this.FormattedValues["con_strategischerpartner"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_supplyingqipharmacy")]
		public string Con_SupplyingQIPharmacy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_supplyingqipharmacy");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_supplyingqipharmacy", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_supplyingqipharmacycode")]
		public virtual Con_QISuppliedPharmacyCode? Con_SupplyingQIPharmacyCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_QISuppliedPharmacyCode?)(EntityOptionSetEnum.GetEnum(this, "con_supplyingqipharmacycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_supplyingqipharmacycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_supplyingqipharmacycodename")]
		public string Con_SupplyingQIPharmacyCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_supplyingqipharmacycode"))
				{
					return this.FormattedValues["con_supplyingqipharmacycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_targetcustomer")]
		public System.Nullable<bool> Con_TargetCustomer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("con_targetcustomer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_targetcustomer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_targetcustomername")]
		public string Con_TargetCustomerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_targetcustomer"))
				{
					return this.FormattedValues["con_targetcustomer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_thursday")]
		public virtual Con_ThursdayCode? Con_Thursday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_ThursdayCode?)(EntityOptionSetEnum.GetEnum(this, "con_thursday")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_thursday", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_thursdayname")]
		public string Con_ThursdayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_thursday"))
				{
					return this.FormattedValues["con_thursday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_titel")]
		public string Con_TiTel
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("con_titel");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_titel", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_totalpotential")]
		public Microsoft.Xrm.Sdk.Money Con_TotalPotential
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_totalpotential");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_totalpotential", value);
			}
		}
		
		/// <summary>
		/// Wert von 'Potenzial (€)' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_totalpotential_base")]
		public Microsoft.Xrm.Sdk.Money Con_TotalPotential_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("con_totalpotential_base");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_tuesday")]
		public virtual Con_TuesdayCode? Con_Tuesday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_TuesdayCode?)(EntityOptionSetEnum.GetEnum(this, "con_tuesday")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_tuesday", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_tuesdayname")]
		public string Con_TuesdayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_tuesday"))
				{
					return this.FormattedValues["con_tuesday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_turnvoverocltmaek")]
		public System.Nullable<decimal> Con_TurnVOverOCLtMaeK
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("con_turnvoverocltmaek");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_wednesday")]
		public virtual Con_WednesdayCode? Con_Wednesday
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Con_WednesdayCode?)(EntityOptionSetEnum.GetEnum(this, "con_wednesday")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("con_wednesday", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_wednesdayname")]
		public string Con_WednesdayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("con_wednesday"))
				{
					return this.FormattedValues["con_wednesday"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Zeigt die externe Partei, die den Datensatz erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyname")]
		public string CreatedByExternalPartyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
		public string CreatedByExternalPartyYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdbyexternalparty"))
				{
					return this.FormattedValues["createdbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt Datum und Uhrzeit der Datensatzerstellung gemäß der Zeitzone, die in den Optionen von Microsoft Dynamics 365 ausgewählt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz im Auftrag eines anderen Benutzers erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Kreditlimit der Firma ein. Dies ist hilfreich bei der Bearbeitung von Rechnungs- und Buchungsproblemen mit dem Kunden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
		public Microsoft.Xrm.Sdk.Money CreditLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditlimit", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Kreditlimit, das für die Berichterstellung in die standardmäßige Basiswährung des Systems konvertiert wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
		public Microsoft.Xrm.Sdk.Money CreditLimit_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob der Kredit für die Firma zurückgestellt wurde. Dies ist hilfreich bei der Bearbeitung von Rechnungs- und Buchungsproblemen mit dem Kunden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
		public System.Nullable<bool> CreditOnHold
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("creditonhold");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("creditonhold", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonholdname")]
		public string CreditOnHoldName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("creditonhold"))
				{
					return this.FormattedValues["creditonhold"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Größenkategorie oder den Größenbereich der Firma aus. Diese Angabe wird für die Segmentierung und bei der Berichterstellung verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
		public virtual Account_CustomerSizeCode? CustomerSizeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_CustomerSizeCode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecodename")]
		public string CustomerSizeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("customersizecode"))
				{
					return this.FormattedValues["customersizecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Kategorie aus, die die Beziehung zwischen der Firma und Ihrer Organisation am besten beschreibt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
		public virtual Account_CustomerTypeCode? CustomerTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_CustomerTypeCode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecodename")]
		public string CustomerTypeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("customertypecode"))
				{
					return this.FormattedValues["customertypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die standardmäßige Preisliste aus, die dieser Firma zugeordnet ist, um sicherzustellen, dass Verkaufschancen, Angebote und Aufträge die korrekten Produktpreise für diesen Kunden enthalten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultPriceLevelId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("defaultpricelevelid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelidname")]
		public string DefaultPriceLevelIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("defaultpricelevelid"))
				{
					return this.FormattedValues["defaultpricelevelid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie zusätzliche beschreibende Informationen für die Firma ein (beispielsweise einen Auszug von der Website des Unternehmens).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma den Versand von Massen-E-Mails im Rahmen von Kampagnen zulässt. Bei 'Nicht zulassen' kann die Firma zwar Marketinglisten hinzugefügt werden, ist aber vom E-Mail-Versand ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
		public System.Nullable<bool> DoNotBulkEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemailname")]
		public string DoNotBulkEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotbulkemail"))
				{
					return this.FormattedValues["donotbulkemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma Massensendungen im Rahmen von Marketing- oder Schnellkampagnen zulässt. Bei 'Nicht zulassen' kann die Firma zwar Marketinglisten hinzugefügt werden, ist aber vom Postversand ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public System.Nullable<bool> DoNotBulkPostalMail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotbulkpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotbulkpostalmail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmailname")]
		public string DoNotBulkPostalMailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotbulkpostalmail"))
				{
					return this.FormattedValues["donotbulkpostalmail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma Direktmailing von Microsoft Dynamics 365 zulässt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public System.Nullable<bool> DoNotEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemailname")]
		public string DoNotEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotemail"))
				{
					return this.FormattedValues["donotemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma den Versand von Faxnachrichten zulässt. Bei 'Nicht zulassen' kann die Firma zwar Marketinglisten hinzugefügt werden, ist aber von Faxaktivitäten im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public System.Nullable<bool> DoNotFax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotfax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotfax", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfaxname")]
		public string DoNotFaxName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotfax"))
				{
					return this.FormattedValues["donotfax"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma Telefonanrufe zulässt. Bei 'Nicht zulassen' kann die Firma zwar Marketinglisten hinzugefügt werden, ist aber von Telefonanrufen im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public System.Nullable<bool> DoNotPhone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotphone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotphone", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphonename")]
		public string DoNotPhoneName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotphone"))
				{
					return this.FormattedValues["donotphone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma adressierte Werbesendungen zulässt. Bei 'Nicht zulassen' kann die Firma zwar Marketinglisten hinzugefügt werden, ist aber von Briefaktivitäten im Rahmen von Marketingkampagnen ausgenommen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public System.Nullable<bool> DoNotPostalMail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotpostalmail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotpostalmail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmailname")]
		public string DoNotPostalMailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotpostalmail"))
				{
					return this.FormattedValues["donotpostalmail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmarketingmaterialname")]
		public string DoNotSendMarketingMaterialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("donotsendmm"))
				{
					return this.FormattedValues["donotsendmm"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie aus, ob die Firma Marketingmaterial wie Broschüren oder Kataloge akzeptiert.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
		public System.Nullable<bool> DoNotSendMm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("donotsendmm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("donotsendmm", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die primäre E-Mail-Adresse für die Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
		public string EmailAddress1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die sekundäre E-Mail-Adresse für die Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
		public string EmailAddress2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine alternative E-Mail-Adresse für die Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
		public string EmailAddress3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("emailaddress3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("emailaddress3", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Standardbild für den Datensatz.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_Url
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Zeigt den Wechselkurs der Währung des Datensatzes. Mithilfe des Wechselkurses werden alle Betragsfelder des Datensatzes aus der lokalen Währung in die Standardwährung des Systems konvertiert.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangerAte
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Geben Sie die Faxnummer für die Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
		public string Fax
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("fax");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("fax", value);
			}
		}
		
		/// <summary>
		/// Informationen darüber, ob das Verfolgen der E-Mail-Aktivität wie öffnen, Anhänge anzeigen und auf Links für E-Mails, die an das Konto gesendet wurden, klicken erlaubt ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
		public System.Nullable<bool> FollowEmail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("followemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailname")]
		public string FollowEmailName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("followemail"))
				{
					return this.FormattedValues["followemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die URL für die FTP-Site der Firma ein, damit Benutzer auf Daten zugreifen und Dokumente teilen können.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
		public string FtpSiteUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ftpsiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ftpsiteurl", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qi")]
		public Microsoft.Xrm.Sdk.EntityReference IcB_Account_QI
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("icb_account_qi");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("icb_account_qi", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qimv")]
		public Microsoft.Xrm.Sdk.EntityReference IcB_Account_QIMv
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("icb_account_qimv");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("icb_account_qimv", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qimvname")]
		public string IcB_Account_QIMvName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("icb_account_qimv"))
				{
					return this.FormattedValues["icb_account_qimv"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qiname")]
		public string IcB_Account_QIName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("icb_account_qi"))
				{
					return this.FormattedValues["icb_account_qi"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qms")]
		public Microsoft.Xrm.Sdk.EntityReference IcB_Account_QMs
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("icb_account_qms");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("icb_account_qms", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qmsname")]
		public string IcB_Account_QMsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("icb_account_qms"))
				{
					return this.FormattedValues["icb_account_qms"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qs")]
		public Microsoft.Xrm.Sdk.EntityReference IcB_Account_QS
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("icb_account_qs");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("icb_account_qs", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("icb_account_qsname")]
		public string IcB_Account_QSName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("icb_account_qs"))
				{
					return this.FormattedValues["icb_account_qs"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Datenimports oder der Datenmigration, von dem/der dieser Datensatz erstellt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die primäre Branche der Firma für die Marketingsegmentierung und die demografische Analyse aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("industrycode")]
		public virtual Account_IndustryCode? IndustryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_IndustryCode?)(EntityOptionSetEnum.GetEnum(this, "industrycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("industrycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("industrycodename")]
		public string IndustryCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("industrycode"))
				{
					return this.FormattedValues["industrycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string IsPrivateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enthält den Datums- und Zeitstempel der letzten Zurückstellungszeit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Zeigt das Datum, an dem die Firma zuletzt Teil einer Marketing- oder Schnellkampagne war.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
		public System.Nullable<System.DateTime> LastUsedInCampaign
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastusedincampaign");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("lastusedincampaign", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Marktkapitalisierung der Firma ein, um das Eigenkapital des Unternehmens anzugeben. Dieser Wert wird als Indikator bei der Finanzanalyse verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap")]
		public Microsoft.Xrm.Sdk.Money MarketCap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketcap", value);
			}
		}
		
		/// <summary>
		/// Zeigt die in die standardmäßige Basiswährung des Systems konvertierte Marktkapitalisierung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketcap_base")]
		public Microsoft.Xrm.Sdk.Money MarketCap_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("marketcap_base");
			}
		}
		
		/// <summary>
		/// Gibt an, ob es nur zum Marketing dient.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
		public System.Nullable<bool> MarketingOnly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("marketingonly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("marketingonly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonlyname")]
		public string MarketingOnlyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("marketingonly"))
				{
					return this.FormattedValues["marketingonly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masteraccountidname")]
		public string MasterAccountIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("masterid"))
				{
					return this.FormattedValues["masterid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masteraccountidyominame")]
		public string MasterAccountIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("masterid"))
				{
					return this.FormattedValues["masterid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt die Hauptfirma, mit der die Firma zusammengeführt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference MasterId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Zeigt, ob die Firma mit einer anderen Firma zusammengeführt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public System.Nullable<bool> Merged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("merged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mergedname")]
		public string MergedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("merged"))
				{
					return this.FormattedValues["merged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz zuletzt aktualisiert hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Zeigt die externe Partei, die den Datensatz geändert hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
		public string ModifiedByExternalPartyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
		public string ModifiedByExternalPartyYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedbyexternalparty"))
				{
					return this.FormattedValues["modifiedbyexternalparty"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Datum und Uhrzeit der letzten Datensatzaktualisierung gemäß der Zeitzone, die in den Optionen von Microsoft Dynamics 365 ausgewählt wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Zeigt, wer den Datensatz im Auftrag eines anderen Benutzers erstellt hat.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für das Konto, das dem Konto zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public Microsoft.Xrm.Sdk.EntityReference MSa_ManagingPartnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msa_managingpartnerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridname")]
		public string MsA_ManagingPartnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msa_managingpartnerid"))
				{
					return this.FormattedValues["msa_managingpartnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartneridyominame")]
		public string MsA_ManagingPartnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msa_managingpartnerid"))
				{
					return this.FormattedValues["msa_managingpartnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_accountkpiid")]
		public Microsoft.Xrm.Sdk.EntityReference Msdyn_AccountKPiId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_accountkpiid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_accountkpiid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_accountkpiidname")]
		public string Msdyn_AccountKPiIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_accountkpiid"))
				{
					return this.FormattedValues["msdyn_accountkpiid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Beschreibt, ob Konto ausgeschlossen ist oder nicht
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public System.Nullable<bool> Msdyn_GdPrOptOut
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msdyn_gdproptout");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_gdproptout", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptoutname")]
		public string Msdyn_GdPrOptOutName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_gdproptout"))
				{
					return this.FormattedValues["msdyn_gdproptout"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gibt die primäre Zeitzone an, in der der Client arbeitet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
		public System.Nullable<int> Msdyn_PrimaryTimeZone
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msdyn_primarytimezone");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_primarytimezone", value);
			}
		}
		
		/// <summary>
		/// ID der Erkenntnisse zur Vertriebsbeschleunigung
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salesaccelerationinsightid")]
		public Microsoft.Xrm.Sdk.EntityReference Msdyn_SalesAccelerationInsightId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_salesaccelerationinsightid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_salesaccelerationinsightid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_salesaccelerationinsightidname")]
		public string Msdyn_SalesAccelerationInsightIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_salesaccelerationinsightid"))
				{
					return this.FormattedValues["msdyn_salesaccelerationinsightid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner für das Segment, das account zugeordnet ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentid")]
		public Microsoft.Xrm.Sdk.EntityReference Msdyn_SegmentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_segmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyn_segmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_segmentidname")]
		public string Msdyn_SegmentIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msdyn_segmentid"))
				{
					return this.FormattedValues["msdyn_segmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyncrm_insights_placeholder")]
		public string MsdynCrm_Insights_Placeholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msdyncrm_insights_placeholder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msdyncrm_insights_placeholder", value);
			}
		}
		
		/// <summary>
		/// Gibt an, ob diese Firma einer Hotelgruppe gehört.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_hotelgroup")]
		public virtual MSeVTmGt_NoOrYes? MSeVTmGt_HotelGroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((MSeVTmGt_NoOrYes?)(EntityOptionSetEnum.GetEnum(this, "msevtmgt_hotelgroup")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msevtmgt_hotelgroup", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_hotelgroupname")]
		public string MSeVTmGt_HotelGroupName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msevtmgt_hotelgroup"))
				{
					return this.FormattedValues["msevtmgt_hotelgroup"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_rentalcarprovider")]
		public virtual MSeVTmGt_NoOrYes? MSeVTmGt_RentalCarProvider
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((MSeVTmGt_NoOrYes?)(EntityOptionSetEnum.GetEnum(this, "msevtmgt_rentalcarprovider")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("msevtmgt_rentalcarprovider", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msevtmgt_rentalcarprovidername")]
		public string MSeVTmGt_RentalCarProviderName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msevtmgt_rentalcarprovider"))
				{
					return this.FormattedValues["msevtmgt_rentalcarprovider"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastate")]
		public virtual MsFt_DataState? MsFt_DataState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((MsFt_DataState?)(EntityOptionSetEnum.GetEnum(this, "msft_datastate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msft_datastatename")]
		public string MsFt_DataStateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("msft_datastate"))
				{
					return this.FormattedValues["msft_datastate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den Namen des Unternehmens oder der Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Anzahl der Beschäftigen der Firma für die Marketingsegmentierung und die demografische Analyse ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofemployees")]
		public System.Nullable<int> NumberOfEmployees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofemployees");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("numberofemployees", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_address3_city")]
		public string OC_Address3_City
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_address3_city");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_address3_city", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_address3_line1")]
		public string OC_Address3_Line1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_address3_line1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_address3_line1", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_address3_line2")]
		public string OC_Address3_Line2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_address3_line2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_address3_line2", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_address3_line3")]
		public string OC_Address3_Line3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_address3_line3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_address3_line3", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_address3_postlacode")]
		public string OC_Address3_PostLaCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_address3_postlacode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_address3_postlacode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_emailcount")]
		public System.Nullable<int> OC_EmailCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_emailcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_emailcount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_faxcount")]
		public System.Nullable<int> OC_FaxCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_faxcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_faxcount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_msv3count")]
		public System.Nullable<int> OC_MSv3Count
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_msv3count");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_msv3count", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnitestbemerkungen")]
		public string OC_OMnITestBeMeRKUnGen
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_omnitestbemerkungen");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnitestbemerkungen", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnitestkontaktzeitfenster")]
		public string OC_OMnITestKOnTAkTZEITfENSteR
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("oc_omnitestkontaktzeitfenster");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnitestkontaktzeitfenster", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnitestmoglichewirkstoffe")]
		public virtual System.Collections.Generic.IEnumerable<OC_Account_OC_OMnITeSTmOgLIcHeWIrKStOffE> OC_OMnITeSTmOgLIcHeWIrKStOffE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<OC_Account_OC_OMnITeSTmOgLIcHeWIrKStOffE>(this, "oc_omnitestmoglichewirkstoffe");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_omnitestmoglichewirkstoffe", EntityOptionSetEnum.GetMultiEnum(this, "oc_omnitestmoglichewirkstoffe", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_omnitestmoglichewirkstoffename")]
		public string OC_OMnITeSTmOgLIcHeWIrKStOffEName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_omnitestmoglichewirkstoffe"))
				{
					return this.FormattedValues["oc_omnitestmoglichewirkstoffe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_orderchannelscode")]
		public virtual System.Collections.Generic.IEnumerable<OC_OrderChannelsCode> OC_OrderChannelsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<OC_OrderChannelsCode>(this, "oc_orderchannelscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_orderchannelscode", EntityOptionSetEnum.GetMultiEnum(this, "oc_orderchannelscode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_orderchannelscodename")]
		public string OC_OrderChannelsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_orderchannelscode"))
				{
					return this.FormattedValues["oc_orderchannelscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_ownedbyid")]
		public Microsoft.Xrm.Sdk.EntityReference OC_OwnedById
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("oc_ownedbyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_ownedbyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_ownedbyidname")]
		public string OC_OwnedByIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_ownedbyid"))
				{
					return this.FormattedValues["oc_ownedbyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_ownedbyidyominame")]
		public string OC_OwnedByIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_ownedbyid"))
				{
					return this.FormattedValues["oc_ownedbyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_platformbound")]
		public System.Nullable<bool> OC_PlatformBound
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("oc_platformbound");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_platformbound", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_platformboundname")]
		public string OC_PlatformBoundName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_platformbound"))
				{
					return this.FormattedValues["oc_platformbound"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_platformcode")]
		public virtual OC_PlatformBoundCode? OC_PlatformCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((OC_PlatformBoundCode?)(EntityOptionSetEnum.GetEnum(this, "oc_platformcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_platformcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_platformcodename")]
		public string OC_PlatformCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_platformcode"))
				{
					return this.FormattedValues["oc_platformcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_purchasingcommunitycode")]
		public virtual System.Collections.Generic.IEnumerable<Con_PurchasingCommunityOpt> OC_PurchasingCommunityCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<Con_PurchasingCommunityOpt>(this, "oc_purchasingcommunitycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_purchasingcommunitycode", EntityOptionSetEnum.GetMultiEnum(this, "oc_purchasingcommunitycode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_purchasingcommunitycodename")]
		public string OC_PurchasingCommunityCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_purchasingcommunitycode"))
				{
					return this.FormattedValues["oc_purchasingcommunitycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_steribasecount")]
		public System.Nullable<int> OC_SteRiBaseCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_steribasecount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_steribasecount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_telephonecount")]
		public System.Nullable<int> OC_TelephoneCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("oc_telephonecount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_telephonecount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_usedsoftwarecode")]
		public virtual System.Collections.Generic.IEnumerable<OC_UsedSoftwareCode> OC_UsedSoftwareCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<OC_UsedSoftwareCode>(this, "oc_usedsoftwarecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("oc_usedsoftwarecode", EntityOptionSetEnum.GetMultiEnum(this, "oc_usedsoftwarecode", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oc_usedsoftwarecodename")]
		public string OC_UsedSoftwareCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("oc_usedsoftwarecode"))
				{
					return this.FormattedValues["oc_usedsoftwarecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Die Dauer der Zurückstellung des Datensatzes in Minuten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Anzahl der offenen Verkaufschancen für eine Firma und ihre untergeordneten Firmen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals")]
		public System.Nullable<int> OpenDeals
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opendeals");
			}
		}
		
		/// <summary>
		/// Zeit der letzten Aktualisierung des Rollupfelds "Offene Aufträge".
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_date")]
		public System.Nullable<System.DateTime> OpenDeals_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("opendeals_date");
			}
		}
		
		/// <summary>
		/// Status des Rollupfelds "Offene Aufträge".
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opendeals_state")]
		public System.Nullable<int> OpenDeals_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opendeals_state");
			}
		}
		
		/// <summary>
		/// Summe der offenen Umsätze für eine Firma und ihre untergeordneten Firmen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue")]
		public Microsoft.Xrm.Sdk.Money OpenRevenue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue");
			}
		}
		
		/// <summary>
		/// Wert von 'Offener Umsatz' in der Basiswährung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_base")]
		public Microsoft.Xrm.Sdk.Money OpenRevenue_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("openrevenue_base");
			}
		}
		
		/// <summary>
		/// Zeit der letzten Aktualisierung des Rollupfelds "Offener Umsatz".
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_date")]
		public System.Nullable<System.DateTime> OpenRevenue_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("openrevenue_date");
			}
		}
		
		/// <summary>
		/// Status des Rollupfelds "Offener Umsatz".
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("openrevenue_state")]
		public System.Nullable<int> OpenRevenue_State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("openrevenue_state");
			}
		}
		
		/// <summary>
		/// Zeigt den Lead an, auf dessen Grundlage das Konto erstellt wurde (sofern das Konto durch die Konvertierung eines Leads in Microsoft Dynamics 365 entstanden ist). Wird verwendet, um das Konto für die Berichterstellung und Analyse mit Daten des ursprünglichen Leads zu verknüpfen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("originatingleadid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidname")]
		public string OriginatingLeadIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadidyominame")]
		public string OriginatingLeadIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("originatingleadid"))
				{
					return this.FormattedValues["originatingleadid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Datum und Uhrzeit der Migration des Datensatzes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Benutzer oder das Team ein, der bzw. das mit der Verwaltung des Datensatzes betraut ist. Dieses Feld wird aktualisiert, wenn der Datensatz einem anderen Benutzer zugewiesen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Besitzstruktur der Firma aus (beispielsweise öffentlich oder privat).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownershipcode")]
		public virtual Account_OwnershipCode? OwnershipCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_OwnershipCode?)(EntityOptionSetEnum.GetEnum(this, "ownershipcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownershipcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownershipcodename")]
		public string OwnershipCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownershipcode"))
				{
					return this.FormattedValues["ownershipcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt die Unternehmenseinheit, der der Datensatzbesitzer angehört.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("owningbusinessunit", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Teams, das im Besitz der Firma ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Eindeutiger Bezeichner des Benutzers, der im Besitz der Firma ist.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Wählen Sie die übergeordnete Firma aus, die dieser Firma zugeordnet ist, um über- und untergeordnete Unternehmen in Berichten und Analysen anzuzeigen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentAccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentaccountid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("parentaccountid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidname")]
		public string ParentAccountIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountidyominame")]
		public string ParentAccountIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("parentaccountid"))
				{
					return this.FormattedValues["parentaccountid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Systeminterne Angabe. Ältere Microsoft Dynamics CRM 3.0-Workflowdaten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public System.Nullable<bool> ParticipatesInWorkflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("participatesinworkflow");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("participatesinworkflow", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflowname")]
		public string ParticipatesInWorkflowName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("participatesinworkflow"))
				{
					return this.FormattedValues["participatesinworkflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Zahlungsbedingungen aus, um anzugeben, wann der Kunde den Gesamtbetrag bezahlen muss.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
		public virtual Account_PaymentTermsCode? PaymentTermsCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_PaymentTermsCode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscodename")]
		public string PaymentTermsCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("paymenttermscode"))
				{
					return this.FormattedValues["paymenttermscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den bevorzugten Wochentag für Servicetermine aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public virtual Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_PreferredAppointmentDayCode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycodename")]
		public string PreferredAppointmentDayCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredappointmentdaycode"))
				{
					return this.FormattedValues["preferredappointmentdaycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Tageszeit für Servicetermine aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public virtual Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_PreferredAppointmentTimeCode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecodename")]
		public string PreferredAppointmentTimeCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredappointmenttimecode"))
				{
					return this.FormattedValues["preferredappointmenttimecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Kontaktmethode aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public virtual Account_PreferredContactMethodCode? PreferredContactMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_PreferredContactMethodCode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcodename")]
		public string PreferredContactMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredcontactmethodcode"))
				{
					return this.FormattedValues["preferredcontactmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die bevorzugte Serviceeinrichtung oder das bevorzugte Arbeitsgerät für die Firma aus, um eine korrekte Serviceplanung für den Kunden sicherzustellen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredEquipmentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredequipmentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentidname")]
		public string PreferredEquipmentIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredequipmentid"))
				{
					return this.FormattedValues["preferredequipmentid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den bevorzugten Service der Firma zur Bezugnahme bei der Planung von Serviceaktivitäten aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredServiceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredserviceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceidname")]
		public string PreferredServiceIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredserviceid"))
				{
					return this.FormattedValues["preferredserviceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den bevorzugten Servicemitarbeiter zur Bezugnahme bei der Planung von Serviceaktivitäten für die Firma aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredSystemUserId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("preferredsystemuserid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridname")]
		public string PreferredSystemUserIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredsystemuserid"))
				{
					return this.FormattedValues["preferredsystemuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
		public string PreferredSystemUserIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("preferredsystemuserid"))
				{
					return this.FormattedValues["preferredsystemuserid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den primären Kontakt für die Firma aus, um den schnellen Zugriff auf Kontaktdetails zu ermöglichen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		public Microsoft.Xrm.Sdk.EntityReference PrimaryContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarycontactid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidname")]
		public string PrimaryContactIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("primarycontactid"))
				{
					return this.FormattedValues["primarycontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactidyominame")]
		public string PrimaryContactIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("primarycontactid"))
				{
					return this.FormattedValues["primarycontactid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Primäre Satori-ID für die Firma
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarysatoriid")]
		public string PrimarySatoriId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primarysatoriid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarysatoriid", value);
			}
		}
		
		/// <summary>
		/// Primäre Twitter-ID für die Firma
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarytwitterid")]
		public string PrimaryTwitterId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("primarytwitterid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("primarytwitterid", value);
			}
		}
		
		/// <summary>
		/// Zeigt die ID des Prozesses.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Geben Sie den Jahresumsatz für die Firma ein. Dieser Wert wird als Indikator bei der Finanzanalyse verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue")]
		public Microsoft.Xrm.Sdk.Money Revenue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("revenue", value);
			}
		}
		
		/// <summary>
		/// Zeigt den in die standardmäßige Basiswährung des Systems konvertierten Jahresumsatz. Zur Berechnung wird der Wechselkurs aus dem Bereich 'Währungen' herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("revenue_base")]
		public Microsoft.Xrm.Sdk.Money Revenue_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("revenue_base");
			}
		}
		
		/// <summary>
		/// Geben Sie die Anzahl der öffentlich verfügbaren Aktien der Firma ein. Dieser Wert wird als Indikator bei der Finanzanalyse verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharesoutstanding")]
		public System.Nullable<int> SharesOutstanding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sharesoutstanding");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sharesoutstanding", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie eine Versandmethode für Lieferungen an die Adresse der Firma aus, um den bevorzugten Frachtführer oder eine andere Lieferoption anzugeben.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
		public virtual Account_ShippingMethodCode? ShippingMethodCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_ShippingMethodCode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcodename")]
		public string ShippingMethodCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("shippingmethodcode"))
				{
					return this.FormattedValues["shippingmethodcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie den NACE-Code ein, der Aufschluss über die primäre Branche der Firma gibt. Dieser Wert wird für die Marketingsegmentierung und die demografische Analyse herangezogen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sic")]
		public string Sic
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("sic");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("sic", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die Vereinbarung zum Servicelevel (Service Level Agreement, SLA) aus, die Sie auf den Firmendatensatz anwenden möchten.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SlaId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Die letzte auf diese Anfrage angewendete SLA. Dieses Feld dient nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SlaInvokedId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SlaInvokedIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SlaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Zeigt die ID der Phase.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Zeigt, ob die Firma aktiv oder inaktiv ist. Inaktive Firmen sind schreibgeschützt und können erst nach ihrer Reaktivierung bearbeitet werden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual Account_StateCode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_StateCode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie den Status der Firma aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Account_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie die Börse ein, an der die Firma notiert ist, um den Kurs und die finanzielle Situation des Unternehmens zu verfolgen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stockexchange")]
		public string StockExchange
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("stockexchange");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stockexchange", value);
			}
		}
		
		/// <summary>
		/// Die Anzahl der Benutzer oder Unterhaltungen, die dem Datensatz folgen
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public System.Nullable<int> TeamsFollowed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("teamsfollowed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("teamsfollowed", value);
			}
		}
		
		/// <summary>
		/// Geben Sie die Haupttelefonnummer für diese Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
		public string Telephone1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone1", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine zweite Telefonnummer für diese Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
		public string Telephone2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone2", value);
			}
		}
		
		/// <summary>
		/// Geben Sie eine dritte Telefonnummer für diese Firma ein.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
		public string Telephone3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("telephone3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("telephone3", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie zu Segmentierungs- und Analysezwecken eine Region oder ein Gebiet für die Firma aus.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
		public virtual Account_TerritoryCode? TerritoryCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Account_TerritoryCode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycodename")]
		public string TerritoryCodename
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("territorycode"))
				{
					return this.FormattedValues["territorycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Wählen Sie die Vertriebsregion oder das Vertriebsgebiet für die Firma aus, um sicherzustellen, dass sie dem korrekten Mitarbeiter zugewiesen wird. Dieser Wert wird auch für die Segmentierung und Analyse verwendet.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryid")]
		public Microsoft.Xrm.Sdk.EntityReference TerritoryId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("territoryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("territoryid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territoryidname")]
		public string TerritoryIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("territoryid"))
				{
					return this.FormattedValues["territoryid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Geben Sie das Börsensymbol für die Firma ein, um die finanzielle Situation des Unternehmens zu verfolgen. Durch Klicken auf den Code in diesem Feld können Sie die neuesten Trading-Informationen von MSN Money aufrufen.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tickersymbol")]
		public string TickerSymbol
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("tickersymbol");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("tickersymbol", value);
			}
		}
		
		/// <summary>
		/// Von mir aufgewendete Gesamtzeit für E-Mails (lesen und schreiben) und Meetings in Bezug auf den Firmendatensatz
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMeOnEmailAndMeetings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Wählen Sie die lokale Währung für den Datensatz aus, um sicherzustellen, dass Budgets in der korrekten Währung ausgewiesen werden.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nur zur internen Verwendung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Zeitzonencode, der bei Erstellung des Datensatzes verwendet wurde.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UtcConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Versionsnummer des Kontos.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Geben Sie die Website-URL der Firma ein, um sich schnell über Details des Unternehmensprofils zu informieren.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
		public string WebsiteUrl
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("websiteurl");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("websiteurl", value);
			}
		}
		
		/// <summary>
		/// Geben Sie bei Angabe in japanischer Sprache die phonetische Schreibweise des Unternehmensnamens ein, um sicherzustellen, dass der Name bei Telefongesprächen und anderer Kommunikation korrekt ausgesprochen wird.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string YomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("yominame", value);
			}
		}
		
		/// <summary>
		/// 1:N account_master_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedAccount_Master_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N account_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedAccount_Parent_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N con_account_account_former_company
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedCon_Account_Account_Former_Company
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N con_account_contact_accountid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_contact_accountid")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> Con_Account_Contact_AccountId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("con_account_contact_accountid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("con_account_contact_accountid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N con_account_contact_stakeholderid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_contact_stakeholderid")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> Con_Account_Contact_StakeholderId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("con_account_contact_stakeholderid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("con_account_contact_stakeholderid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N contact_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> Contact_Customer_Accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("contact_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("contact_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N msa_account_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedMSa_Account_ManagingPartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N msa_contact_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Contact> MSa_Contact_ManagingPartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Contact>("msa_contact_managingpartner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Contact>("msa_contact_managingpartner", null, value);
			}
		}
		
		/// <summary>
		/// 1:N quote_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("quote_customer_accounts")]
		public System.Collections.Generic.IEnumerable<DataverseModel.Quote> Quote_Customer_Accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Quote>("quote_customer_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Quote>("quote_customer_accounts", null, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencingCon_Account_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedCon_Account_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account_aiapos
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencingCon_Account_Account_AIaPos
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account_aiapos
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedCon_Account_Account_AIaPos
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account_aiapos", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account_Stakeholder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencingCon_Account_Account_Stakeholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:N con_account_account_Stakeholder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<DataverseModel.Account> ReferencedCon_Account_Account_Stakeholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<DataverseModel.Account>("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<DataverseModel.Account>("con_account_account_Stakeholder", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:1 account_master_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Account ReferencingAccount_Master_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("account_master_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 account_parent_account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentaccountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Account ReferencingAccount_Parent_Account
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("account_parent_account", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 account_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
		public DataverseModel.Contact Account_Primary_Contact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("account_primary_contact", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("account_primary_contact", null, value);
			}
		}
		
		/// <summary>
		/// N:1 con_account_account_former_company
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_formeraccountid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Account ReferencingCon_Account_Account_Former_Company
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("con_account_account_former_company", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 con_contact_account_contactid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_contactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_contact_account_contactid")]
		public DataverseModel.Contact Con_Contact_Account_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("con_contact_account_contactid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("con_contact_account_contactid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 con_contact_account_managingdoctorid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("con_managingdoctorid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("con_contact_account_managingdoctorid")]
		public DataverseModel.Contact Con_Contact_Account_ManagingDoctorId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Contact>("con_contact_account_managingdoctorid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Contact>("con_contact_account_managingdoctorid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 msa_account_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public DataverseModel.Account ReferencingMsA_Account_ManagingPartner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<DataverseModel.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<DataverseModel.Account>("msa_account_managingpartner", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Account(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["accountid"] = base.Id;
                        break;
                    case "accountid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
